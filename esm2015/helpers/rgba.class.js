import { BaseColor } from './base-color.class';
/**
 * RGB (Red Green Blue)
 *
 * Red = ranges from 0-255
 * Green = ranges from 0-255
 * Blue = ranges from 0-255
 * Alpha = range from 0-1
 */
export class Rgba extends BaseColor {
    constructor(red, green, blue, alpha) {
        super();
        this.red = red;
        this.green = green;
        this.blue = blue;
        this.alpha = alpha;
    }
    toString(showAlphaChannel = true) {
        return showAlphaChannel
            ? `rgba(${this.getRed()}, ${this.getGreen()}, ${this.getBlue()}, ${this.getAlpha()})`
            : `rgb(${this.getRed()}, ${this.getGreen()}, ${this.getBlue()})`;
    }
    getRed() {
        return Math.round(this.red);
    }
    getGreen() {
        return Math.round(this.green);
    }
    getBlue() {
        return Math.round(this.blue);
    }
    getAlpha() {
        return Math.round(this.alpha * 100) / 100;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmdiYS5jbGFzcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BpcGxhYi9uZ3gtY29sb3ItcGlja2VyLyIsInNvdXJjZXMiOlsiaGVscGVycy9yZ2JhLmNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUUvQzs7Ozs7OztHQU9HO0FBQ0gsTUFBTSxPQUFPLElBQUssU0FBUSxTQUFTO0lBRS9CLFlBQW1CLEdBQVcsRUFBUyxLQUFhLEVBQVMsSUFBWSxFQUFTLEtBQWE7UUFDM0YsS0FBSyxFQUFFLENBQUM7UUFETyxRQUFHLEdBQUgsR0FBRyxDQUFRO1FBQVMsVUFBSyxHQUFMLEtBQUssQ0FBUTtRQUFTLFNBQUksR0FBSixJQUFJLENBQVE7UUFBUyxVQUFLLEdBQUwsS0FBSyxDQUFRO0lBRS9GLENBQUM7SUFFTSxRQUFRLENBQUMsbUJBQTRCLElBQUk7UUFDNUMsT0FBTyxnQkFBZ0I7WUFDbkIsQ0FBQyxDQUFDLFFBQVEsSUFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLElBQUksQ0FBQyxRQUFRLEVBQUUsS0FBSyxJQUFJLENBQUMsT0FBTyxFQUFFLEtBQUssSUFBSSxDQUFDLFFBQVEsRUFBRSxHQUFHO1lBQ3JGLENBQUMsQ0FBQyxPQUFPLElBQUksQ0FBQyxNQUFNLEVBQUUsS0FBSyxJQUFJLENBQUMsUUFBUSxFQUFFLEtBQUssSUFBSSxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUM7SUFDekUsQ0FBQztJQUVNLE1BQU07UUFDVCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFTSxRQUFRO1FBQ1gsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRU0sT0FBTztRQUNWLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVNLFFBQVE7UUFDWCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUM7SUFDOUMsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZUNvbG9yIH0gZnJvbSAnLi9iYXNlLWNvbG9yLmNsYXNzJztcblxuLyoqXG4gKiBSR0IgKFJlZCBHcmVlbiBCbHVlKVxuICogXG4gKiBSZWQgPSByYW5nZXMgZnJvbSAwLTI1NVxuICogR3JlZW4gPSByYW5nZXMgZnJvbSAwLTI1NVxuICogQmx1ZSA9IHJhbmdlcyBmcm9tIDAtMjU1XG4gKiBBbHBoYSA9IHJhbmdlIGZyb20gMC0xXG4gKi9cbmV4cG9ydCBjbGFzcyBSZ2JhIGV4dGVuZHMgQmFzZUNvbG9yIHtcblxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyByZWQ6IG51bWJlciwgcHVibGljIGdyZWVuOiBudW1iZXIsIHB1YmxpYyBibHVlOiBudW1iZXIsIHB1YmxpYyBhbHBoYTogbnVtYmVyKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuXG4gICAgcHVibGljIHRvU3RyaW5nKHNob3dBbHBoYUNoYW5uZWw6IGJvb2xlYW4gPSB0cnVlKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHNob3dBbHBoYUNoYW5uZWwgXG4gICAgICAgICAgICA/IGByZ2JhKCR7dGhpcy5nZXRSZWQoKX0sICR7dGhpcy5nZXRHcmVlbigpfSwgJHt0aGlzLmdldEJsdWUoKX0sICR7dGhpcy5nZXRBbHBoYSgpfSlgXG4gICAgICAgICAgICA6IGByZ2IoJHt0aGlzLmdldFJlZCgpfSwgJHt0aGlzLmdldEdyZWVuKCl9LCAke3RoaXMuZ2V0Qmx1ZSgpfSlgO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRSZWQoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodGhpcy5yZWQpO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRHcmVlbigpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCh0aGlzLmdyZWVuKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0Qmx1ZSgpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCh0aGlzLmJsdWUpO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRBbHBoYSgpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCh0aGlzLmFscGhhICogMTAwKSAvIDEwMDtcbiAgICB9XG59XG4iXX0=