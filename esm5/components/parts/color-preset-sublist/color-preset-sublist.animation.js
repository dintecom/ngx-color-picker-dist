import { trigger, stagger, query, transition, animate, style, state } from '@angular/animations';
export var OpacityAnimation = trigger('opacityAnimation', [
    state('true', style({ opacity: 1 })),
    transition('void => *', [
        style({ opacity: 0 }),
        animate('.08s ease-in')
    ])
]);
export var ListAnimation = trigger('listAnimation', [
    transition('* => up', [
        query(':enter', [
            style({ opacity: 0, height: 0 }),
            stagger(-10, [
                animate('.08s', style({ opacity: 1, height: '*' }))
            ])
        ], { optional: true })
    ]),
    transition('* => right', [
        query(':enter', [
            style({ opacity: 0, height: 0 }),
            stagger(-10, [
                animate('.08s', style({ opacity: 1, height: '*' }))
            ])
        ], { optional: true })
    ]),
    transition('* => down', [
        query(':enter', [
            style({ opacity: 0, height: 0 }),
            stagger(10, [
                animate('.08s', style({ opacity: 1, height: '*' }))
            ])
        ], { optional: true })
    ]),
    transition('* => left', [
        query(':enter', [
            style({ opacity: 0, height: 0 }),
            stagger(10, [
                animate('.08s', style({ opacity: 1, height: '*' }))
            ])
        ], { optional: true })
    ])
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3ItcHJlc2V0LXN1Ymxpc3QuYW5pbWF0aW9uLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGlwbGFiL25neC1jb2xvci1waWNrZXIvIiwic291cmNlcyI6WyJjb21wb25lbnRzL3BhcnRzL2NvbG9yLXByZXNldC1zdWJsaXN0L2NvbG9yLXByZXNldC1zdWJsaXN0LmFuaW1hdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0gsT0FBTyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQ3pCLFVBQVUsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFDaEMsTUFBTSxxQkFBcUIsQ0FBQztBQUcvQixNQUFNLENBQUMsSUFBTSxnQkFBZ0IsR0FBRyxPQUFPLENBQUMsa0JBQWtCLEVBQUU7SUFDeEQsS0FBSyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNwQyxVQUFVLENBQUMsV0FBVyxFQUFFO1FBQ3BCLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQztRQUNyQixPQUFPLENBQUMsY0FBYyxDQUFDO0tBQzFCLENBQUM7Q0FDTCxDQUFDLENBQUE7QUFHRixNQUFNLENBQUMsSUFBTSxhQUFhLEdBQUcsT0FBTyxDQUFDLGVBQWUsRUFBRTtJQUNsRCxVQUFVLENBQUMsU0FBUyxFQUFFO1FBQ2xCLEtBQUssQ0FBQyxRQUFRLEVBQUU7WUFDWixLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQztZQUNoQyxPQUFPLENBQUMsQ0FBQyxFQUFFLEVBQUU7Z0JBQ1QsT0FBTyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO2FBQ3RELENBQUM7U0FDTCxFQUFFLEVBQUMsUUFBUSxFQUFFLElBQUksRUFBQyxDQUFDO0tBQ3ZCLENBQUM7SUFDRixVQUFVLENBQUMsWUFBWSxFQUFFO1FBQ3JCLEtBQUssQ0FBQyxRQUFRLEVBQUU7WUFDWixLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQztZQUNoQyxPQUFPLENBQUMsQ0FBQyxFQUFFLEVBQUU7Z0JBQ1QsT0FBTyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO2FBQ3RELENBQUM7U0FDTCxFQUFFLEVBQUMsUUFBUSxFQUFFLElBQUksRUFBQyxDQUFDO0tBQ3ZCLENBQUM7SUFDRixVQUFVLENBQUMsV0FBVyxFQUFFO1FBQ3BCLEtBQUssQ0FBQyxRQUFRLEVBQUU7WUFDWixLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQztZQUNoQyxPQUFPLENBQUMsRUFBRSxFQUFFO2dCQUNSLE9BQU8sQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQzthQUN0RCxDQUFDO1NBQ0wsRUFBRSxFQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUMsQ0FBQztLQUN2QixDQUFDO0lBQ0YsVUFBVSxDQUFDLFdBQVcsRUFBRTtRQUNwQixLQUFLLENBQUMsUUFBUSxFQUFFO1lBQ1osS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUM7WUFDaEMsT0FBTyxDQUFDLEVBQUUsRUFBRTtnQkFDUixPQUFPLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7YUFDdEQsQ0FBQztTQUNMLEVBQUUsRUFBQyxRQUFRLEVBQUUsSUFBSSxFQUFDLENBQUM7S0FDdkIsQ0FBQztDQUNMLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgdHJpZ2dlciwgc3RhZ2dlciwgcXVlcnksXG4gIHRyYW5zaXRpb24sIGFuaW1hdGUsIHN0eWxlLCBzdGF0ZVxuICB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuXG5cbmV4cG9ydCBjb25zdCBPcGFjaXR5QW5pbWF0aW9uID0gdHJpZ2dlcignb3BhY2l0eUFuaW1hdGlvbicsIFtcbiAgICBzdGF0ZSgndHJ1ZScsIHN0eWxlKHsgb3BhY2l0eTogMSB9KSksXG4gICAgdHJhbnNpdGlvbigndm9pZCA9PiAqJywgW1xuICAgICAgICBzdHlsZSh7IG9wYWNpdHk6IDAgfSksXG4gICAgICAgIGFuaW1hdGUoJy4wOHMgZWFzZS1pbicpXG4gICAgXSlcbl0pXG5cblxuZXhwb3J0IGNvbnN0IExpc3RBbmltYXRpb24gPSB0cmlnZ2VyKCdsaXN0QW5pbWF0aW9uJywgW1xuICAgIHRyYW5zaXRpb24oJyogPT4gdXAnLCBbXG4gICAgICAgIHF1ZXJ5KCc6ZW50ZXInLCBbXG4gICAgICAgICAgICBzdHlsZSh7IG9wYWNpdHk6IDAsIGhlaWdodDogMCB9KSxcbiAgICAgICAgICAgIHN0YWdnZXIoLTEwLCBbXG4gICAgICAgICAgICAgICAgYW5pbWF0ZSgnLjA4cycsIHN0eWxlKHsgb3BhY2l0eTogMSwgaGVpZ2h0OiAnKicgfSkpXG4gICAgICAgICAgICBdKVxuICAgICAgICBdLCB7b3B0aW9uYWw6IHRydWV9KVxuICAgIF0pLFxuICAgIHRyYW5zaXRpb24oJyogPT4gcmlnaHQnLCBbXG4gICAgICAgIHF1ZXJ5KCc6ZW50ZXInLCBbXG4gICAgICAgICAgICBzdHlsZSh7IG9wYWNpdHk6IDAsIGhlaWdodDogMCB9KSxcbiAgICAgICAgICAgIHN0YWdnZXIoLTEwLCBbXG4gICAgICAgICAgICAgICAgYW5pbWF0ZSgnLjA4cycsIHN0eWxlKHsgb3BhY2l0eTogMSwgaGVpZ2h0OiAnKicgfSkpXG4gICAgICAgICAgICBdKVxuICAgICAgICBdLCB7b3B0aW9uYWw6IHRydWV9KVxuICAgIF0pLFxuICAgIHRyYW5zaXRpb24oJyogPT4gZG93bicsIFtcbiAgICAgICAgcXVlcnkoJzplbnRlcicsIFtcbiAgICAgICAgICAgIHN0eWxlKHsgb3BhY2l0eTogMCwgaGVpZ2h0OiAwIH0pLFxuICAgICAgICAgICAgc3RhZ2dlcigxMCwgW1xuICAgICAgICAgICAgICAgIGFuaW1hdGUoJy4wOHMnLCBzdHlsZSh7IG9wYWNpdHk6IDEsIGhlaWdodDogJyonIH0pKVxuICAgICAgICAgICAgXSlcbiAgICAgICAgXSwge29wdGlvbmFsOiB0cnVlfSlcbiAgICBdKSxcbiAgICB0cmFuc2l0aW9uKCcqID0+IGxlZnQnLCBbXG4gICAgICAgIHF1ZXJ5KCc6ZW50ZXInLCBbXG4gICAgICAgICAgICBzdHlsZSh7IG9wYWNpdHk6IDAsIGhlaWdodDogMCB9KSxcbiAgICAgICAgICAgIHN0YWdnZXIoMTAsIFtcbiAgICAgICAgICAgICAgICBhbmltYXRlKCcuMDhzJywgc3R5bGUoeyBvcGFjaXR5OiAxLCBoZWlnaHQ6ICcqJyB9KSlcbiAgICAgICAgICAgIF0pXG4gICAgICAgIF0sIHtvcHRpb25hbDogdHJ1ZX0pXG4gICAgXSlcbl0pIl19