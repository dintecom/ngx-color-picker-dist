{"version":3,"file":"iplab-ngx-color-picker.mjs","sources":["../../../projects/iplab/ngx-color-picker/src/lib/helpers/base-color.class.ts","../../../projects/iplab/ngx-color-picker/src/lib/helpers/cmyk.class.ts","../../../projects/iplab/ngx-color-picker/src/lib/helpers/hsla.class.ts","../../../projects/iplab/ngx-color-picker/src/lib/helpers/hsva.class.ts","../../../projects/iplab/ngx-color-picker/src/lib/helpers/rgba.class.ts","../../../projects/iplab/ngx-color-picker/src/lib/helpers/colors-table.class.ts","../../../projects/iplab/ngx-color-picker/src/lib/helpers/color.class.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/base.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/saturation/saturation.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/saturation/saturation.component.html","../../../projects/iplab/ngx-color-picker/src/lib/services/color-picker.service.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/indicator/indicator.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/indicator/indicator.component.html","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/hue/hue.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/hue/hue.component.html","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/alpha/alpha.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/alpha/alpha.component.html","../../../projects/iplab/ngx-color-picker/src/lib/directives/color-picker-input.directive.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/inputs/rgba-input/rgba-input.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/inputs/rgba-input/rgba-input.component.html","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/inputs/hsla-input/hsla-input.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/inputs/hsla-input/hsla-input.component.html","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/inputs/hex-input/hex-input.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/inputs/hex-input/hex-input.component.html","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/color-preset/color-preset.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/color-preset-sublist/color-preset-sublist.animation.ts","../../../projects/iplab/ngx-color-picker/src/lib/pipes/reverse.pipe.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/color-preset-sublist/color-preset-sublist.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/color-preset-sublist/color-preset-sublist.component.html","../../../projects/iplab/ngx-color-picker/src/lib/pipes/chunks.pipe.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/color-presets/color-presets.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/color-presets/color-presets.component.html","../../../projects/iplab/ngx-color-picker/src/lib/helpers/control.class.ts","../../../projects/iplab/ngx-color-picker/src/lib/helpers/helper.functions.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/chrome-picker/chrome-picker.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/chrome-picker/chrome-picker.component.html","../../../projects/iplab/ngx-color-picker/src/lib/components/sketch-picker/sketch-picker.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/sketch-picker/sketch-picker.component.html","../../../projects/iplab/ngx-color-picker/src/lib/components/compact-picker/compact-picker.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/compact-picker/compact-picker.component.html","../../../projects/iplab/ngx-color-picker/src/lib/components/github-picker/github-picker.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/github-picker/github-picker.component.html","../../../projects/iplab/ngx-color-picker/src/lib/components/swatches-picker/swatches-picker.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/swatches-picker/swatches-picker.component.html","../../../projects/iplab/ngx-color-picker/src/lib/components/ip-picker/ip-picker.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/ip-picker/ip-picker.component.html","../../../projects/iplab/ngx-color-picker/src/lib/color-picker.module.ts","../../../projects/iplab/ngx-color-picker/src/iplab-ngx-color-picker.ts"],"sourcesContent":["\n\nexport abstract class BaseColor {\n    public abstract toString(showAlpha?: boolean): string;\n}\n","import { BaseColor } from './base-color.class';\n\n/**\n * CMYK color space\n *\n * Cyan = ranges from 0 to 100%\n * Magenta = ranges from 0 to 100%\n * Yellow = ranges from 0 to 100%\n * blacK = ranges from 0 to 100%\n */\nexport class Cmyk extends BaseColor {\n\n    constructor(public cyan: number, public magenta: number, public yellow: number, public black: number) {\n        super();\n    }\n\n    public toString(): string {\n        return `cmyk(${this.getCyan()}%, ${this.getMagenta()}%, ${this.getYellow()}%, ${this.getBlack()}%)`;\n    }\n\n    public getCyan() {\n        return Math.round(this.cyan);\n    }\n\n    public getMagenta() {\n        return Math.round(this.magenta);\n    }\n\n    public getYellow() {\n        return Math.round(this.yellow);\n    }\n\n    public getBlack() {\n        return Math.round(this.black);\n    }\n}\n","import { BaseColor } from './base-color.class';\n\n/**\n * HSL and HSI are the same\n * \n * Hue = ranges from 0 to 360°\n * Saturation = ranges from 0 to 100%\n * Lightness or Intensity = ranges from 0 to 100%\n * Alpha = range from 0-1\n */\nexport class Hsla extends BaseColor {\n\n    constructor(public hue: number, public saturation: number, public lightness: number, public alpha: number) {\n        super();\n    }\n\n    public toString(showAlphaChannel: boolean = true): string {\n        return showAlphaChannel\n            ? `hsla(${this.getHue()}, ${this.getSaturation()}%, ${this.getLightness()}%, ${this.getAlpha()})`\n            : `hsl(${this.getHue()}, ${this.getSaturation()}%, ${this.getLightness()}%)`;\n    }\n\n    public getHue() {\n        return Math.round(this.hue);\n    }\n\n    public getSaturation() {\n        return Math.round(this.saturation);\n    }\n\n    public getLightness() {\n        return Math.round(this.lightness);\n    }\n\n    public getAlpha(): number {\n        return Math.round(this.alpha * 100) / 100;\n    }\n}\n","import { BaseColor } from './base-color.class';\n\n/**\n * HSB and HSV are the same\n *\n * Hue = ranges from 0 to 360°\n * Saturation = ranges from 0 to 100%\n * Brightness or Value = ranges from 0 to 100%\n * Alpha = range from 0-1\n */\nexport class Hsva extends BaseColor {\n\n    constructor(public hue: number, public saturation: number, public value: number, public alpha: number) {\n        super();\n    }\n\n    public toString(showAlphaChannel: boolean = true): string {\n        return showAlphaChannel ? `hsva(${this.getHue()}, ${this.getSaturation()}%, ${this.getValue()}%, ${this.getAlpha()})`\n            : `hsv(${this.getHue()}, ${this.getSaturation()}%, ${this.getValue()}%)`;\n    }\n\n    public getHue() {\n        return Math.round(this.hue);\n    }\n\n    public getSaturation() {\n        return Math.round(this.saturation);\n    }\n\n    public getValue() {\n        return Math.round(this.value);\n    }\n\n    public getAlpha(): number {\n        return Math.round(this.alpha * 100) / 100;\n    }\n}\n","import { BaseColor } from './base-color.class';\n\n/**\n * RGB (Red Green Blue)\n *\n * Red = ranges from 0-255\n * Green = ranges from 0-255\n * Blue = ranges from 0-255\n * Alpha = range from 0-1\n */\nexport class Rgba extends BaseColor {\n\n    constructor(public red: number, public green: number, public blue: number, public alpha: number) {\n        super();\n    }\n\n    public toString(showAlphaChannel: boolean = true): string {\n        return showAlphaChannel\n            ? `rgba(${this.getRed()}, ${this.getGreen()}, ${this.getBlue()}, ${this.getAlpha()})`\n            : `rgb(${this.getRed()}, ${this.getGreen()}, ${this.getBlue()})`;\n    }\n\n    public getRed(): number {\n        return Math.round(this.red);\n    }\n\n    public getGreen(): number {\n        return Math.round(this.green);\n    }\n\n    public getBlue(): number {\n        return Math.round(this.blue);\n    }\n\n    public getAlpha(): number {\n        return Math.round(this.alpha * 100) / 100;\n    }\n}\n","import { Rgba } from './rgba.class';\n\n/**\n * http://www.w3.org/TR/css3-color/\n */\nexport class ColorsTable {\n    public static transparent = new Rgba(0, 0, 0, 0);\n    public static aliceblue = new Rgba(240, 248, 255, 1);\n    public static antiquewhite = new Rgba(250, 235, 215, 1);\n    public static aqua = new Rgba(0, 255, 255, 1);\n    public static aquamarine = new Rgba(127, 255, 212, 1);\n    public static azure = new Rgba(240, 255, 255, 1);\n    public static beige = new Rgba(245, 245, 220, 1);\n    public static bisque = new Rgba(255, 228, 196, 1);\n    public static black = new Rgba(0, 0, 0, 1);\n    public static blanchedalmond = new Rgba(255, 235, 205, 1);\n    public static blue = new Rgba(0, 0, 255, 1);\n    public static blueviolet = new Rgba(138, 43, 226, 1);\n    public static brown = new Rgba(165, 42, 42, 1);\n    public static burlywood = new Rgba(222, 184, 135, 1);\n    public static cadetblue = new Rgba(95, 158, 160, 1);\n    public static chartreuse = new Rgba(127, 255, 0, 1);\n    public static chocolate = new Rgba(210, 105, 30, 1);\n    public static coral = new Rgba(255, 127, 80, 1);\n    public static cornflowerblue = new Rgba(100, 149, 237, 1);\n    public static cornsilk = new Rgba(255, 248, 220, 1);\n    public static crimson = new Rgba(220, 20, 60, 1);\n    public static cyan = new Rgba(0, 255, 255, 1);\n    public static darkblue = new Rgba(0, 0, 139, 1);\n    public static darkcyan = new Rgba(0, 139, 139, 1);\n    public static darkgoldenrod = new Rgba(184, 134, 11, 1);\n    public static darkgray = new Rgba(169, 169, 169, 1);\n    public static darkgreen = new Rgba(0, 100, 0, 1);\n    public static darkgrey = ColorsTable.darkgray;\n    public static darkkhaki = new Rgba(189, 183, 107, 1);\n    public static darkmagenta = new Rgba(139, 0, 139, 1);\n    public static darkolivegreen = new Rgba(85, 107, 47, 1);\n    public static darkorange = new Rgba(255, 140, 0, 1);\n    public static darkorchid = new Rgba(153, 50, 204, 1);\n    public static darkred = new Rgba(139, 0, 0, 1);\n    public static darksalmon = new Rgba(233, 150, 122, 1);\n    public static darkseagreen = new Rgba(143, 188, 143, 1);\n    public static darkslateblue = new Rgba(72, 61, 139, 1);\n    public static darkslategray = new Rgba(47, 79, 79, 1);\n    public static darkslategrey = ColorsTable.darkslategray;\n    public static darkturquoise = new Rgba(0, 206, 209, 1);\n    public static darkviolet = new Rgba(148, 0, 211, 1);\n    public static deeppink = new Rgba(255, 20, 147, 1);\n    public static deepskyblue = new Rgba(0, 191, 255, 1);\n    public static dimgray = new Rgba(105, 105, 105, 1);\n    public static dimgrey = ColorsTable.dimgray;\n    public static dodgerblue = new Rgba(30, 144, 255, 1);\n    public static firebrick = new Rgba(178, 34, 34, 1);\n    public static floralwhite = new Rgba(255, 250, 240, 1);\n    public static forestgreen = new Rgba(34, 139, 34, 1);\n    public static fuchsia = new Rgba(255, 0, 255, 1);\n    public static gainsboro = new Rgba(220, 220, 220, 1);\n    public static ghostwhite = new Rgba(248, 248, 255, 1);\n    public static gold = new Rgba(255, 215, 0, 1);\n    public static goldenrod = new Rgba(218, 165, 32, 1);\n    public static gray = new Rgba(128, 128, 128, 1);\n    public static grey = ColorsTable.gray;\n    public static green = new Rgba(0, 128, 0, 1);\n    public static greenyellow = new Rgba(173, 255, 47, 1);\n    public static honeydew = new Rgba(240, 255, 240, 1);\n    public static hotpink = new Rgba(255, 105, 180, 1);\n    public static indianred = new Rgba(205, 92, 92, 1);\n    public static indigo = new Rgba(75, 0, 130, 1);\n    public static ivory = new Rgba(255, 255, 240, 1);\n    public static khaki = new Rgba(240, 230, 140, 1);\n    public static lavender = new Rgba(230, 230, 250, 1);\n    public static lavenderblush = new Rgba(255, 240, 245, 1);\n    public static lawngreen = new Rgba(124, 252, 0, 1);\n    public static lemonchiffon = new Rgba(255, 250, 205, 1);\n    public static lightblue = new Rgba(173, 216, 230, 1);\n    public static lightcoral = new Rgba(240, 128, 128, 1);\n    public static lightcyan = new Rgba(224, 255, 255, 1);\n    public static lightgoldenrodyellow = new Rgba(250, 250, 210, 1);\n    public static lightgray = new Rgba(211, 211, 211, 1);\n    public static lightgreen = new Rgba(144, 238, 144, 1);\n    public static lightgrey = ColorsTable.lightgray;\n    public static lightpink = new Rgba(255, 182, 193, 1);\n    public static lightsalmon = new Rgba(255, 160, 122, 1);\n    public static lightseagreen = new Rgba(32, 178, 170, 1);\n    public static lightskyblue = new Rgba(135, 206, 250, 1);\n    public static lightslategray = new Rgba(119, 136, 153, 1);\n    public static lightslategrey = ColorsTable.lightslategray;\n    public static lightsteelblue = new Rgba(176, 196, 222, 1);\n    public static lightyellow = new Rgba(255, 255, 224, 1);\n    public static lime = new Rgba(0, 255, 0, 1);\n    public static limegreen = new Rgba(50, 205, 50, 1);\n    public static linen = new Rgba(250, 240, 230, 1);\n    public static magenta = new Rgba(255, 0, 255, 1);\n    public static maroon = new Rgba(128, 0, 0, 1);\n    public static mediumaquamarine = new Rgba(102, 205, 170, 1);\n    public static mediumblue = new Rgba(0, 0, 205, 1);\n    public static mediumorchid = new Rgba(186, 85, 211, 1);\n    public static mediumpurple = new Rgba(147, 112, 219, 1);\n    public static mediumseagreen = new Rgba(60, 179, 113, 1);\n    public static mediumslateblue = new Rgba(123, 104, 238, 1);\n    public static mediumspringgreen = new Rgba(0, 250, 154, 1);\n    public static mediumturquoise = new Rgba(72, 209, 204, 1);\n    public static mediumvioletred = new Rgba(199, 21, 133, 1);\n    public static midnightblue = new Rgba(25, 25, 112, 1);\n    public static mintcream = new Rgba(245, 255, 250, 1);\n    public static mistyrose = new Rgba(255, 228, 225, 1);\n    public static moccasin = new Rgba(255, 228, 181, 1);\n    public static navajowhite = new Rgba(255, 222, 173, 1);\n    public static navy = new Rgba(0, 0, 128, 1);\n    public static oldlace = new Rgba(253, 245, 230, 1);\n    public static olive = new Rgba(128, 128, 0, 1);\n    public static olivedrab = new Rgba(107, 142, 35, 1);\n    public static orange = new Rgba(255, 165, 0, 1);\n    public static orangered = new Rgba(255, 69, 0, 1);\n    public static orchid = new Rgba(218, 112, 214, 1);\n    public static palegoldenrod = new Rgba(238, 232, 170, 1);\n    public static palegreen = new Rgba(152, 251, 152, 1);\n    public static paleturquoise = new Rgba(175, 238, 238, 1);\n    public static palevioletred = new Rgba(219, 112, 147, 1);\n    public static papayawhip = new Rgba(255, 239, 213, 1);\n    public static peachpuff = new Rgba(255, 218, 185, 1);\n    public static peru = new Rgba(205, 133, 63, 1);\n    public static pink = new Rgba(255, 192, 203, 1);\n    public static plum = new Rgba(221, 160, 221, 1);\n    public static powderblue = new Rgba(176, 224, 230, 1);\n    public static purple = new Rgba(128, 0, 128, 1);\n    public static red = new Rgba(255, 0, 0, 1);\n    public static rosybrown = new Rgba(188, 143, 143, 1);\n    public static royalblue = new Rgba(65, 105, 225, 1);\n    public static saddlebrown = new Rgba(139, 69, 19, 1);\n    public static salmon = new Rgba(250, 128, 114, 1);\n    public static sandybrown = new Rgba(244, 164, 96, 1);\n    public static seagreen = new Rgba(46, 139, 87, 1);\n    public static seashell = new Rgba(255, 245, 238, 1);\n    public static sienna = new Rgba(160, 82, 45, 1);\n    public static silver = new Rgba(192, 192, 192, 1);\n    public static skyblue = new Rgba(135, 206, 235, 1);\n    public static slateblue = new Rgba(106, 90, 205, 1);\n    public static slategray = new Rgba(112, 128, 144, 1);\n    public static slategrey = ColorsTable.slategray;\n    public static snow = new Rgba(255, 250, 250, 1);\n    public static springgreen = new Rgba(0, 255, 127, 1);\n    public static steelblue = new Rgba(70, 130, 180, 1);\n    public static tan = new Rgba(210, 180, 140, 1);\n    public static teal = new Rgba(0, 128, 128, 1);\n    public static thistle = new Rgba(216, 191, 216, 1);\n    public static tomato = new Rgba(255, 99, 71, 1);\n    public static turquoise = new Rgba(64, 224, 208, 1);\n    public static violet = new Rgba(238, 130, 238, 1);\n    public static wheat = new Rgba(245, 222, 179, 1);\n    public static white = new Rgba(255, 255, 255, 1);\n    public static whitesmoke = new Rgba(245, 245, 245, 1);\n    public static yellow = new Rgba(255, 255, 0, 1);\n    public static yellowgreen = new Rgba(154, 205, 50, 1);\n}\n","import { Cmyk } from './cmyk.class';\nimport { Hsla } from './hsla.class';\nimport { Hsva } from './hsva.class';\nimport { Rgba } from './rgba.class';\nimport { ColorsTable } from './colors-table.class';\n\nexport type ColorString = string;\n\nexport class Color {\n\n    /**\n     * base color used to calculate other\n     * default color\n     * rgb(255, 0, 0)\n     * hsl(0, 100%, 50%)\n     * #ff0000\n     */\n    private hsva: Hsva = new Hsva(0, 1, 1, 1);\n    private rgba: Rgba = new Rgba(255, 0, 0, 1);\n\n    constructor(colorString?: ColorString) {\n        if (colorString) {\n            this.stringToColor(colorString);\n        }\n    }\n\n    public static from(color: ColorString | Color | Hsva | Rgba | Hsla): Color {\n        if (typeof color === 'string') {\n            return new Color(color);\n        } else if (color instanceof Color) {\n            return color.clone();\n        } else if (color instanceof Rgba) {\n            return new Color().setRgba(color.red, color.green, color.blue, color.alpha);\n        } else if (color instanceof Hsva) {\n            return new Color().setHsva(color.hue, color.saturation, color.value, color.alpha);\n        } else if (color instanceof Hsla) {\n            return new Color().setHsla(color.hue, color.saturation, color.lightness, color.alpha);\n        }\n\n        return null;\n    }\n\n    /**\n     * make from existing color new color object\n     */\n    public clone(): Color {\n        return Color.from(this.getRgba());\n    }\n\n    /**\n     * define Color from hex, rgb, rgba, hsl, hsla or cmyk string\n     */\n    public setFromString(color: ColorString): this {\n        return this.stringToColor(color);\n    }\n\n    /**\n     * define Color from HSV values\n     */\n    public setHsva(hue: number = null, saturation: number = 100, brightness: number = 100, alpha: number = 1): this {\n        if (hue != null) {\n            this.hsva.hue = hue;\n        }\n\n        if (saturation != null) {\n            this.hsva.saturation = saturation;\n        }\n\n        if (brightness != null) {\n            this.hsva.value = brightness;\n        }\n\n        if (alpha != null) {\n            alpha = alpha > 1 ? 1 : alpha < 0 ? 0 : alpha;\n            this.hsva.alpha = alpha;\n        }\n\n        this.rgba = this.hsvaToRgba(this.hsva);\n        return this;\n    }\n\n    /**\n     * define Color from RGBa\n     */\n    public setRgba(red: number = null, green: number = null, blue: number = null, alpha: number = 1): this {\n        if (red != null) {\n            this.rgba.red = red;\n        }\n\n        if (green != null) {\n            this.rgba.green = green;\n        }\n\n        if (blue != null) {\n            this.rgba.blue = blue;\n        }\n\n        if (alpha != null) {\n            alpha = alpha > 1 ? 1 : alpha < 0 ? 0 : alpha;\n            this.rgba.alpha = alpha;\n        }\n\n        this.hsva = this.rgbaToHsva(this.rgba);\n        return this;\n    }\n\n    /**\n     * define Color from HSLa\n     */\n    public setHsla(hue: number, saturation: number, lightness: number, alpha: number = 1): this {\n        if (alpha != null) {\n            alpha = alpha > 1 ? 1 : alpha < 0 ? 0 : alpha;\n            this.rgba.alpha = alpha;\n        }\n\n        const hsla = new Hsla(hue, saturation, lightness, alpha);\n        this.rgba = this.hslaToRgba(hsla);\n        this.hsva = this.rgbaToHsva(this.rgba);\n        return this;\n    }\n\n    /**\n     * return hexadecimal value formatted as '#341d2a' or '#341d2aFF' if alhpa channel is enabled\n     */\n    public toHexString(alpha: boolean = false): ColorString {\n        /* tslint:disable:no-bitwise */\n        let hex = '#' + ((1 << 24) | (this.rgba.getRed() << 16) | (this.rgba.getGreen() << 8) | this.rgba.getBlue()).toString(16).substr(1);\n        if (alpha) {\n            hex += ((1 << 8) | Math.round(this.rgba.alpha * 255)).toString(16).substr(1);\n        }\n        /* tslint:enable:no-bitwise */\n        return hex.toUpperCase();\n    }\n\n    /**\n     * return rgba string formatted as rgba(52, 29, 42, 1)\n     */\n    public toRgbaString(): ColorString {\n        return this.rgba.toString();\n    }\n\n    /**\n     * return rgb string formatted as rgb(52, 29, 42)\n     */\n    public toRgbString(): ColorString {\n        return this.rgba.toString(false);\n    }\n\n    /**\n     * return hsla string formatted as hsla(327, 29%, 16%, 1)\n     */\n    public toHslaString(): ColorString {\n        return this.getHsla().toString();\n    }\n\n    /**\n     * return hsl string formatted as hsl(327, 29%, 16%)\n     */\n    public toHslString(): ColorString {\n        return this.getHsla().toString(false);\n    }\n\n    /**\n     * return hsva string formatted as hsva(327, 29%, 16%, 100%)\n     */\n    public toHsvaString(): ColorString {\n        return this.hsva.toString();\n    }\n\n    /**\n     * return hsv string formatted as hsv(327, 29%, 16%)\n     */\n    public toHsvString(): ColorString {\n        return this.hsva.toString(false);\n    }\n\n    /**\n     * return Cmyk string formatted as cmyk(100%, 100%, 100%, 100%)\n     */\n    public toCmykString(): ColorString {\n        return this.getCmyk().toString();\n    }\n\n    public getHsva(): Hsva {\n        return new Hsva(this.hsva.hue, this.hsva.saturation, this.hsva.value, this.hsva.alpha);\n    }\n\n    public getRgba(): Rgba {\n        return new Rgba(this.rgba.red, this.rgba.green, this.rgba.blue, this.rgba.alpha);\n    }\n\n    public getHsla(): Hsla {\n        return this.rgbaToHsla(this.rgba);\n    }\n\n    public getCmyk(): Cmyk {\n        return this.rgbaToCmyk(this.rgba);\n    }\n\n    private hsvaToHsla(color: Hsva): Hsla {\n        const hue = color.hue;\n        const s = color.saturation / 100;\n        const v = color.value / 100;\n        const lightness = ((2 - s) * color.value) / 2;\n        const saturation = (s * v) / ((lightness <= 1) ? lightness : 2 - lightness) || 0;\n\n        return new Hsla(hue, lightness * 100, saturation * 100, color.alpha);\n    }\n\n    private hslaToHsva(color: Hsla): Hsva {\n        const hue = color.hue;\n        const l = (color.lightness / 100) * 2;\n        const s = (color.saturation / 100) * (l <= 1 ? l : 2 - l);\n        const value = (l + s) / 2;\n        const saturation = (2 * s) / (l + s) || 0;\n\n        return new Hsva(hue, saturation, value, color.alpha);\n    }\n\n    private rgbaToHsva(color: Rgba): Hsva {\n        const red = color.red / 255;\n        const green = color.green / 255;\n        const blue = color.blue / 255;\n        const alpha = color.alpha;\n\n        const Cmax = Math.max(red, green, blue);\n        const Cmin = Math.min(red, green, blue);\n        const delta = Cmax - Cmin;\n\n        let hue = 0;\n        let saturation: number = Cmax === 0 ? 0 : delta / Cmax;\n        let brightness: number = Cmax;\n\n        if (Cmax !== Cmin) {\n            switch (Cmax) {\n                case red:\n                    hue = (green - blue) / delta + (green < blue ? 6 : 0);\n                    break;\n                case green:\n                    hue = 2 + (blue - red) / delta;\n                    break;\n                case blue:\n                    hue = 4 + (red - green) / delta;\n                    break;\n            }\n            hue /= 6;\n        }\n\n        hue = hue * 360;\n        saturation = saturation * 100;\n        brightness = brightness * 100;\n\n        return new Hsva(hue, saturation, brightness, alpha);\n    }\n\n    private hsvaToRgba(color: Hsva): Rgba {\n        let red = 1;\n        let green = 0;\n        let blue = 0;\n        const saturation = color.saturation / 100;\n        const brightness = color.value / 100;\n        const alpha = color.alpha;\n        const hex = color.hue / 60;\n\n        const primary = Math.floor(hex);\n        const secoundary = hex - primary;\n        const a = (1 - saturation) * brightness;\n        const b = (1 - (saturation * secoundary)) * brightness;\n        const c = (1 - (saturation * (1 - secoundary))) * brightness;\n\n        switch (primary) {\n            case 6:\n            case 0: red = brightness; green = c; blue = a; break;\n            case 1: red = b; green = brightness; blue = a; break;\n            case 2: red = a; green = brightness; blue = c; break;\n            case 3: red = a; green = b; blue = brightness; break;\n            case 4: red = c; green = a; blue = brightness; break;\n            case 5: red = brightness; green = a; blue = b; break;\n        }\n\n        red = red * 255;\n        green = green * 255;\n        blue = blue * 255;\n\n        return new Rgba(red, green, blue, alpha);\n    }\n\n    private rgbaToHsla(color: Rgba): Hsla {\n        // based on CamanJS\n        const red = color.red / 255;\n        const green = color.green / 255;\n        const blue = color.blue / 255;\n        const alpha = color.alpha;\n\n        const max = Math.max(red, green, blue);\n        const min = Math.min(red, green, blue);\n\n        let hue = 0;\n        let saturation = 0;\n        let luminance = (max + min) / 2;\n        const delta = max - min;\n\n        if (max !== min) {\n            saturation = luminance > 0.5 ? delta / (2.0 - max - min) : delta / (max + min);\n            switch (max) {\n                case red:\n                    hue = (green - blue) / delta + (green < blue ? 6 : 0);\n                    break;\n                case green:\n                    hue = (blue - red) / delta + 2;\n                    break;\n                case blue:\n                    hue = (red - green) / delta + 4;\n                    break;\n            }\n\n            hue /= 6;\n        }\n\n        hue = hue * 360;\n        saturation = saturation * 100;\n        luminance = luminance * 100;\n\n        return new Hsla(hue, saturation, luminance, alpha);\n    }\n\n    /**\n     * convert rgb color from HSLa\n     *\n     * hue = 0 => 360\n     * saturation = 0 => 1\n     * lightness = 0 => 1\n     */\n    private hslaToRgba(color: Hsla): Rgba {\n        const hue = color.hue / 360;\n        const saturation = color.saturation / 100;\n        const lightness = color.lightness / 100;\n        const alpha = color.alpha;\n\n        let red = lightness;\n        let green = lightness;\n        let blue = lightness;\n\n        if (saturation !== 0) {\n            const q = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - (lightness * saturation);\n            const p = 2 * lightness - q;\n\n            red = this.hueToRgb(p, q, hue + (1 / 3));\n            green = this.hueToRgb(p, q, hue);\n            blue = this.hueToRgb(p, q, hue - (1 / 3));\n        }\n\n        red = red * 255;\n        green = green * 255;\n        blue = blue * 255;\n\n        return new Rgba(red, green, blue, alpha);\n    }\n\n    private hueToRgb(p, q, t): number {\n        // based on CamanJS\n        if (t < 0) { t += 1; }\n        if (t > 1) { t -= 1; }\n        if (t < 1 / 6) { return p + (q - p) * 6 * t; }\n        if (t < 1 / 2) { return q; }\n        if (t < 2 / 3) { return p + (q - p) * (2 / 3 - t) * 6; }\n        return p;\n    }\n\n    /**\n     * The Red, Green, Blue values are given in the range of 0..255,\n     *\n     * the red color(R) is calculated from the cyan(C) and black(K) colors,\n     * the green color(G) is calculated from the magenta(M) and black(K) colors,\n     * The blue color(B) is calculated from the yellow(Y) and black(K) colors.\n     *\n     * Below is the formula of CMYK to RGB convertion\n     *\n     * Red = 255 × 1 - min( (1 - Cyan ÷ 100) × (1 - Black) )\n     * Green = 255 × 1 - min(1 - Magenta ÷ 100) × (1 - Black)\n     * Blue = 255 × 1 - min(1 - Yellow ÷ 100) × (1 - Black)\n     */\n    private cmykToRgba(color: Cmyk): Rgba {\n        const black = color.black / 100;\n        const cyan = color.cyan / 100;\n        const magenta = color.magenta / 100;\n        const yellow = color.yellow / 100;\n\n        let red = Math.min(1, (1 - cyan) * (1 - black));\n        let green = Math.min(1, (1 - magenta) * (1 - black));\n        let blue = Math.min(1, (1 - yellow) * (1 - black));\n\n        red = red * 255;\n        green = green * 255;\n        blue = blue * 255;\n\n        return new Rgba(red, green, blue, 1);\n    }\n\n    /**\n     * The max number of R, G, B values are 255, first of all, we divided them by 255 to become the number\n     * of 0~1, this ratio will be used in the calculation.\n     * Rc = R ÷ 255\n     * Gc = G ÷ 255\n     * Bc = B ÷ 255\n     * The black key(K) color could be many result, when we assume a black key value,\n     * the other three colors(cyan, magenta, yellow) can be calculated.\n     * we can calculate it from the red, green and blue colors, the max number of black key should be :\n     * K = 1 - min(Rc, Gc, Bc);\n     *\n     * or we can assume we run out of the black ink, need use the remaining other three color inks to finish the printing job.\n     * K = 0;\n     *\n     * The cyan color(C) is calculated from the red and black colors:\n     * C = (1 - Rc - K) ÷ (1 - K)\n     *\n     * The magenta color (M) is calculated from the green and black colors:\n     * M = (1 - Gr - K) ÷ (1 - K)\n     *\n     * The yellow color(Y) is calculated from the blue and black colors:\n     * Y = (1 - Bc - K) ÷ ( 1 - K)\n     */\n    private rgbaToCmyk(color: Rgba): Cmyk {\n        const red = color.red / 255;\n        const green = color.green / 255;\n        const blue = color.blue / 255;\n\n        let cyan = 1 - red;\n        let magenta = 1 - green;\n        let yellow = 1 - blue;\n        let black = Math.min(cyan, magenta, yellow);\n\n        if (black === 1) {\n            return new Cmyk(0, 0, 0, 1);\n        }\n\n        cyan = (cyan - black) / (1 - black);\n        magenta = (magenta - black) / (1 - black);\n        yellow = (yellow - black) / (1 - black);\n\n        black = black * 100;\n        cyan = cyan * 100;\n        magenta = magenta * 100;\n        yellow = yellow * 100;\n\n        return new Cmyk(cyan, magenta, yellow, black);\n    }\n\n    private roundNumber(n: number): number {\n        return Math.round(n * 100) / 100;\n    }\n\n    private stringToColor(colorString: ColorString): this {\n        const str = colorString.replace(/ /g, '').toLowerCase();\n        /**\n         * try to find color by name in table\n         */\n        let rgba: Rgba = ColorsTable[str] || null;\n\n        /**\n         * hex find\n         */\n        if (str[0] === '#') {\n            let hex = str.substr(1);\n            const length = hex.length;\n            let a = 1;\n            let hexArray = [];\n\n            if (length === 3) {\n                hexArray = hex.split('').map((value) => value + value);\n            } else if (length === 6) {\n                hexArray = hex.match(/.{2}/g);\n            } else if (length === 8) {\n                const alpha = hex.substr(-2);\n                hex = hex.substr(0, length - 2);\n                a = this.roundNumber(parseInt(alpha || 'FF', 16) / 255);\n                hexArray = hex.match(/.{2}/g);\n            }\n\n            if (hexArray.length === 3) {\n                rgba = new Rgba(parseInt(hexArray[0], 16), parseInt(hexArray[1], 16), parseInt(hexArray[2], 16), a);\n            }\n        }\n\n        const OpenParenthesis = str.indexOf('(');\n        const CloseParenthesis = str.indexOf(')');\n\n        if (OpenParenthesis !== -1 && CloseParenthesis + 1 === str.length) {\n            const colorTypeName = str.substr(0, OpenParenthesis);\n            const params = str.substr(OpenParenthesis + 1, CloseParenthesis - (OpenParenthesis + 1)).split(',');\n            let alpha = 1;\n\n            switch (colorTypeName) {\n                case 'rgba':\n                    alpha = parseFloat(params.pop());\n                // Fall through.\n                case 'rgb':\n                    rgba = new Rgba(parseInt(params[0], 10), parseInt(params[1], 10), parseInt(params[2], 10), alpha);\n                    break;\n                case 'hsla':\n                    alpha = parseFloat(params.pop());\n                case 'hsl':\n                    const hsla = new Hsla(parseInt(params[0], 10), parseInt(params[1], 10), parseInt(params[2], 10), alpha);\n                    rgba = this.hslaToRgba(hsla);\n                    break;\n                case 'cmyk':\n                    const cmyk = new Cmyk(\n                        parseInt(params[0], 10),\n                        parseInt(params[1], 10),\n                        parseInt(params[2], 10),\n                        parseInt(params[3], 10));\n                    rgba = this.cmykToRgba(cmyk);\n                    break;\n            }\n        }\n\n        if (rgba) {\n            this.rgba = rgba;\n            this.hsva = this.rgbaToHsva(rgba);\n        }\n\n        return this;\n    }\n\n}\n","import { DOCUMENT } from '@angular/common';\nimport { ElementRef, OnDestroy, Directive, inject } from '@angular/core';\nimport { fromEvent, merge, Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Directive()\nexport abstract class BaseComponent implements OnDestroy {\n\n    private readonly subscriptions: Subscription[] = [];\n    private window: any = { pageXOffset: 0, pageYOffset: 0 };\n    private readonly requestAnimationFrame;\n\n    private mouseup = new Subject<void>();\n\n    private readonly document = inject(DOCUMENT);\n\n    protected readonly elementRef: ElementRef = inject(ElementRef);\n\n    constructor() {\n        this.window = document.defaultView;\n        this.requestAnimationFrame = this.getRequestAnimationFrame();\n        this.addEventListeners();\n    }\n\n    public abstract movePointer(coordinates: { x: number; y: number; height: number; width: number; }): void;\n\n    private addEventListeners(): void {\n        this.subscriptions.push(\n            merge(\n                fromEvent(this.elementRef.nativeElement, 'touchstart', { passive: true }),\n                fromEvent(this.elementRef.nativeElement, 'mousedown')\n            )\n            .subscribe((e: TouchEvent | MouseEvent) => this.onEventChange(e))\n        );\n    }\n\n    private onEventChange(event: MouseEvent | TouchEvent): void {\n        this.calculate(event);\n\n        merge(\n            fromEvent(this.document, 'mouseup'),\n            fromEvent(this.document, 'touchend')\n        ).subscribe(() => this.mouseup.next());\n\n        merge(\n            fromEvent(this.document, 'mousemove'),\n            fromEvent(this.document, 'touchmove', { passive: true })\n        )\n        .pipe(takeUntil(this.mouseup))\n        .subscribe((e: MouseEvent | TouchEvent) => this.calculate(e));\n    }\n\n    private calculateCoordinates(event: MouseEvent | TouchEvent): void {\n        const { width: elWidth, height: elHeight, top: elTop, left: elLeft } = this.elementRef.nativeElement.getBoundingClientRect();\n\n        const pageX = typeof (event as MouseEvent).pageX === 'number'\n                        ? (event as MouseEvent).pageX : (event as TouchEvent).touches[0].pageX;\n        const pageY = typeof  (event as MouseEvent).pageY === 'number'\n                        ? (event as MouseEvent).pageY : (event as TouchEvent).touches[0].pageY;\n\n        const x = Math.max(0, Math.min(pageX - (elLeft + this.window.pageXOffset), elWidth));\n        const y = Math.max(0, Math.min(pageY - (elTop + this.window.pageYOffset), elHeight));\n\n        this.movePointer({ x, y, height: elHeight, width: elWidth });\n    }\n\n    private calculate(event: MouseEvent | TouchEvent): void {\n        if (!event.type.includes('touch')) {\n            event.preventDefault();\n        }\n        if (!this.requestAnimationFrame) {\n            return this.calculateCoordinates(event);\n        }\n\n        this.requestAnimationFrame(() => this.calculateCoordinates(event));\n    }\n\n    private getRequestAnimationFrame(): () => void {\n        return this.window.requestAnimationFrame ||\n            this.window.webkitRequestAnimationFrame ||\n            this.window.mozRequestAnimationFrame ||\n            this.window.oRequestAnimationFrame ||\n            this.window.msRequestAnimationFrame;\n    }\n\n    public ngOnDestroy(): void {\n        this.mouseup.next();\n        this.mouseup.complete();\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions.length = 0;\n    }\n}\n","import {\n    Component,\n    HostBinding,\n    Input,\n    EventEmitter,\n    Output,\n    ChangeDetectionStrategy,\n    Renderer2,\n    ElementRef,\n    ViewChild,\n    OnInit,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { Color } from './../../../helpers/color.class';\nimport { BaseComponent } from './../base.component';\n\n\n@Component({\n    selector: `saturation-component`,\n    templateUrl: `./saturation.component.html`,\n    styleUrls: [\n        `./../base.style.scss`,\n        './saturation.component.scss'\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SaturationComponent extends BaseComponent implements OnInit, OnChanges {\n\n    @Input()\n    public hue: Color;\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    @ViewChild('pointer', { static: true })\n    public pointer: ElementRef;\n\n    constructor(private readonly renderer: Renderer2) {\n        super();\n    }\n\n    @HostBinding('style.backgroundColor')\n    public get backgroundColor(): string {\n        return this.hue ? this.hue.toRgbaString() : '';\n    }\n\n    public ngOnInit(): void {\n        if (!this.hue) {\n            this.hue = Color.from(this.color.getHsva());\n        }\n        this.renderer.setStyle(this.elementRef.nativeElement, 'backgroundColor', this.backgroundColor);\n    }\n\n    /**\n     * color can be changed through inputs\n     * and then we need to move pointer\n     */\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.color && changes.color.previousValue !== changes.color.currentValue) {\n            const hsva = this.color.getHsva();\n            this.changePointerPosition(hsva.saturation, hsva.value);\n        }\n    }\n\n    public movePointer({ x, y, height, width }): void {\n        const saturation = (x * 100) / width;\n        const bright = -((y * 100) / height) + 100;\n\n        this.changePointerPosition(saturation, bright);\n        const hsva = this.hue.getHsva();\n        const color = this.color.getHsva();\n        const newColor = new Color().setHsva(hsva.hue, saturation, bright, color.alpha);\n        this.colorChange.emit(newColor);\n    }\n\n    private changePointerPosition(x: number, y: number): void {\n        this.renderer.setStyle(this.pointer.nativeElement, 'top', `${100 - y}%`);\n        this.renderer.setStyle(this.pointer.nativeElement, 'left', `${x}%`);\n    }\n}\n","<div #pointer class=\"pointer\"></div>","import { Class } from 'estree';\nimport { Injectable } from \"@angular/core\";\n\nexport interface IColorPickerConfig {\n    indicatorTitle: string;\n    presetsTitle: string;\n}\n\n@Injectable()\nexport class ColorPickerConfig implements IColorPickerConfig {\n    public indicatorTitle: string = 'Copy color to clipboard';\n    public presetsTitle: string = '{0}. Long-click to show alternate shades.';\n}\n","import { Component, Input, HostBinding, Renderer2, ElementRef, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Color } from './../../../helpers/color.class';\nimport { ColorPickerConfig } from './../../../services/color-picker.service';\nimport { fromEvent, Subscription } from 'rxjs';\n\n\n@Component({\n    selector: `indicator-component`,\n    templateUrl: `./indicator.component.html`,\n    styleUrls: [\n        `./../base.style.scss`,\n        `./indicator.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IndicatorComponent {\n    @Input()\n    public color: Color;\n\n    @Input()\n    public colorType: 'rgba' | 'hex' | 'hsla' | string = 'rgba';\n\n    @HostBinding('attr.title')\n    public get title() {\n        return this.pickerConfig ? this.pickerConfig.indicatorTitle : '';\n    }\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private readonly pickerConfig: ColorPickerConfig,\n        private readonly renderer: Renderer2,\n        private readonly elementRef: ElementRef,\n        @Inject(DOCUMENT) private readonly document) {\n            this.subscriptions.push(\n                fromEvent(this.elementRef.nativeElement, 'click').subscribe(() => this.onClick())\n            );\n    }\n\n    public get backgroundColor(): string {\n        return this.color.toRgbaString();\n    }\n\n    private onClick() {\n        const input = this.renderer.createElement('input');\n        this.renderer.setStyle(input, 'position', 'absolute');\n        this.renderer.setStyle(input, 'top', '-100%');\n        this.renderer.setStyle(input, 'left', '-100%');\n\n        switch (this.colorType) {\n            case 'hsla':\n                input.value = this.color.toHslaString();\n                break;\n            case 'hex':\n                input.value = this.color.toHexString(this.color.getRgba().alpha < 1);\n                break;\n            default:\n                input.value = this.backgroundColor;\n        }\n\n        this.renderer.appendChild(this.elementRef.nativeElement, input);\n        input.select();\n        this.document.execCommand('copy');\n        this.renderer.removeChild(this.elementRef.nativeElement, input);\n    }\n}\n","<div [style.backgroundColor]=\"backgroundColor\">\n    <svg viewBox=\"0 0 48 48\">\n        <path d=\"M0 0h48v48h-48z\" fill=\"none\"/>\n        <path d=\"M32 2h-24c-2.21 0-4 1.79-4 4v28h4v-28h24v-4zm6 8h-22c-2.21 0-4 1.79-4 4v28c0 2.21 1.79 4 4 4h22c2.21 0 4-1.79 4-4v-28c0-2.21-1.79-4-4-4zm0 32h-22v-28h22v28z\"/>\n    </svg>\n</div>","import {\n    Component,\n    ChangeDetectionStrategy,\n    Input,\n    Renderer2,\n    ElementRef,\n    Output,\n    EventEmitter,\n    ViewChild,\n    SimpleChanges,\n    OnChanges\n} from '@angular/core';\nimport { Color } from './../../../helpers/color.class';\nimport { BaseComponent } from './../base.component';\n\n@Component({\n    selector: `hue-component`,\n    templateUrl: `./hue.component.html`,\n    styleUrls: [\n        `./../base.style.scss`,\n        `./hue.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HueComponent extends BaseComponent implements OnChanges {\n\n    @Input()\n    public hue: Color;\n\n    @Output()\n    public hueChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    @ViewChild('pointer', { static: true })\n    public pointer: ElementRef;\n\n    private isVertical: boolean = false;\n\n    constructor(private readonly renderer: Renderer2) {\n        super();\n    }\n\n    @Input()\n    public set vertical(value: string) {\n        this.isVertical = true;\n    }\n\n    /**\n     * color can be changed through inputs\n     * and then we need to move pointer\n     */\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.hue && changes.hue.previousValue !== changes.hue.currentValue) {\n            const hsva = this.hue.getHsva();\n            this.changePointerPosition(hsva.hue);\n        }\n    }\n\n    public movePointer({ x, y, height, width }): void {\n        const hue = this.isVertical ? (y / height) * 360 : (x / width) * 360;\n        this.changePointerPosition(hue);\n\n        const color = this.color.getHsva();\n        const newColor = new Color().setHsva(hue, color.saturation, color.value, color.alpha);\n        const newHueColor = new Color().setHsva(hue, 100, 100, color.alpha);\n\n        this.hueChange.emit(newHueColor);\n        this.colorChange.emit(newColor);\n    }\n\n    /**\n     * hue value is in range from 0 to 360°\n     */\n    private changePointerPosition(hue: number): void {\n        const x = hue / 360 * 100;\n        const orientation = this.isVertical ? 'top' : 'left';\n        this.renderer.setStyle(this.pointer.nativeElement, orientation, `${x}%`);\n    }\n}","<div #pointer class=\"pointer\"></div>","import {\n    Component,\n    Input,\n    EventEmitter,\n    Output,\n    ChangeDetectionStrategy,\n    OnChanges,\n    ElementRef,\n    ViewChild,\n    Renderer2,\n    SimpleChanges\n} from '@angular/core';\nimport { Color } from './../../../helpers/color.class';\nimport { BaseComponent } from './../base.component';\n\n@Component({\n    selector: `alpha-component`,\n    templateUrl: `./alpha.component.html`,\n    styleUrls: [\n        `./../base.style.scss`,\n        `./alpha.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AlphaComponent extends BaseComponent implements OnChanges {\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    @ViewChild('pointer', { static: true })\n    public pointer: ElementRef;\n\n    private isVertical: boolean = false;\n\n    constructor(private readonly renderer: Renderer2) {\n        super();\n    }\n\n    @Input()\n    public set vertical(value: string) {\n        this.isVertical = true;\n    }\n\n    /**\n     * color can be changed through inputs\n     * and then we need to move pointer\n     */\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.color && changes.color.previousValue !== changes.color.currentValue) {\n            const hsva = this.color.getHsva();\n            this.changePointerPosition(hsva.alpha);\n        }\n    }\n\n    public movePointer({ x, y, height, width }): void {\n        const alpha = this.isVertical ? y / height : x / width;\n        this.changePointerPosition(alpha);\n\n        const hsva = this.color.getHsva();\n        const newColor = new Color().setHsva(hsva.hue, hsva.saturation, hsva.value, alpha);\n        this.colorChange.emit(newColor);\n    }\n\n    /**\n     * hue value is in range from 0 to 360°\n     */\n    private changePointerPosition(alpha: number): void {\n        const x = alpha * 100;\n        const orientation = this.isVertical ? 'top' : 'left';\n        this.renderer.setStyle(this.pointer.nativeElement, orientation, `${x}%`);\n    }\n\n    public get gradient(): string {\n        const rgba = this.color.getRgba();\n        const orientation = this.isVertical ? 'bottom' : 'right';\n        return `linear-gradient(to ${orientation}, rgba(${rgba.red}, ${rgba.green}, ${rgba.blue}, 0) 0%, rgb(${rgba.red}, ${rgba.green}, ${rgba.blue}) 100%)`;\n    }\n\n}","<div #pointer class=\"pointer\"></div>\n<div class=\"gradient-color\" [ngStyle]=\"{ 'background': gradient }\"></div>","import { Directive, Input, Output, EventEmitter, HostListener } from '@angular/core';\n\n\n@Directive({\n    selector: '[inputChange]'\n})\nexport class ColorPickerInputDirective {\n    @Input()\n    public min: string;\n\n    @Input()\n    public max: string;\n\n    @Output()\n    public inputChange = new EventEmitter<number>();\n\n    @HostListener('input', ['$event'])\n    public inputChanges(event: any): void {\n        const element = event.target as HTMLInputElement || event.srcElement as HTMLInputElement;\n        const value = element.value;\n\n        const numeric = parseFloat(value);\n        if (!isNaN(numeric) && numeric >= parseInt(this.min, 10) &&\n            numeric <= parseInt(this.max, 10)) {\n            this.inputChange.emit(numeric);\n        }\n    }\n}\n","import { Component, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { Color } from './../../../../helpers/color.class';\n\n\n@Component({\n    selector: `rgba-input-component`,\n    templateUrl: `./rgba-input.component.html`,\n    styleUrls: [\n        `./../../base.style.scss`,\n        `./../input.component.scss`,\n        `./rgba-input.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RgbaComponent {\n\n    @Input()\n    public hue: Color;\n\n    @Output()\n    public hueChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    public labelVisible: boolean;\n\n    @Input()\n    public set label(value) {\n        this.labelVisible = true;\n    }\n\n    public isAlphaVisible: boolean = true;\n\n    @Input()\n    public set alpha(isVisible: boolean) {\n        this.isAlphaVisible = isVisible;\n    }\n\n    public get value() {\n        return this.color ? this.color.getRgba() : null;\n    }\n\n    public onInputChange(newValue: number, color: 'R' | 'G' | 'B' | 'A') {\n        const value = this.value;\n        const red = color === 'R' ? newValue : value.red;\n        const green = color === 'G' ? newValue : value.green;\n        const blue = color === 'B' ? newValue : value.blue;\n        const alpha = color === 'A' ? newValue : value.alpha;\n\n        const newColor = new Color().setRgba(red, green, blue, alpha);\n        const hue = new Color().setHsva(newColor.getHsva().hue);\n\n        this.hueChange.emit(hue);\n        this.colorChange.emit(newColor);\n    }\n}\n","<div class=\"column\">\n    <input type=\"text\" pattern=\"[0-9]*\" min=\"0\" max=\"255\" [value]=\"value?.getRed().toString()\" (inputChange)=\"onInputChange($event, 'R')\" />\n    <span *ngIf=\"labelVisible\">R</span>\n</div>\n<div class=\"column\">\n    <input type=\"text\" pattern=\"[0-9]*\" min=\"0\" max=\"255\" [value]=\"value?.getGreen().toString()\" (inputChange)=\"onInputChange($event, 'G')\" />\n    <span *ngIf=\"labelVisible\">G</span>\n</div>\n<div class=\"column\">\n    <input type=\"text\" pattern=\"[0-9]*\" min=\"0\" max=\"255\" [value]=\"value?.getBlue().toString()\" (inputChange)=\"onInputChange($event, 'B')\" />\n    <span *ngIf=\"labelVisible\">B</span>\n</div>\n<div class=\"column\" *ngIf=\"isAlphaVisible\">\n    <input type=\"text\" pattern=\"[0-9]+([\\.,][0-9]{1,2})?\" min=\"0\" max=\"1\" [value]=\"value?.getAlpha().toString()\" (inputChange)=\"onInputChange($event, 'A')\" />\n    <span *ngIf=\"labelVisible\">A</span>\n</div>","import { Component, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { Color } from './../../../../helpers/color.class';\n\n\n@Component({\n    selector: `hsla-input-component`,\n    templateUrl: `./hsla-input.component.html`,\n    styleUrls: [\n        `./../../base.style.scss`,\n        `./../input.component.scss`,\n        `./hsla-input.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HslaComponent {\n\n    @Input()\n    public hue: Color;\n\n    @Output()\n    public hueChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    public labelVisible: boolean;\n\n    @Input()\n    public set label(value) {\n        this.labelVisible = true;\n    }\n\n    public isAlphaVisible: boolean = true;\n\n    @Input()\n    public set alpha(isVisible: boolean) {\n        this.isAlphaVisible = isVisible;\n    }\n\n    public get value() {\n        return this.color ? this.color.getHsla() : null;\n    }\n\n    public onInputChange(newValue: number, color: 'H' | 'S' | 'L' | 'A') {\n        const value = this.value;\n        const hue = color === 'H' ? newValue : value.hue;\n        const saturation = color === 'S' ? newValue : value.saturation;\n        const lightness = color === 'L' ? newValue : value.lightness;\n        const alpha = color === 'A' ? newValue : value.alpha;\n\n\n        const newColor = new Color().setHsla(hue, saturation, lightness, alpha);\n        const hueColor = new Color().setHsva(newColor.getHsva().hue);\n\n        this.hueChange.emit(hueColor);\n        this.colorChange.emit(newColor);\n    }\n}\n","<div class=\"column\">\n    <input type=\"text\" pattern=\"[0-9]*\" min=\"0\" max=\"360\" [value]=\"value?.getHue().toString()\" (inputChange)=\"onInputChange($event, 'H')\" />\n    <span *ngIf=\"labelVisible\">H</span>\n</div>\n<div class=\"column\">\n    <input type=\"text\" pattern=\"[0-9]*\" min=\"0\" max=\"100\" [value]=\"value?.getSaturation() + '%'\" (inputChange)=\"onInputChange($event, 'S')\" />\n    <span *ngIf=\"labelVisible\">S</span>\n</div>\n<div class=\"column\">\n    <input type=\"text\" pattern=\"[0-9]*\" min=\"0\" max=\"100\" [value]=\"value?.getLightness() + '%'\" (inputChange)=\"onInputChange($event, 'L')\" />\n    <span *ngIf=\"labelVisible\">L</span>\n</div>\n<div class=\"column\" *ngIf=\"isAlphaVisible\">\n    <input type=\"text\" pattern=\"[0-9]+([\\.,][0-9]{1,2})?\" min=\"0\" max=\"1\" [value]=\"value?.getAlpha().toString()\" (inputChange)=\"onInputChange($event, 'A')\" />\n    <span *ngIf=\"labelVisible\">A</span>\n</div>","import { Component, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { Color } from '../../../../helpers/color.class';\n\n\n@Component({\n    selector: `hex-input-component`,\n    templateUrl: `./hex-input.component.html`,\n    styleUrls: [\n        `./../../base.style.scss`,\n        `./../input.component.scss`,\n        `./hex-input.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HexComponent {\n\n    @Input()\n    public hue: Color;\n\n    @Output()\n    public hueChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    public labelVisible: boolean;\n    private prefixValue: string = '';\n\n    @Input()\n    public set label(value) {\n        this.labelVisible = true;\n    }\n\n    @Input()\n    public set prefix(value) {\n        this.prefixValue = value;\n    }\n\n    public get value() {\n        return this.prefixValue + (this.color ? this.color.toHexString(this.color.getRgba().alpha < 1).replace('#', '') : '');\n    }\n\n    public onInputChange(event: KeyboardEvent, inputValue: string): void {\n        const value = inputValue.toLowerCase().replace('#', '');\n\n        if (\n        ((event.keyCode === 13 || event.key.toLowerCase() === 'enter') && value.length === 3)\n        || value.length === 6 || value.length === 8) {\n            const hex = parseInt(value, 16);\n            const hexStr = hex.toString(16);\n\n            /**\n             * if value is valid\n             * change color else do nothing\n             * after parsing number leading 0 is removed,\n             * compare length and add leading 0 before comparing two values\n             */\n            if (hexStr.padStart(value.length, '0') === value && this.value !== value) {\n                const newColor = new Color(`#${value}`);\n                const hue = new Color().setHsva(newColor.getHsva().hue);\n                this.hueChange.emit(hue);\n                this.colorChange.emit(newColor);\n            }\n        }\n    }\n}\n","<div class=\"column\">\n    <input #elRef type=\"text\" [value]=\"value\" (keyup)=\"onInputChange($event, elRef.value)\" />\n    <span *ngIf=\"labelVisible\">HEX</span>\n</div>","import {\n    Component,\n    HostBinding,\n    Input,\n    EventEmitter,\n    Output,\n    ChangeDetectionStrategy,\n    OnDestroy,\n    ElementRef\n} from '@angular/core';\nimport { Color, ColorString } from './../../../helpers/color.class';\nimport { Subject, of, fromEvent, Subscription, merge } from 'rxjs';\nimport { takeUntil, delay, map } from 'rxjs/operators';\nimport { ColorPickerConfig } from './../../../services/color-picker.service';\n\n@Component({\n    selector: `color-preset`,\n    template: ``,\n    styleUrls: [\n        `./../base.style.scss`,\n        `./color-preset.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ColorPresetComponent implements OnDestroy {\n\n    @Input()\n    public activeColor: Color;\n\n    @Input()\n    public color: Color;\n\n    @Input('show-depth-title')\n    public set depth(showDepthText: boolean) {\n        this.showDepthText = !!showDepthText;\n    }\n\n    @Output()\n    public selectionChange = new EventEmitter<Color>(false);\n\n    @Output()\n    public longPress = new EventEmitter<boolean>(false);\n\n    private mouseup = new Subject<void>();\n\n    private showDepthText: boolean = false;\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(private readonly pickerConfig: ColorPickerConfig, private readonly elementRef: ElementRef) {\n        this.addEventListeners();\n    }\n\n    public ngOnDestroy(): void {\n        this.mouseup.next();\n        this.mouseup.complete();\n        this.removeEventListeners();\n    }\n\n    @HostBinding('style.backgroundColor')\n    public get bgColor(): ColorString {\n        return this.color.toRgbaString();\n    }\n\n    @HostBinding('attr.title')\n    public get title() {\n        const color = this.color ? this.color.toHexString() : '';\n\n        if (this.showDepthText) {\n            return this.pickerConfig.presetsTitle.replace(/\\{\\s*(.+?)\\s*\\}/g, (match, firstMatch) => color);\n        }\n        return color;\n    }\n\n    @HostBinding('class.selected')\n    public get className(): boolean {\n        return this.activeColor ? this.color.toRgbaString() === this.activeColor.toRgbaString() : false;\n    }\n\n    private addEventListeners(): void {\n        this.subscriptions.push(\n            merge(\n                fromEvent(this.elementRef.nativeElement, 'mouseup'),\n                fromEvent(this.elementRef.nativeElement, 'touchend')\n            )\n            .subscribe(() => this.onTouchEnd())\n        );\n\n        this.subscriptions.push(\n            merge(\n                fromEvent(this.elementRef.nativeElement, 'mousedown'),\n                fromEvent(this.elementRef.nativeElement, 'touchstart', { passive: true })\n            )\n            .subscribe((e: MouseEvent | TouchEvent) => this.onTouch(e))\n        );\n    }\n\n    private removeEventListeners(): void {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions.length = 0;\n    }\n\n    private onTouch(event: MouseEvent | TouchEvent): void {\n        of(event)\n            .pipe(\n                map((e: MouseEvent | TouchEvent) => e.timeStamp || new Date().getTime()),\n                delay(350),\n                takeUntil(this.mouseup)\n            )\n            .subscribe(() => this.longPress.next(true));\n\n        this.selectionChange.emit(this.color);\n    }\n\n    private onTouchEnd(): void {\n        this.mouseup.next();\n    }\n\n}\n","import {\n    trigger, stagger, query,\n    transition, animate, style, state\n} from '@angular/animations';\n\n\nexport const OpacityAnimation = trigger('opacityAnimation', [\n    state('true', style({ opacity: 1 })),\n    transition('void => *', [\n        style({ opacity: 0 }),\n        animate('.08s ease-in')\n    ])\n])\n\n\nexport const ListAnimation = trigger('listAnimation', [\n    transition('* => up', [\n        query(':enter', [\n            style({ opacity: 0, height: 0 }),\n            stagger(-10, [\n                animate('.08s', style({ opacity: 1, height: '*' }))\n            ])\n        ], { optional: true })\n    ]),\n    transition('* => right', [\n        query(':enter', [\n            style({ opacity: 0, height: 0 }),\n            stagger(-10, [\n                animate('.08s', style({ opacity: 1, height: '*' }))\n            ])\n        ], { optional: true })\n    ]),\n    transition('* => down', [\n        query(':enter', [\n            style({ opacity: 0, height: 0 }),\n            stagger(10, [\n                animate('.08s', style({ opacity: 1, height: '*' }))\n            ])\n        ], { optional: true })\n    ]),\n    transition('* => left', [\n        query(':enter', [\n            style({ opacity: 0, height: 0 }),\n            stagger(10, [\n                animate('.08s', style({ opacity: 1, height: '*' }))\n            ])\n        ], { optional: true })\n    ])\n])","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({ name: 'reverse' })\nexport class ReversePipe implements PipeTransform {\n    transform(arr: Array<any>, isReversed: boolean = true) {\n        if (isReversed) {\n            return arr.slice().reverse();\n        }\n\n        return arr;\n    }\n}\n","import {\n    Component,\n    Input,\n    ChangeDetectionStrategy,\n    Inject,\n    OnDestroy,\n    ChangeDetectorRef,\n    Output,\n    EventEmitter,\n    HostBinding\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Color } from './../../../helpers/color.class';\nimport { OpacityAnimation, ListAnimation } from './color-preset-sublist.animation';\nimport { fromEvent, merge, Subscription } from 'rxjs';\n\n@Component({\n    selector: `color-preset-sublist`,\n    templateUrl: `./color-preset-sublist.component.html`,\n    styleUrls: [\n        `./../base.style.scss`,\n        `./color-preset-sublist.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [OpacityAnimation, ListAnimation]\n})\nexport class ColorPresetSublist implements OnDestroy {\n\n    @Input()\n    public list: Array<Color>;\n\n    @Output()\n    public selectionChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public direction: 'down' | 'up' | 'left' | 'right' = 'up';\n\n    @Input()\n    public activeColor: Color;\n\n    public showChildren: boolean = false;\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        @Inject(DOCUMENT) private readonly document,\n        private readonly cdr: ChangeDetectorRef) {\n    }\n\n    public ngOnDestroy(): void {\n        this.removeListeners();\n        this.cdr.detach();\n    }\n\n    private removeListeners(): void {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions.length = 0;\n    }\n\n    /**\n     * emit color change\n     */\n    public onSelectionChange(color: Color): void {\n        this.selectionChange.next(color);\n    }\n\n    public onLongPress(): void {\n        this.showChildren = true;\n        this.listenDocumentEvents();\n    }\n\n    private listenDocumentEvents(): void {\n        this.subscriptions.push(\n            merge(\n                fromEvent(this.document, 'mousedown'),\n                fromEvent(this.document, 'touchstart', { passive: true })\n            )\n            .subscribe(() => this.closeList())\n        );\n    }\n\n    private closeList(): void {\n        if (this.showChildren) {\n            this.showChildren = false;\n            this.cdr.markForCheck();\n            this.removeListeners();\n        }\n    }\n\n    @HostBinding('className')\n    public get className(): string {\n        return `direction-${this.direction}`;\n    }\n}","<color-preset [show-depth-title]=\"list.length > 1\" [color]=\"list[0]\" [activeColor]=\"activeColor\" (longPress)=\"onLongPress()\" (selectionChange)=\"onSelectionChange($event)\"></color-preset>\n<div class=\"reflection\" [style.backgroundColor]=\"list[0].toRgbaString()\"></div>\n<div class=\"reflection\" [style.backgroundColor]=\"list[0].toRgbaString()\"></div>\n\n<div class=\"sublist\" *ngIf=\"showChildren\" [@opacityAnimation]=\"showChildren\" [@listAnimation]=\"direction\">\n    <color-preset \n        *ngFor=\"let preset of list | reverse : (direction == 'up' || direction == 'right')\"\n        [color]=\"preset\"\n        [activeColor]=\"activeColor\"\n        (selectionChange)=\"onSelectionChange($event)\"></color-preset>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({ name: 'chunks' })\nexport class ChunksPipe implements PipeTransform {\n    transform(arr: any, chunkSize: number) {\n        return arr.reduce((prev, cur, i) => (i % chunkSize) ? prev : prev.concat([arr.slice(i, i + chunkSize)]), []);\n    }\n}\n","import { Component, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { Color } from './../../../helpers/color.class';\n\n@Component({\n    selector: `color-presets-component`,\n    templateUrl: `./color-presets.component.html`,\n    styleUrls: [\n        `./../base.style.scss`,\n        `./color-presets.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ColorPresetsComponent {\n\n    @Input()\n    public columns: number = 8;\n\n    @Input()\n    public colorPresets: Array<Array<Color> | Color>;\n\n    @Input()\n    public hue: Color;\n\n    @Output()\n    public hueChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public direction: 'down' | 'up' | 'left' | 'right' = 'up';\n\n    public onSelectionChange(color: Color): void {\n        const selectedRgbaColor = color.getRgba();\n        const selectedHsvaColor = color.getHsva();\n\n        const newColor = new Color()\n            .setRgba(selectedRgbaColor.red, selectedRgbaColor.green, selectedRgbaColor.blue, selectedRgbaColor.alpha);\n        const hueColor = new Color().setHsva(selectedHsvaColor.hue);\n\n        this.hueChange.emit(hueColor);\n        this.colorChange.emit(newColor);\n    }\n\n    public isList(colorPreset: Array<Array<Color> | Color>): boolean {\n        return Array.isArray(colorPreset);\n    }\n}","<div class=\"row\" *ngFor=\"let chunk of colorPresets | chunks: columns; let first = first; let last = last;\" [ngClass]=\"{ 'first': first, 'last': last }\">\n    <ng-template ngFor let-preset let-first=\"first\" let-last=\"last\" [ngForOf]=\"chunk\">\n        <color-preset-sublist \n            [list]=\"preset\" \n            *ngIf=\"isList(preset); else colorPreset\" \n            [direction]=\"direction\"\n            [activeColor]=\"color\"\n            [ngClass]=\"{ 'first': first, 'last': last }\"\n            (selectionChange)=\"onSelectionChange($event)\"></color-preset-sublist>\n\n        <ng-template #colorPreset>\n            <color-preset \n                [ngClass]=\"{ 'first': first, 'last': last }\"\n                [color]=\"preset\" \n                [activeColor]=\"color\" \n                (selectionChange)=\"onSelectionChange($event)\"></color-preset>\n        </ng-template>\n    </ng-template>\n</div>","import { Color, ColorString } from './color.class';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { Rgba } from './rgba.class';\nimport { Hsla } from './hsla.class';\nimport { Hsva } from './hsva.class';\n\nexport enum ColorType {\n    hex = 'hex',\n    hexa = 'hexa',\n    rgba = 'rgba',\n    rgb = 'rgb',\n    hsla = 'hsla',\n    hsl = 'hsl',\n    cmyk = 'cmyk'\n}\n\nexport class ColorPickerControl {\n\n    private modelValue: Color = null;\n    private hueValue: Color = null;\n    private initValue: Color = null;\n    private readonly valueChanged: Subject<Color> = new Subject();\n\n    public readonly presetsVisibilityChanges: BehaviorSubject<boolean> = new BehaviorSubject(true);\n    public initType: ColorType = null;\n    public readonly alphaChannelVisibilityChanges: BehaviorSubject<boolean> = new BehaviorSubject(true);\n    public readonly valueChanges = this.valueChanged.asObservable().pipe(distinctUntilChanged((x, y) => x.toRgbaString() == y.toRgbaString()));\n\n    private colorPresets: Array<Array<Color> | Color> = [];\n\n    constructor() {\n        const color = Color.from(new Rgba(255, 0, 0, 1));\n        this.setValue(color);\n        this.setHueColor(color);\n    }\n\n    public setValueFrom(color: ColorString | Color | Rgba | Hsla | Hsva): this {\n        const newColor = Color.from(color);\n        if (!this.initValue) {\n            this.initValue = Color.from(color);\n        }\n\n        if (typeof color === 'string') {\n            this.finOutInputType(color);\n        }\n        this.setHueColor(newColor);\n        this.setValue(newColor);\n        return this;\n    }\n\n    private setHueColor(color: Color) {\n        if (this.hueValue && color.getHsva().hue > 0 || !this.hueValue) {\n            this.hueValue = new Color().setHsva(color.getHsva().hue);\n        }\n    }\n\n    public get hue() {\n        return this.hueValue;\n    }\n\n    /**\n     * @internal\n     * used for two-way data binding\n     */\n    public set hue(hueColor: Color) {\n        this.hueValue = hueColor;\n    }\n\n    private setValue(value: Color): this {\n        this.modelValue = value;\n        this.valueChanged.next(value);\n        return this;\n    }\n\n    public get value(): Color {\n        return this.modelValue;\n    }\n\n    /**\n     * @internal\n     * used for two-way data binding\n     */\n    public set value(value: Color) {\n        this.setValue(value);\n    }\n\n    /**\n     * reset color to initial\n     */\n    public reset(): this {\n        let color;\n        if (!this.initValue) {\n            color = Color.from(new Rgba(255, 0, 0, 1));\n            this.hueValue = new Color().setHsva(color.getHsva().hue);\n        } else {\n            color = this.initValue.clone();\n            this.setHueColor(color);\n        }\n\n        this.setValue(color);\n        return this;\n    }\n\n    public isAlphaChannelEnabled(): boolean {\n        return this.alphaChannelVisibilityChanges.value;\n    }\n\n    public showAlphaChannel(): this {\n        this.alphaChannelVisibilityChanges.next(true);\n        return this;\n    }\n\n    public hideAlphaChannel(): this {\n        this.alphaChannelVisibilityChanges.next(false);\n        return this;\n    }\n\n    private finOutInputType(colorString: ColorString) {\n        const str = colorString.replace(/ /g, '').toLowerCase();\n        if (str[0] === '#') {\n            this.initType = ColorType.hex;\n            if (str.length > 7) {\n                this.initType = ColorType.hexa;\n            }\n        }\n\n        const OpenParenthesis = str.indexOf('(');\n        const colorTypeName = str.substr(0, OpenParenthesis);\n        switch (colorTypeName) {\n            case ColorType.rgba:\n                this.initType = ColorType.rgba;\n                break;\n            case ColorType.rgb:\n                this.initType = ColorType.rgb;\n                break;\n            case ColorType.hsla:\n                this.initType = ColorType.hsla;\n                break;\n            case ColorType.hsl:\n                this.initType = ColorType.hsl;\n                break;\n            case ColorType.cmyk:\n                this.initType = ColorType.cmyk;\n                break;\n        }\n    }\n\n    public setColorPresets(colorPresets: Array<Array<ColorString> | ColorString>): this {\n        this.colorPresets = this.setPresets(colorPresets);\n        return this;\n    }\n\n    private setPresets(colorPresets: Array<Array<ColorString> | ColorString>): Array<Color> {\n        const presets = [];\n\n        for (const color of colorPresets) {\n            if (Array.isArray(color)) {\n                presets.push(this.setPresets(color));\n            } else {\n                presets.push(new Color(color));\n            }\n        }\n        return presets;\n    }\n\n    public get presets() {\n        return this.colorPresets;\n    }\n\n    public hasPresets(): boolean {\n        return this.colorPresets.length > 0;\n    }\n\n    public isPresetVisible(): boolean {\n        return this.presetsVisibilityChanges.value;\n    }\n\n    public showPresets(): this {\n        this.presetsVisibilityChanges.next(true);\n        return this;\n    }\n\n    public hidePresets(): this {\n        this.presetsVisibilityChanges.next(false);\n        return this;\n    }\n}\n","import { Color } from './color.class';\nimport { ColorType } from './control.class';\n\n\nexport function getValueByType(color: Color, type: ColorType): string {\n    switch (type) {\n        case ColorType.hex:\n            return color.toHexString();\n        case ColorType.hexa:\n            return color.toHexString(true);\n        case ColorType.rgb:\n            return color.toRgbString();\n        case ColorType.rgba:\n            return color.toRgbaString();\n        case ColorType.hsl:\n            return color.toHslString();\n        case ColorType.hsla:\n            return color.toHslaString();\n        default:\n            return color.toRgbaString();\n    }\n}\n","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    SimpleChanges,\n    ChangeDetectionStrategy,\n    OnDestroy,\n    OnChanges,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { ColorString } from './../../helpers/color.class';\nimport { ColorPickerControl } from './../../helpers/control.class';\nimport { getValueByType } from './../../helpers/helper.functions';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: `chrome-picker`,\n    templateUrl: `./chrome-picker.component.html`,\n    styleUrls: [\n        `./../parts/base.style.scss`,\n        `./chrome-picker.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ChromePickerComponent implements OnInit, OnChanges, OnDestroy {\n\n    public selectedPresentation: number = 0;\n    public presentations = ['rgba', 'hsla', 'hex'];\n\n    @Input()\n    public color: string;\n\n    @Input()\n    public control: ColorPickerControl;\n\n    @Output()\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\n\n    private subscriptions: Array<Subscription> = [];\n\n    constructor(private readonly cdr: ChangeDetectorRef) {\n    }\n\n    public ngOnInit(): void {\n        if (!this.control) {\n            this.control = new ColorPickerControl();\n        }\n\n        if (this.color) {\n            this.control.setValueFrom(this.color);\n        }\n\n        /**\n         * set color presets\n         * defined by this chrome color picker component\n         */\n        if (!this.control.hasPresets()) {\n            this.control\n                .setColorPresets([\n                    ['#f44336', '#ffebee', '#ffcdd2', '#EF9A9A', '#E57373', '#EF5350', '#F44336', '#E53935', '#D32F2F', '#C62828', '#B71C1C'],\n                    ['#E91E63', '#fce4ec', '#f8bbd0', '#f48fb1', '#f06292', '#ec407a', '#e91e63', '#d81b60', '#c2185b', '#ad1457', '#880e4f'],\n                    ['#9C27B0', '#F3e5f5', '#e1bee7', '#ce93d8', '#ba68c8', '#ab47bc', '#9c27b0', '#8e24aa', '#7b1fa2', '#6a1b9a', '#4a148c'],\n                    ['#673AB7', '#ede7f6', '#d1c4e9', '#b39ddb', '#9575cd', '#7e57c2', '#673ab7', '#5e35b1', '#512da8', '#4527a0', '#311b92'],\n                    ['#3F51B5', '#e8eaf6', '#c5cae9', '#9fa8da', '#7986cb', '#5c6bc0', '#3f51b5', '#3949ab', '#303f9f', '#283593', '#1a237e'],\n                    ['#2196F3', '#e3f2fd', '#bbdefb', '#90caf9', '#64b5f6', '#42a5f5', '#2196f3', '#1e88e5', '#1976d2', '#1565c0', '#0D47a1'],\n                    ['#03A9F4', '#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b'],\n                    ['#00BCD4', '#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064'],\n                    ['#009688', '#E0F2f1', '#b2dfdb', '#80cbc4', '#4db6ac', '#26a69a', '#009688', '#00897b', '#00796b', '#00695c', '#004d40'],\n                    ['#4CAF50', '#e8f5e9', '#c8e6c9', '#a5d6a7', '#81c784', '#66bb6a', '#4caf50', '#43a047', '#388e3c', '#2e7d32', '#1b5e20'],\n                    ['#8BC34A', '#f1f8e9', '#dcedc8', '#c5e1a5', '#aed581', '#9ccc65', '#8bc34a', '#7cb342', '#689f38', '#558b2f', '#33691e'],\n                    ['#cddc39', '#f9fbe7', '#f0f4c3', '#e6ee9c', '#dce775', '#d4e157', '#c0dc39', '#c0ca33', '#afb42b', '#9e9d24', '#827717'],\n                    ['#ffeb3b', '#fffde7', '#fff9c4', '#fff59d', '#fff176', '#ffee58', '#ffeb3b', '#fdd835', '#fbc02d', '#f9a825', '#f57f17'],\n                    ['#ffc107', '#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00'],\n                    ['#ff9800', '#fff3e0', '#ffe0b2', '#ffcc80', '#ffb74d', '#ffa726', '#ff9800', '#fb8c00', '#f57c00', '#ef6c00', '#e65100'],\n                    ['#ff5722', '#fbe9e7', '#ffccbc', '#ffab91', '#ff8a65', '#ff7043', '#ff5722', '#f4511e', '#e64a19', '#d84315', '#bf360c'],\n                    ['#795548', '#efebe9', '#d7ccc8', '#bcaaa4', '#a1887f', '#8d6e63', '#795548', '#6d4c41', '#5d4037', '#4e342e', '#3e2723'],\n                    ['#9e9e9e', '#fafafa', '#f5f5f5', '#eee', '#e0e0e0', '#bdbdbd', '#9e9e9e', '#757575', '#616161', '#424242', '#212121'],\n                    ['#607d8b', '#eceff1', '#cfd8dc', '#b0bec5', '#90a4ae', '#78909c', '#60708b', '#546e7a', '#455a64', '#37474f', '#263238']\n                ]);\n        }\n\n        this.subscriptions.push(\n            this.control.valueChanges.subscribe((value) => {\n                this.cdr.markForCheck();\n                this.colorChange.emit(getValueByType(value, this.control.initType));\n            })\n        );\n    }\n\n    public ngOnDestroy(): void {\n        this.cdr.detach();\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions.length = 0;\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\n            this.control.setValueFrom(this.color);\n        }\n    }\n\n    public changePresentation(): void {\n        this.selectedPresentation =\n            this.selectedPresentation === this.presentations.length - 1 ? 0 : this.selectedPresentation + 1;\n    }\n\n}\n","<saturation-component [hue]=\"control.hue\" [(color)]=\"control.value\"></saturation-component>\n\n<div class=\"controls\">\n    <div class=\"controls-row hue-alpha\">\n        <div class=\"column\">\n            <indicator-component [colorType]=\"presentations[selectedPresentation]\" [color]=\"control.value\"></indicator-component>\n        </div>\n        <div class=\"column\">\n            <hue-component [(hue)]=\"control.hue\" [(color)]=\"control.value\"></hue-component>\n            <alpha-component *ngIf=\"control.alphaChannelVisibilityChanges | async\" [(color)]=\"control.value\"></alpha-component>\n        </div>\n    </div>\n    <div class=\"controls-row presentation\">\n        <div class=\"column\" [ngSwitch]=\"presentations[selectedPresentation]\">\n            <rgba-input-component *ngSwitchCase=\"'rgba'\" [alpha]=\"control.alphaChannelVisibilityChanges | async\" label [(color)]=\"control.value\" [(hue)]=\"control.hue\"></rgba-input-component>\n            <hsla-input-component *ngSwitchCase=\"'hsla'\" [alpha]=\"control.alphaChannelVisibilityChanges | async\" label [(color)]=\"control.value\" [(hue)]=\"control.hue\"></hsla-input-component>\n            <hex-input-component *ngSwitchCase=\"'hex'\" label prefix=\"#\" [(color)]=\"control.value\" [(hue)]=\"control.hue\"></hex-input-component>\n        </div>\n        <div class=\"column type-column\">\n            <span class=\"type-btn\" (click)=\"changePresentation()\"></span>\n        </div>\n    </div>\n</div>\n\n<color-presets-component *ngIf=\"control.presetsVisibilityChanges | async\" [(color)]=\"control.value\" [colorPresets]=\"control.presets\" [(hue)]=\"control.hue\"></color-presets-component>","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    SimpleChanges,\n    ChangeDetectionStrategy,\n    OnChanges,\n    OnDestroy,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { ColorString } from './../../helpers/color.class';\nimport { ColorPickerControl } from './../../helpers/control.class';\nimport { getValueByType } from './../../helpers/helper.functions';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: `sketch-picker`,\n    templateUrl: `./sketch-picker.component.html`,\n    styleUrls: [\n        `./../parts/base.style.scss`,\n        `./sketch-picker.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SketchPickerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    public color: string;\n\n    @Input()\n    public control: ColorPickerControl;\n\n    @Output()\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\n\n    private subscriptions: Array<Subscription> = [];\n\n    constructor(private readonly cdr: ChangeDetectorRef) {\n    }\n\n    public ngOnInit(): void {\n        if (!this.control) {\n            this.control = new ColorPickerControl();\n        }\n\n        if (this.color) {\n            this.control.setValueFrom(this.color);\n        }\n\n        if (!this.control.hasPresets()) {\n            /**\n             * set color presets\n             * defined by sketch color picker component\n             */\n            this.control\n                .setColorPresets([\n                    '#d0041b', '#8b572a', '#f5a623', '#f8e71c', '#7ed321', '#417506', '#bd10e0', '#9013fe',\n                    '#4a90e2', '#50e3c2', '#b8e986', '#030303', '#4a4a4a', '#9b9b9b', '#fff'\n                ]);\n        }\n\n        this.subscriptions.push(\n            this.control.valueChanges.subscribe((value) => {\n                this.cdr.markForCheck();\n                this.colorChange.emit(getValueByType(value, this.control.initType));\n            })\n        );\n    }\n\n    public ngOnDestroy(): void {\n        this.cdr.detach();\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions.length = 0;\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\n            this.control.setValueFrom(this.color);\n        }\n    }\n}\n","<saturation-component [hue]=\"control.hue\" [(color)]=\"control.value\"></saturation-component>\n\n<div class=\"controls\">\n    <div class=\"controls-row hue-alpha\">\n        <div class=\"column\">\n            <hue-component [(hue)]=\"control.hue\" [(color)]=\"control.value\"></hue-component>\n            <alpha-component *ngIf=\"control.alphaChannelVisibilityChanges | async\" [(color)]=\"control.value\"></alpha-component>\n        </div>\n        <div class=\"column indicator-column\">\n            <indicator-component colorType=\"rgba\" [color]=\"control.value\"></indicator-component>\n        </div>\n    </div>\n    <div class=\"controls-row presentation\">\n        <div class=\"column\">\n            <hex-input-component label [(color)]=\"control.value\" [(hue)]=\"control.hue\"></hex-input-component>\n        </div>\n        <div class=\"column\">\n            <rgba-input-component [alpha]=\"control.alphaChannelVisibilityChanges | async\" label [(color)]=\"control.value\" [(hue)]=\"control.hue\"></rgba-input-component>\n        </div>\n    </div>\n</div>\n\n<color-presets-component *ngIf=\"control.presetsVisibilityChanges | async\" [(color)]=\"control.value\" [colorPresets]=\"control.presets\" [(hue)]=\"control.hue\"></color-presets-component>","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    SimpleChanges,\n    ChangeDetectionStrategy,\n    OnChanges,\n    OnDestroy,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { ColorString } from './../../helpers/color.class';\nimport { ColorPickerControl } from './../../helpers/control.class';\nimport { getValueByType } from './../../helpers/helper.functions';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: `compact-picker`,\n    templateUrl: `./compact-picker.component.html`,\n    styleUrls: [\n        `./../parts/base.style.scss`,\n        `./compact-picker.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CompactPickerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    public color: string;\n\n    @Input()\n    public control: ColorPickerControl;\n\n    @Output()\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\n\n    private subscriptions: Array<Subscription> = [];\n\n    constructor(private readonly cdr: ChangeDetectorRef) {\n    }\n\n    public ngOnInit(): void {\n        if (!this.control) {\n            this.control = new ColorPickerControl();\n        }\n\n        if (this.color) {\n            this.control.setValueFrom(this.color);\n        }\n\n        /**\n         * set color presets\n         * defined by compact color picker component\n         */\n        if (!this.control.hasPresets()) {\n            this.control\n                .setColorPresets([\n                    '#6da6e8', '#74c283', '#f9d948', '#f5943f', '#f66c6c', '#ef8ab8', '#696cd4', '#6c6c6c', '#f6f5f5'\n                ]);\n        }\n\n        this.subscriptions.push(\n            this.control.valueChanges.subscribe((value) => {\n                this.cdr.markForCheck();\n                this.colorChange.emit(getValueByType(value, this.control.initType));\n            })\n        );\n    }\n\n    public ngOnDestroy(): void {\n        this.cdr.detach();\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions.length = 0;\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\n            this.control.setValueFrom(this.color);\n        }\n    }\n}","<color-presets-component \n    *ngIf=\"control.presetsVisibilityChanges | async\" \n    direction=\"down\"\n    [columns]=\"9\" \n    [(color)]=\"control.value\" \n    [colorPresets]=\"control.presets\" \n    [(hue)]=\"control.hue\"></color-presets-component>\n\n<div class=\"controls\">\n    <div class=\"controls-row saturation-hue\">\n        <div class=\"column\">\n            <saturation-component [hue]=\"control.hue\" [(color)]=\"control.value\"></saturation-component>\n        </div>\n        <div class=\"column hue-column\">\n            <hue-component vertical [(hue)]=\"control.hue\" [(color)]=\"control.value\"></hue-component>\n        </div>\n    </div>\n    <div class=\"controls-row presentation\">\n        <div class=\"column\">\n            <svg class=\"pencil\" viewBox=\"0 0 1024 1024\">\n                <path d=\"M639.77,121.045l-48.598,84.2l112.215,64.8l48.6-84.205L639.77,121.045z M558.773,261.354\n                    L315.78,682.206l112.215,64.795L670.99,326.15L558.773,261.354z M690.816,75.691l74.922,43.286\n                    c41.682,24.045,55.52,76.564,31.725,117.784l-37.967,65.68l-32.398,56.11L451.706,835.594L282.452,947.303\n                    c-40.961,27.004-70.24,9.027-67.329-38.894l12.149-202.411l275.395-477.041l32.398-56.11l37.883-65.686\n                    C596.824,65.946,649.473,51.857,690.816,75.691z M274.689,883.015l120.908-79.818l-112.218-64.8L274.689,883.015z\"/>\n            </svg>\n            <hex-input-component prefix=\"#\" [(color)]=\"control.value\" [(hue)]=\"control.hue\"></hex-input-component>\n        </div>\n        <div class=\"column\">\n            <indicator-component colorType=\"hex\" [color]=\"control.value\"></indicator-component>\n        </div>\n    </div>\n</div>","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    OnChanges,\n    SimpleChanges,\n    ChangeDetectionStrategy,\n    OnDestroy,\n    ChangeDetectorRef,\n    HostBinding\n} from '@angular/core';\nimport { ColorString } from './../../helpers/color.class';\nimport { ColorPickerControl } from './../../helpers/control.class';\nimport { getValueByType } from './../../helpers/helper.functions';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: `github-picker`,\n    templateUrl: `./github-picker.component.html`,\n    styleUrls: [\n        `./../parts/base.style.scss`,\n        `./github-picker.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GithubPickerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    public color: string;\n\n    @Input()\n    public control: ColorPickerControl;\n\n    @Input()\n    public get columns() {\n        return this.columnsValue;\n    }\n    public set columns(value: string | number | null | undefined) {\n        this.columnsValue = !isNaN(parseFloat(value as any)) && !isNaN(Number(value))\n            ? Number(value)\n            : 'auto';\n    }\n    private columnsValue: 'auto' | number = 8;\n\n    @Output()\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\n\n    @HostBinding('style.width') public get width() {\n        return this.columnsValue === 'auto' ? `auto` : `${25 * this.columnsValue + 12}px`;\n    }\n\n    public get columnsCount() {\n        return this.columns === 'auto' ? this.control.presets.length : this.columns;\n    }\n\n    private subscriptions: Array<Subscription> = [];\n\n    constructor(private readonly cdr: ChangeDetectorRef) {\n    }\n\n    public ngOnInit(): void {\n        if (!this.control) {\n            this.control = new ColorPickerControl();\n        }\n\n        if (this.color) {\n            this.control.setValueFrom(this.color);\n        }\n\n        if (!this.control.hasPresets()) {\n            /**\n             * set color presets\n             * defined by github color picker component\n             */\n            this.control\n                .setColorPresets([\n                    '#b80000', '#db3e00', '#fccb00', '#008b02', '#006b76', '#1273de', '#004dcf', '#5300eb',\n                    '#eb9694', '#fad0c3', '#fef3bd', '#c1e1c5', '#bedadc', '#c4def6', '#bed3f3', '#d4c4fb'\n                ]);\n        }\n\n        this.subscriptions.push(\n            this.control.valueChanges.subscribe((value) => {\n                this.cdr.markForCheck();\n                this.colorChange.emit(getValueByType(value, this.control.initType));\n            })\n        );\n    }\n\n    public ngOnDestroy(): void {\n        this.cdr.detach();\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions.length = 0;\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\n            this.control.setValueFrom(this.color);\n        }\n    }\n}\n","<color-presets-component \n    direction=\"down\"\n    [columns]=\"columnsCount\"\n    [(color)]=\"control.value\" \n    [colorPresets]=\"control.presets\"></color-presets-component>","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    SimpleChanges,\n    ChangeDetectionStrategy,\n    OnDestroy,\n    ChangeDetectorRef,\n    OnChanges\n} from '@angular/core';\nimport { ColorString } from './../../helpers/color.class';\nimport { ColorPickerControl } from './../../helpers/control.class';\nimport { getValueByType } from './../../helpers/helper.functions';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: `swatches-picker`,\n    templateUrl: `./swatches-picker.component.html`,\n    styleUrls: [\n        `./../parts/base.style.scss`,\n        `./swatches-picker.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SwatchesPickerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    public color: string;\n\n    @Output()\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\n\n    public control: ColorPickerControl = new ColorPickerControl();\n    public childControl: ColorPickerControl = new ColorPickerControl();\n    private subscriptions: Array<Subscription> = [];\n\n    private mapColors = {\n        '#E6315B': [\n            '#fc8da7', '#fa7d9a', '#f56484', '#f04a71', '#e82c58', '#e31746', '#de0235',\n            '#d60234', '#d10232', '#c70230', '#b8022c', '#ab0229', '#9c0225', '#8f0122',\n            '#8c0122', '#82011f', '#78011b', '#690117', '#5c0012', '#4f0010', '#42000c'\n        ],\n        '#793183': [\n            '#ef8dfc', '#eb7dfa', '#e664f5', '#dc4af0', '#d22ce8', '#cb17e3', '#c402de',\n            '#c002d9', '#bb02d4', '#b002c7', '#a202b8', '#9702ab', '#8a029c', '#7e018f',\n            '#7a018a', '#730182', '#6c0178', '#5e0169', '#54015c', '#49014f', '#3d0142'\n        ],\n        '#009DE7': [\n            '#8dd9fc', '#7dd2fa', '#64c7f5', '#4abbf0', '#2cade8', '#17a2e3', '#0298de',\n            '#0295d9', '#0291d4', '#0289c7', '#027eb8', '#0275ab', '#026b9c', '#01628f',\n            '#015f8a', '#015982', '#015278', '#014869', '#013f5c', '#01364f', '#012e42'\n        ],\n        '#00B59C': [\n            '#8dfeea', '#7dfbe4', '#63f4db', '#4befd2', '#2de7c6', '#16e2be', '#03deb7',\n            '#01ddb6', '#01d4ae', '#01c7a4', '#01b897', '#01aa8b', '#019b80', '#019076',\n            '#018c73', '#01836c', '#017763', '#016857', '#005c4e', '#005044', '#004239'\n        ],\n        '#FFCE00': [\n            '#fce68d', '#fae17d', '#f5da64', '#f0cf4a', '#e8c22c', '#e5bc17', '#deb202',\n            '#deb100', '#d4aa02', '#c7a002', '#b89302', '#ab8902', '#9c7d02', '#8f7301',\n            '#8c7001', '#826801', '#786201', '#695601', '#5c4b00', '#4f4100', '#423700'\n        ],\n        '#FF4A21': [\n            '#fca28d', '#fa947d', '#f57f64', '#f0694a', '#e84f2c', '#e33c17', '#de2a02',\n            '#d92a02', '#d42902', '#c72602', '#b82302', '#ab2102', '#9c1e02', '#8f1b01',\n            '#8a1a01', '#821901', '#781701', '#691300', '#5c1100', '#4f0e00', '#420c00'\n        ],\n        '#D6D5D6': [\n            '#fff', '#f2f2f2', '#e5e5e5', '#d9d9d9', '#cccccc', '#bfbfbf', '#b3b3b3',\n            '#a6a6a6', '#999999', '#8c8c8c', '#808080', '#737373', '#666666', '#595959',\n            '#4d4d4d', '#424242', '#363636', '#262626', '#1a1a1a', '#0f0f0f', '#000'\n        ]\n    };\n\n    constructor(private readonly cdr: ChangeDetectorRef) {\n    }\n\n    public ngOnInit(): void {\n        if (this.color) {\n            this.childControl.setValueFrom(this.color);\n        } else {\n            this.control.setValueFrom('#E6315B');\n        }\n\n        /**\n         * set color presets\n         * defined by swatches color picker component\n         */\n        this.control.setColorPresets([\n            '#e6315b', '#793183', '#009de7', '#00b59c', '#ffce00', '#ff4a21', '#d6d5d6'\n        ]);\n\n        /**\n         * initially open first group\n         */\n        this.childControl.setColorPresets(this.mapColors['#E6315B']);\n\n        this.subscriptions.push(\n            this.childControl.valueChanges.subscribe((value) => {\n                this.colorChange.emit(getValueByType(value, this.childControl.initType));\n            })\n        );\n\n        this.subscriptions.push(\n            this.control.valueChanges.subscribe((value) => {\n                this.cdr.markForCheck();\n                const presets = this.mapColors[value.toHexString()];\n                if (presets) {\n                    this.childControl.setColorPresets(presets);\n                }\n                this.colorChange.emit(getValueByType(this.childControl.value, this.childControl.initType));\n            })\n        );\n    }\n\n    public ngOnDestroy(): void {\n        this.cdr.detach();\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions.length = 0;\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\n            this.childControl.setValueFrom(this.color);\n        }\n    }\n}\n","<color-presets-component \n    [columns]=\"7\"\n    direction=\"down\"\n    [(color)]=\"control.value\" \n    [colorPresets]=\"control.presets\"></color-presets-component>\n<color-presets-component\n    class=\"child-list\"\n    *ngIf=\"childControl.presets.length\"\n    [columns]=\"7\"\n    direction=\"down\"\n    [(color)]=\"childControl.value\" \n    [colorPresets]=\"childControl.presets\"></color-presets-component>","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    SimpleChanges,\n    ChangeDetectionStrategy,\n    OnDestroy,\n    OnChanges\n} from '@angular/core';\nimport { ColorString } from './../../helpers/color.class';\nimport { ColorPickerControl } from './../../helpers/control.class';\nimport { getValueByType } from './../../helpers/helper.functions';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: `ip-picker`,\n    templateUrl: `./ip-picker.component.html`,\n    styleUrls: [\n        `./../parts/base.style.scss`,\n        `./ip-picker.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IpPickerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    public color: string;\n\n    @Input()\n    public control: ColorPickerControl;\n\n    @Output()\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\n\n    private subscriptions: Array<Subscription> = [];\n\n    constructor() {\n    }\n\n    public ngOnInit(): void {\n        if (!this.control) {\n            this.control = new ColorPickerControl();\n        }\n\n        /**\n         * set color presets\n         * defined by this chrome color picker component\n         */\n        if (!this.control.hasPresets()) {\n            this.control\n                .setColorPresets([\n                    ['#f44336', '#ffebee', '#ffcdd2', '#EF9A9A', '#E57373', '#EF5350', '#F44336', '#E53935', '#D32F2F', '#C62828', '#B71C1C'],\n                    ['#E91E63', '#fce4ec', '#f8bbd0', '#f48fb1', '#f06292', '#ec407a', '#e91e63', '#d81b60', '#c2185b', '#ad1457', '#880e4f'],\n                    ['#9C27B0', '#F3e5f5', '#e1bee7', '#ce93d8', '#ba68c8', '#ab47bc', '#9c27b0', '#8e24aa', '#7b1fa2', '#6a1b9a', '#4a148c'],\n                    ['#673AB7', '#ede7f6', '#d1c4e9', '#b39ddb', '#9575cd', '#7e57c2', '#673ab7', '#5e35b1', '#512da8', '#4527a0', '#311b92'],\n                    ['#3F51B5', '#e8eaf6', '#c5cae9', '#9fa8da', '#7986cb', '#5c6bc0', '#3f51b5', '#3949ab', '#303f9f', '#283593', '#1a237e'],\n                    ['#2196F3', '#e3f2fd', '#bbdefb', '#90caf9', '#64b5f6', '#42a5f5', '#2196f3', '#1e88e5', '#1976d2', '#1565c0', '#0D47a1'],\n                    ['#03A9F4', '#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b'],\n                    ['#00BCD4', '#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064'],\n                    ['#009688', '#E0F2f1', '#b2dfdb', '#80cbc4', '#4db6ac', '#26a69a', '#009688', '#00897b', '#00796b', '#00695c', '#004d40'],\n                    ['#4CAF50', '#e8f5e9', '#c8e6c9', '#a5d6a7', '#81c784', '#66bb6a', '#4caf50', '#43a047', '#388e3c', '#2e7d32', '#1b5e20'],\n                    ['#8BC34A', '#f1f8e9', '#dcedc8', '#c5e1a5', '#aed581', '#9ccc65', '#8bc34a', '#7cb342', '#689f38', '#558b2f', '#33691e'],\n                    ['#cddc39', '#f9fbe7', '#f0f4c3', '#e6ee9c', '#dce775', '#d4e157', '#c0dc39', '#c0ca33', '#afb42b', '#9e9d24', '#827717'],\n                    ['#ffeb3b', '#fffde7', '#fff9c4', '#fff59d', '#fff176', '#ffee58', '#ffeb3b', '#fdd835', '#fbc02d', '#f9a825', '#f57f17'],\n                    ['#ffc107', '#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00'],\n                    ['#ff9800', '#fff3e0', '#ffe0b2', '#ffcc80', '#ffb74d', '#ffa726', '#ff9800', '#fb8c00', '#f57c00', '#ef6c00', '#e65100'],\n                    ['#ff5722', '#fbe9e7', '#ffccbc', '#ffab91', '#ff8a65', '#ff7043', '#ff5722', '#f4511e', '#e64a19', '#d84315', '#bf360c'],\n                    ['#795548', '#efebe9', '#d7ccc8', '#bcaaa4', '#a1887f', '#8d6e63', '#795548', '#6d4c41', '#5d4037', '#4e342e', '#3e2723'],\n                    ['#9e9e9e', '#fafafa', '#f5f5f5', '#eee', '#e0e0e0', '#bdbdbd', '#9e9e9e', '#757575', '#616161', '#424242', '#212121'],\n                    ['#607d8b', '#eceff1', '#cfd8dc', '#b0bec5', '#90a4ae', '#78909c', '#60708b', '#546e7a', '#455a64', '#37474f', '#263238']\n                ]);\n        }\n\n        if (this.color) {\n            this.control.setValueFrom(this.color);\n        }\n\n        this.subscriptions.push(\n            this.control.valueChanges.subscribe((value) => {\n                this.colorChange.emit(getValueByType(value, this.control.initType));\n            })\n        );\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions.length = 0;\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\n            this.control.setValueFrom(this.color);\n        }\n    }\n\n}","<div class=\"controls\">\n    <div class=\"controls-row presentation\">\n        <indicator-component colorType=\"hex\" [color]=\"control.value\"></indicator-component>\n        <hex-input-component [(color)]=\"control.value\" [(hue)]=\"control.hue\"></hex-input-component>\n    </div>\n\n    <div class=\"controls-row saturation-hue-alpha\">\n        <div class=\"column\">\n            <saturation-component [hue]=\"control.hue\" [(color)]=\"control.value\"></saturation-component>\n            <alpha-component [(color)]=\"control.value\"></alpha-component>\n        </div>\n        <div class=\"column hue-column\">\n            <hue-component vertical [(hue)]=\"control.hue\" [(color)]=\"control.value\"></hue-component>\n        </div>\n    </div>\n</div>\n<color-presets-component \n    *ngIf=\"control.presetsVisibilityChanges | async\" \n    [columns]=\"8\" \n    [(color)]=\"control.value\" \n    [colorPresets]=\"control.presets\" \n    [(hue)]=\"control.hue\"></color-presets-component>","/*\n * ngx-color-picker\n *\n * By Ivan Pintar, http://www.pintar-ivan.com\n * Licensed under the MIT License\n * See https://github.com/pIvan/ngx-color-picker/blob/master/README.md\n */\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * parts\n */\nimport { SaturationComponent } from './components/parts/saturation/saturation.component';\nimport { IndicatorComponent } from './components/parts/indicator/indicator.component';\nimport { HueComponent } from './components/parts/hue/hue.component';\nimport { AlphaComponent } from './components/parts/alpha/alpha.component';\nimport { RgbaComponent } from './components/parts/inputs/rgba-input/rgba-input.component';\nimport { HslaComponent } from './components/parts/inputs/hsla-input/hsla-input.component';\nimport { HexComponent } from './components/parts/inputs/hex-input/hex-input.component';\nimport { ColorPresetsComponent } from './components/parts/color-presets/color-presets.component';\nimport { ColorPresetComponent } from './components/parts/color-preset/color-preset.component';\nimport { ColorPresetSublist } from './components/parts/color-preset-sublist/color-preset-sublist.component';\n\nexport { SaturationComponent } from './components/parts/saturation/saturation.component';\nexport { IndicatorComponent } from './components/parts/indicator/indicator.component';\nexport { HueComponent } from './components/parts/hue/hue.component';\nexport { AlphaComponent } from './components/parts/alpha/alpha.component';\nexport { RgbaComponent } from './components/parts/inputs/rgba-input/rgba-input.component';\nexport { HslaComponent } from './components/parts/inputs/hsla-input/hsla-input.component';\nexport { HexComponent } from './components/parts/inputs/hex-input/hex-input.component';\nexport { ColorPresetsComponent } from './components/parts/color-presets/color-presets.component';\nexport { ColorPresetComponent } from './components/parts/color-preset/color-preset.component';\nexport { ColorPresetSublist } from './components/parts/color-preset-sublist/color-preset-sublist.component';\n/**\n * directives\n */\nimport { ColorPickerInputDirective } from './directives/color-picker-input.directive';\n\n/**\n * pipes\n */\nimport { ChunksPipe } from './pipes/chunks.pipe';\nimport { ReversePipe } from './pipes/reverse.pipe';\n\n/**\n * pickers\n */\nimport { ChromePickerComponent } from './components/chrome-picker/chrome-picker.component';\nimport { SketchPickerComponent } from './components/sketch-picker/sketch-picker.component';\nimport { CompactPickerComponent } from './components/compact-picker/compact-picker.component';\nimport { GithubPickerComponent } from './components/github-picker/github-picker.component';\nimport { SwatchesPickerComponent } from './components/swatches-picker/swatches-picker.component';\nimport { IpPickerComponent } from './components/ip-picker/ip-picker.component';\n\nexport { ChromePickerComponent } from './components/chrome-picker/chrome-picker.component';\nexport { SketchPickerComponent } from './components/sketch-picker/sketch-picker.component';\nexport { CompactPickerComponent } from './components/compact-picker/compact-picker.component';\nexport { GithubPickerComponent } from './components/github-picker/github-picker.component';\nexport { SwatchesPickerComponent } from './components/swatches-picker/swatches-picker.component';\nexport { IpPickerComponent } from './components/ip-picker/ip-picker.component';\n\n/**\n * services\n */\nimport { ColorPickerConfig, IColorPickerConfig } from './services/color-picker.service';\n\n/**\n * exports\n */\nexport { Color } from './helpers/color.class';\nexport { ColorPickerControl } from './helpers/control.class';\nexport { ColorsTable } from './helpers/colors-table.class';\nexport { IColorPickerConfig } from './services/color-picker.service';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    providers: [\n        ColorPickerConfig\n    ],\n    declarations: [\n        SaturationComponent,\n        IndicatorComponent,\n        HueComponent,\n        AlphaComponent,\n\n        RgbaComponent,\n        HslaComponent,\n        HexComponent,\n\n        ColorPresetsComponent,\n        ColorPresetComponent,\n        ColorPresetSublist,\n\n        ColorPickerInputDirective,\n        ChunksPipe,\n        ReversePipe,\n\n        /**\n         * prepared components\n         */\n        ChromePickerComponent,\n        SketchPickerComponent,\n        SwatchesPickerComponent,\n        GithubPickerComponent,\n        CompactPickerComponent,\n        IpPickerComponent\n    ],\n    exports: [\n        SaturationComponent,\n        IndicatorComponent,\n        HueComponent,\n        AlphaComponent,\n\n        RgbaComponent,\n        HslaComponent,\n        HexComponent,\n\n        ColorPresetsComponent,\n\n        ChromePickerComponent,\n        SketchPickerComponent,\n        SwatchesPickerComponent,\n        GithubPickerComponent,\n        CompactPickerComponent,\n        IpPickerComponent\n    ]\n})\nexport class ColorPickerModule {\n\n    public static forRoot<T extends IColorPickerConfig>(configuration?: T): ModuleWithProviders<ColorPickerModule> {\n        return {\n            ngModule: ColorPickerModule,\n            providers: [\n                { provide: ColorPickerConfig, useValue: configuration || new ColorPickerConfig() }\n            ]\n        };\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2.ColorPickerInputDirective","i1.ColorPickerConfig","i2.ColorPresetComponent","i3.ReversePipe","i3.ColorPresetSublist","i4.ChunksPipe","i2.SaturationComponent","i3.IndicatorComponent","i4.HueComponent","i5.AlphaComponent","i6.RgbaComponent","i7.HslaComponent","i8.HexComponent","i9.ColorPresetsComponent","i7.HexComponent","i8.ColorPresetsComponent","i5.HexComponent","i6.ColorPresetsComponent","i1.ColorPresetsComponent","i2.ColorPresetsComponent","i6.HexComponent","i7.ColorPresetsComponent"],"mappings":"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,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;g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EAAE;gBACP,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBAC3E,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBAC3E,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;AAC9E,aAAA;AACD,YAAA,SAAS,EAAE;gBACP,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBAC3E,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBAC3E,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;AAC9E,aAAA;AACD,YAAA,SAAS,EAAE;gBACP,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBAC3E,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBAC3E,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;AAC9E,aAAA;AACD,YAAA,SAAS,EAAE;gBACP,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBAC3E,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBAC3E,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;AAC9E,aAAA;AACD,YAAA,SAAS,EAAE;gBACP,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBAC3E,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBAC3E,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,S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AAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,S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"}