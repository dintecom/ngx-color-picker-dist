{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@iplab/ngx-color-picker/helpers/control.class.ts","ng://@iplab/ngx-color-picker/helpers/base-color.class.ts","ng://@iplab/ngx-color-picker/helpers/cmyk.class.ts","ng://@iplab/ngx-color-picker/helpers/hsla.class.ts","ng://@iplab/ngx-color-picker/helpers/hsva.class.ts","ng://@iplab/ngx-color-picker/helpers/rgba.class.ts","ng://@iplab/ngx-color-picker/helpers/colors-table.class.ts","ng://@iplab/ngx-color-picker/helpers/color.class.ts","ng://@iplab/ngx-color-picker/components/parts/base.component.ts","ng://@iplab/ngx-color-picker/components/parts/saturation/saturation.component.ts","ng://@iplab/ngx-color-picker/services/color-picker.service.ts","ng://@iplab/ngx-color-picker/components/parts/indicator/indicator.component.ts","ng://@iplab/ngx-color-picker/components/parts/hue/hue.component.ts","ng://@iplab/ngx-color-picker/components/parts/alpha/alpha.component.ts","ng://@iplab/ngx-color-picker/components/parts/inputs/rgba-input/rgba-input.component.ts","ng://@iplab/ngx-color-picker/components/parts/inputs/hsla-input/hsla-input.component.ts","ng://@iplab/ngx-color-picker/components/parts/inputs/hex-input/hex-input.component.ts","ng://@iplab/ngx-color-picker/components/parts/color-presets/color-presets.component.ts","ng://@iplab/ngx-color-picker/components/parts/color-preset/color-preset.component.ts","ng://@iplab/ngx-color-picker/components/parts/color-preset-sublist/color-preset-sublist.animation.ts","ng://@iplab/ngx-color-picker/components/parts/color-preset-sublist/color-preset-sublist.component.ts","ng://@iplab/ngx-color-picker/directives/color-picker-input.directive.ts","ng://@iplab/ngx-color-picker/pipes/chunks.pipe.ts","ng://@iplab/ngx-color-picker/pipes/reverse.pipe.ts","ng://@iplab/ngx-color-picker/helpers/helper.functions.ts","ng://@iplab/ngx-color-picker/components/chrome-picker/chrome-picker.component.ts","ng://@iplab/ngx-color-picker/components/sketch-picker/sketch-picker.component.ts","ng://@iplab/ngx-color-picker/components/compact-picker/compact-picker.component.ts","ng://@iplab/ngx-color-picker/components/github-picker/github-picker.component.ts","ng://@iplab/ngx-color-picker/components/swatches-picker/swatches-picker.component.ts","ng://@iplab/ngx-color-picker/components/ip-picker/ip-picker.component.ts","ng://@iplab/ngx-color-picker/color-picker.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","call","next","value","done","ColorType","Cmyk","_super","cyan","magenta","yellow","black","_this","tslib_1.__extends","toString","getCyan","getMagenta","getYellow","getBlack","Math","round","BaseColor","Hsla","hue","saturation","lightness","alpha","showAlphaChannel","getHue","getSaturation","getLightness","getAlpha","Hsva","getValue","Rgba","red","green","blue","getRed","getGreen","getBlue","ColorsTable","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","Color","colorString","hsva","rgba","stringToColor","from","color","clone","setRgba","setHsva","setHsla","getRgba","setFromString","brightness","hsvaToRgba","rgbaToHsva","hsla","hslaToRgba","toHexString","hex","substr","toUpperCase","toRgbaString","toRgbString","toHslaString","getHsla","toHslString","toHsvaString","toHsvString","toCmykString","getCmyk","getHsva","rgbaToHsla","rgbaToCmyk","hsvaToHsla","s","v","hslaToHsva","l","Cmax","max","Cmin","min","delta","primary","floor","secoundary","a","luminance","q","hueToRgb","t","cmykToRgba","roundNumber","number","str","replace","toLowerCase","length_1","hexArray","split","map","match","parseInt","OpenParenthesis","indexOf","CloseParenthesis","colorTypeName","params","parseFloat","pop","cmyk","BaseComponent","document","elementRef","renderer","eventHooks","window","pageXOffset","pageYOffset","defaultView","requestAnimationFrame","getRequestAnimationFrame","onEventChange","event","calculate","push","listen","removeListeners","e","calculateCoordinates","_a","nativeElement","getBoundingClientRect","elWidth","width","elHeight","height","elTop","top","elLeft","left","pageX","pageY","x","y","movePointer","preventDefault","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","forEach","cb","ngOnDestroy","SaturationComponent","colorChange","EventEmitter","onClick","ngOnInit","setStyle","backgroundColor","ngOnChanges","changes","previousValue","currentValue","changePointerPosition","bright","newColor","emit","pointer","tslib_1.__decorate","Input","Output","ViewChild","static","ElementRef","HostBinding","HostListener","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","tslib_1.__param","Inject","DOCUMENT","Renderer2","indicatorTitle","presetsTitle","IndicatorComponent","pickerConfig","colorType","input","createElement","appendChild","select","execCommand","removeChild","ColorPickerConfig","HueComponent","hueChange","isVertical","newHueColor","orientation","AlphaComponent","RgbaComponent","isAlphaVisible","labelVisible","isVisible","onInputChange","newValue","HslaComponent","hueColor","HexComponent","prefixValue","inputValue","ColorPresetsComponent","columns","direction","onSelectionChange","selectedRgbaColor","selectedHsvaColor","isList","colorPreset","isArray","ColorPresetComponent","selectionChange","longPress","mouseup","Subject","showDepthText","complete","firstMatch","activeColor","onTouch","of","pipe","timeStamp","Date","getTime","delay","takeUntil","subscribe","onTouchEnd","OpacityAnimation","trigger","state","style","opacity","transition","animate","ListAnimation","query","stagger","optional","ColorPresetSublist","cdr","showChildren","hooks","detach","callback","onLongPress","listenDocumentClick","closeList","markForCheck","animations","ChangeDetectorRef","ColorPickerInputDirective","inputChange","inputChanges","srcElement","numeric","isNaN","Directive","ChunksPipe","transform","arr","chunkSize","reduce","prev","cur","concat","slice","Pipe","name","ReversePipe","isReversed","reverse","ColorPickerControl","modelValue","hueValue","initValue","valueChanged","presetsVisibilityChanges","BehaviorSubject","initType","alphaChannelVisibilityChanges","valueChanges","asObservable","distinctUntilChanged","colorPresets","setValue","setHueColor","setValueFrom","finOutInputType","reset","isAlphaChannelEnabled","hideAlphaChannel","hexa","rgb","hsl","setColorPresets","setPresets","presets","colorPresets_1","tslib_1.__values","colorPresets_1_1","hasPresets","isPresetVisible","showPresets","hidePresets","unsubscribe","getValueByType","type","ChromePickerComponent","selectedPresentation","presentations","control","changePresentation","SketchPickerComponent","CompactPickerComponent","GithubPickerComponent","SwatchesPickerComponent","childControl","mapColors","#E6315B","#793183","#009DE7","#00B59C","#FFCE00","#FF4A21","#D6D5D6","IpPickerComponent","ColorPickerModule","forRoot","configuration","ngModule","ColorPickerModule_1","providers","provide","useClass","NgModule","imports","CommonModule","declarations","exports","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Color, ColorString } from './color.class';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { Rgba } from './rgba.class';\nimport { Hsla } from './hsla.class';\nimport { Hsva } from './hsva.class';\n\nexport enum ColorType {\n    hex = 'hex',\n    hexa = 'hexa',\n    rgba = 'rgba',\n    rgb = 'rgb',\n    hsla = 'hsla',\n    hsl = 'hsl',\n    cmyk = 'cmyk'\n}\n\nexport class ColorPickerControl {\n\n    private modelValue: Color = null;\n    private hueValue: Color = null;\n    private initValue: Color = null;\n    private readonly valueChanged: Subject<Color> = new Subject();\n\n    public readonly presetsVisibilityChanges: BehaviorSubject<boolean> = new BehaviorSubject(true);\n    public initType: ColorType = null;\n    public readonly alphaChannelVisibilityChanges: BehaviorSubject<boolean> = new BehaviorSubject(true);\n    public readonly valueChanges = this.valueChanged.asObservable().pipe(distinctUntilChanged((x, y) => x.toRgbaString() == y.toRgbaString()));\n\n    private colorPresets: Array<Array<Color> | Color> = [];\n\n    constructor() {\n        const color = Color.from(new Rgba(255, 0, 0, 1));\n        this.setValue(color);\n        this.setHueColor(color);\n    }\n\n    public setValueFrom(color: ColorString | Color | Rgba | Hsla | Hsva): this {\n        const newColor = Color.from(color);\n        if (!this.initValue) {\n            this.initValue = Color.from(color);\n        }\n\n        if (typeof color === 'string') {\n            this.finOutInputType(color);\n        }\n        this.setHueColor(newColor);\n        this.setValue(newColor);\n        return this;\n    }\n\n    private setHueColor(color: Color) {\n        if (this.hueValue && color.getHsva().hue > 0 || !this.hueValue) {\n            this.hueValue = new Color().setHsva(color.getHsva().hue);\n        }\n    }\n\n    public get hue() {\n        return this.hueValue;\n    }\n\n    /**\n     * @internal\n     * used for two-way data binding\n     */\n    public set hue(hueColor: Color) {\n        this.hueValue = hueColor;\n    }\n\n    private setValue(value: Color): this {\n        this.modelValue = value;\n        this.valueChanged.next(value);\n        return this;\n    }\n\n    public get value(): Color {\n        return this.modelValue;\n    }\n\n    /**\n     * @internal\n     * used for two-way data binding\n     */\n    public set value(value: Color) {\n        this.setValue(value);\n    }\n\n    /**\n     * reset color to initial\n     */\n    public reset(): this {\n        let color;\n        if (!this.initValue) {\n            color = Color.from(new Rgba(255, 0, 0, 1));\n            this.hueValue = new Color().setHsva(color.getHsva().hue);\n        } else {\n            color = this.initValue.clone();\n            this.setHueColor(color);\n        }\n\n        this.setValue(color);\n        return this;\n    }\n\n    public isAlphaChannelEnabled(): boolean {\n        return this.alphaChannelVisibilityChanges.value;\n    }\n\n    public showAlphaChannel(): this {\n        this.alphaChannelVisibilityChanges.next(true);\n        return this;\n    }\n\n    public hideAlphaChannel(): this {\n        this.alphaChannelVisibilityChanges.next(false);\n        return this;\n    }\n\n    private finOutInputType(colorString: ColorString) {\n        const str = colorString.replace(/ /g, '').toLowerCase();\n        if (str[0] === '#') {\n            this.initType = ColorType.hex;\n            if (str.length > 7) {\n                this.initType = ColorType.hexa;\n            }\n        }\n\n        const OpenParenthesis = str.indexOf('(');\n        const colorTypeName = str.substr(0, OpenParenthesis);\n        switch (colorTypeName) {\n            case ColorType.rgba:\n                this.initType = ColorType.rgba;\n                break;\n            case ColorType.rgb:\n                this.initType = ColorType.rgb;\n                break;\n            case ColorType.hsla:\n                this.initType = ColorType.hsla;\n                break;\n            case ColorType.hsl:\n                this.initType = ColorType.hsl;\n                break;\n            case ColorType.cmyk:\n                this.initType = ColorType.cmyk;\n                break;\n        }\n    }\n\n    public setColorPresets(colorPresets: Array<Array<ColorString> | ColorString>): this {\n        this.colorPresets = this.setPresets(colorPresets);\n        return this;\n    }\n\n    private setPresets(colorPresets: Array<Array<ColorString> | ColorString>): Array<Color> {\n        const presets = [];\n\n        for (const color of colorPresets) {\n            if (Array.isArray(color)) {\n                presets.push(this.setPresets(color));\n            } else {\n                presets.push(new Color(color));\n            }\n        }\n        return presets;\n    }\n\n    public get presets() {\n        return this.colorPresets;\n    }\n\n    public hasPresets(): boolean {\n        return this.colorPresets.length > 0;\n    }\n\n    public isPresetVisible(): boolean {\n        return this.presetsVisibilityChanges.value;\n    }\n\n    public showPresets(): this {\n        this.presetsVisibilityChanges.next(true);\n        return this;\n    }\n\n    public hidePresets(): this {\n        this.presetsVisibilityChanges.next(false);\n        return this;\n    }\n\n    /**\n     * complete emit on all observers\n     */\n    public unsubscribe(): void {\n        this.valueChanged.complete();\n        this.presetsVisibilityChanges.complete();\n    }\n}\n","\n\n\n\nexport abstract class BaseColor {\n    public abstract toString(showAlpha?: boolean): string;\n}","import { BaseColor } from './base-color.class';\n\n/**\n * CMYK color space\n * \n * Cyan = ranges from 0 to 100%\n * Magenta = ranges from 0 to 100%\n * Yellow = ranges from 0 to 100%\n * blacK = ranges from 0 to 100%\n */\nexport class Cmyk extends BaseColor {\n\n    constructor(public cyan: number, public magenta: number, public yellow: number, public black: number) {\n        super();\n    }\n\n    public toString(): string {\n        return `cmyk(${this.getCyan()}%, ${this.getMagenta()}%, ${this.getYellow()}%, ${this.getBlack()}%)`;\n    }\n\n    public getCyan() {\n        return Math.round(this.cyan);\n    }\n\n    public getMagenta() {\n        return Math.round(this.magenta);\n    }\n\n    public getYellow() {\n        return Math.round(this.yellow);\n    }\n\n    public getBlack() {\n        return Math.round(this.black);\n    }\n}","import { BaseColor } from './base-color.class';\n\n/**\n * HSL and HSI are the same\n * \n * Hue = ranges from 0 to 360Â°\n * Saturation = ranges from 0 to 100%\n * Lightness or Intensity = ranges from 0 to 100%\n * Alpha = range from 0-1\n */\nexport class Hsla extends BaseColor {\n\n    constructor(public hue: number, public saturation: number, public lightness: number, public alpha: number) {\n        super();\n    }\n\n    public toString(showAlphaChannel: boolean = true): string {\n        return showAlphaChannel \n            ? `hsla(${this.getHue()}, ${this.getSaturation()}%, ${this.getLightness()}%, ${this.getAlpha()})`\n            : `hsl(${this.getHue()}, ${this.getSaturation()}%, ${this.getLightness()}%)`;\n    }\n\n    public getHue() {\n        return Math.round(this.hue);\n    }\n\n    public getSaturation() {\n        return Math.round(this.saturation);\n    }\n\n    public getLightness() {\n        return Math.round(this.lightness);\n    }\n\n    public getAlpha(): number {\n        return Math.round(this.alpha * 100) / 100;\n    }\n}\n","import { BaseColor } from './base-color.class';\n\n/**\n * HSB and HSV are the same\n * \n * Hue = ranges from 0 to 360Â°\n * Saturation = ranges from 0 to 100%\n * Brightness or Value = ranges from 0 to 100%\n * Alpha = range from 0-1\n */\nexport class Hsva extends BaseColor {\n\n    constructor(public hue: number, public saturation: number, public value: number, public alpha: number) {\n        super();\n    }\n\n    public toString(showAlphaChannel: boolean = true): string {\n        return showAlphaChannel ? `hsva(${this.getHue()}, ${this.getSaturation()}%, ${this.getValue()}%, ${this.getAlpha()})` \n                                : `hsv(${this.getHue()}, ${this.getSaturation()}%, ${this.getValue()}%)`;\n    }\n\n    public getHue() {\n        return Math.round(this.hue);\n    }\n\n    public getSaturation() {\n        return Math.round(this.saturation);\n    }\n\n    public getValue() {\n        return Math.round(this.value);\n    }\n\n    public getAlpha(): number {\n        return Math.round(this.alpha * 100) / 100;\n    }\n}\n","import { BaseColor } from './base-color.class';\n\n/**\n * RGB (Red Green Blue)\n * \n * Red = ranges from 0-255\n * Green = ranges from 0-255\n * Blue = ranges from 0-255\n * Alpha = range from 0-1\n */\nexport class Rgba extends BaseColor {\n\n    constructor(public red: number, public green: number, public blue: number, public alpha: number) {\n        super();\n    }\n\n    public toString(showAlphaChannel: boolean = true): string {\n        return showAlphaChannel \n            ? `rgba(${this.getRed()}, ${this.getGreen()}, ${this.getBlue()}, ${this.getAlpha()})`\n            : `rgb(${this.getRed()}, ${this.getGreen()}, ${this.getBlue()})`;\n    }\n\n    public getRed(): number {\n        return Math.round(this.red);\n    }\n\n    public getGreen(): number {\n        return Math.round(this.green);\n    }\n\n    public getBlue(): number {\n        return Math.round(this.blue);\n    }\n\n    public getAlpha(): number {\n        return Math.round(this.alpha * 100) / 100;\n    }\n}\n","import { Rgba } from './rgba.class';\n\n/**\n * http://www.w3.org/TR/css3-color/\n */\nexport class ColorsTable {\n    public static transparent = new Rgba(0, 0, 0, 0);\n    public static aliceblue = new Rgba(240, 248, 255, 1);\n    public static antiquewhite = new Rgba(250, 235, 215, 1);\n    public static aqua = new Rgba(0, 255, 255, 1);\n    public static aquamarine = new Rgba(127, 255, 212, 1);\n    public static azure = new Rgba(240, 255, 255, 1);\n    public static beige = new Rgba(245, 245, 220, 1);\n    public static bisque = new Rgba(255, 228, 196, 1);\n    public static black = new Rgba(0, 0, 0, 1);\n    public static blanchedalmond = new Rgba(255, 235, 205, 1);\n    public static blue = new Rgba(0, 0, 255, 1);\n    public static blueviolet = new Rgba(138, 43, 226, 1);\n    public static brown = new Rgba(165, 42, 42, 1);\n    public static burlywood = new Rgba(222, 184, 135, 1);\n    public static cadetblue = new Rgba(95, 158, 160, 1);\n    public static chartreuse = new Rgba(127, 255, 0, 1);\n    public static chocolate = new Rgba(210, 105, 30, 1);\n    public static coral = new Rgba(255, 127, 80, 1);\n    public static cornflowerblue = new Rgba(100, 149, 237, 1);\n    public static cornsilk = new Rgba(255, 248, 220, 1);\n    public static crimson = new Rgba(220, 20, 60, 1);\n    public static cyan = new Rgba(0, 255, 255, 1);\n    public static darkblue = new Rgba(0, 0, 139, 1);\n    public static darkcyan = new Rgba(0, 139, 139, 1);\n    public static darkgoldenrod = new Rgba(184, 134, 11, 1);\n    public static darkgray = new Rgba(169, 169, 169, 1);\n    public static darkgreen = new Rgba(0, 100, 0, 1);\n    public static darkgrey = ColorsTable.darkgray;\n    public static darkkhaki = new Rgba(189, 183, 107, 1);\n    public static darkmagenta = new Rgba(139, 0, 139, 1);\n    public static darkolivegreen = new Rgba(85, 107, 47, 1);\n    public static darkorange = new Rgba(255, 140, 0, 1);\n    public static darkorchid = new Rgba(153, 50, 204, 1);\n    public static darkred = new Rgba(139, 0, 0, 1);\n    public static darksalmon = new Rgba(233, 150, 122, 1);\n    public static darkseagreen = new Rgba(143, 188, 143, 1);\n    public static darkslateblue = new Rgba(72, 61, 139, 1);\n    public static darkslategray = new Rgba(47, 79, 79, 1);\n    public static darkslategrey = ColorsTable.darkslategray;\n    public static darkturquoise = new Rgba(0, 206, 209, 1);\n    public static darkviolet = new Rgba(148, 0, 211, 1);\n    public static deeppink = new Rgba(255, 20, 147, 1);\n    public static deepskyblue = new Rgba(0, 191, 255, 1);\n    public static dimgray = new Rgba(105, 105, 105, 1);\n    public static dimgrey = ColorsTable.dimgray;\n    public static dodgerblue = new Rgba(30, 144, 255, 1);\n    public static firebrick = new Rgba(178, 34, 34, 1);\n    public static floralwhite = new Rgba(255, 250, 240, 1);\n    public static forestgreen = new Rgba(34, 139, 34, 1);\n    public static fuchsia = new Rgba(255, 0, 255, 1);\n    public static gainsboro = new Rgba(220, 220, 220, 1);\n    public static ghostwhite = new Rgba(248, 248, 255, 1);\n    public static gold = new Rgba(255, 215, 0, 1);\n    public static goldenrod = new Rgba(218, 165, 32, 1);\n    public static gray = new Rgba(128, 128, 128, 1);\n    public static grey = ColorsTable.gray;\n    public static green = new Rgba(0, 128, 0, 1);\n    public static greenyellow = new Rgba(173, 255, 47, 1);\n    public static honeydew = new Rgba(240, 255, 240, 1);\n    public static hotpink = new Rgba(255, 105, 180, 1);\n    public static indianred = new Rgba(205, 92, 92, 1);\n    public static indigo = new Rgba(75, 0, 130, 1);\n    public static ivory = new Rgba(255, 255, 240, 1);\n    public static khaki = new Rgba(240, 230, 140, 1);\n    public static lavender = new Rgba(230, 230, 250, 1);\n    public static lavenderblush = new Rgba(255, 240, 245, 1);\n    public static lawngreen = new Rgba(124, 252, 0, 1);\n    public static lemonchiffon = new Rgba(255, 250, 205, 1);\n    public static lightblue = new Rgba(173, 216, 230, 1);\n    public static lightcoral = new Rgba(240, 128, 128, 1);\n    public static lightcyan = new Rgba(224, 255, 255, 1);\n    public static lightgoldenrodyellow = new Rgba(250, 250, 210, 1);\n    public static lightgray = new Rgba(211, 211, 211, 1);\n    public static lightgreen = new Rgba(144, 238, 144, 1);\n    public static lightgrey = ColorsTable.lightgray;\n    public static lightpink = new Rgba(255, 182, 193, 1);\n    public static lightsalmon = new Rgba(255, 160, 122, 1);\n    public static lightseagreen = new Rgba(32, 178, 170, 1);\n    public static lightskyblue = new Rgba(135, 206, 250, 1);\n    public static lightslategray = new Rgba(119, 136, 153, 1);\n    public static lightslategrey = ColorsTable.lightslategray;\n    public static lightsteelblue = new Rgba(176, 196, 222, 1);\n    public static lightyellow = new Rgba(255, 255, 224, 1);\n    public static lime = new Rgba(0, 255, 0, 1);\n    public static limegreen = new Rgba(50, 205, 50, 1);\n    public static linen = new Rgba(250, 240, 230, 1);\n    public static magenta = new Rgba(255, 0, 255, 1);\n    public static maroon = new Rgba(128, 0, 0, 1);\n    public static mediumaquamarine = new Rgba(102, 205, 170, 1);\n    public static mediumblue = new Rgba(0, 0, 205, 1);\n    public static mediumorchid = new Rgba(186, 85, 211, 1);\n    public static mediumpurple = new Rgba(147, 112, 219, 1);\n    public static mediumseagreen = new Rgba(60, 179, 113, 1);\n    public static mediumslateblue = new Rgba(123, 104, 238, 1);\n    public static mediumspringgreen = new Rgba(0, 250, 154, 1);\n    public static mediumturquoise = new Rgba(72, 209, 204, 1);\n    public static mediumvioletred = new Rgba(199, 21, 133, 1);\n    public static midnightblue = new Rgba(25, 25, 112, 1);\n    public static mintcream = new Rgba(245, 255, 250, 1);\n    public static mistyrose = new Rgba(255, 228, 225, 1);\n    public static moccasin = new Rgba(255, 228, 181, 1);\n    public static navajowhite = new Rgba(255, 222, 173, 1);\n    public static navy = new Rgba(0, 0, 128, 1);\n    public static oldlace = new Rgba(253, 245, 230, 1);\n    public static olive = new Rgba(128, 128, 0, 1);\n    public static olivedrab = new Rgba(107, 142, 35, 1);\n    public static orange = new Rgba(255, 165, 0, 1);\n    public static orangered = new Rgba(255, 69, 0, 1);\n    public static orchid = new Rgba(218, 112, 214, 1);\n    public static palegoldenrod = new Rgba(238, 232, 170, 1);\n    public static palegreen = new Rgba(152, 251, 152, 1);\n    public static paleturquoise = new Rgba(175, 238, 238, 1);\n    public static palevioletred = new Rgba(219, 112, 147, 1);\n    public static papayawhip = new Rgba(255, 239, 213, 1);\n    public static peachpuff = new Rgba(255, 218, 185, 1);\n    public static peru = new Rgba(205, 133, 63, 1);\n    public static pink = new Rgba(255, 192, 203, 1);\n    public static plum = new Rgba(221, 160, 221, 1);\n    public static powderblue = new Rgba(176, 224, 230, 1);\n    public static purple = new Rgba(128, 0, 128, 1);\n    public static red = new Rgba(255, 0, 0, 1);\n    public static rosybrown = new Rgba(188, 143, 143, 1);\n    public static royalblue = new Rgba(65, 105, 225, 1);\n    public static saddlebrown = new Rgba(139, 69, 19, 1);\n    public static salmon = new Rgba(250, 128, 114, 1);\n    public static sandybrown = new Rgba(244, 164, 96, 1);\n    public static seagreen = new Rgba(46, 139, 87, 1);\n    public static seashell = new Rgba(255, 245, 238, 1);\n    public static sienna = new Rgba(160, 82, 45, 1);\n    public static silver = new Rgba(192, 192, 192, 1);\n    public static skyblue = new Rgba(135, 206, 235, 1);\n    public static slateblue = new Rgba(106, 90, 205, 1);\n    public static slategray = new Rgba(112, 128, 144, 1);\n    public static slategrey = ColorsTable.slategray;\n    public static snow = new Rgba(255, 250, 250, 1);\n    public static springgreen = new Rgba(0, 255, 127, 1);\n    public static steelblue = new Rgba(70, 130, 180, 1);\n    public static tan = new Rgba(210, 180, 140, 1);\n    public static teal = new Rgba(0, 128, 128, 1);\n    public static thistle = new Rgba(216, 191, 216, 1);\n    public static tomato = new Rgba(255, 99, 71, 1);\n    public static turquoise = new Rgba(64, 224, 208, 1);\n    public static violet = new Rgba(238, 130, 238, 1);\n    public static wheat = new Rgba(245, 222, 179, 1);\n    public static white = new Rgba(255, 255, 255, 1);\n    public static whitesmoke = new Rgba(245, 245, 245, 1);\n    public static yellow = new Rgba(255, 255, 0, 1);\n    public static yellowgreen = new Rgba(154, 205, 50, 1);\n}","import { Cmyk } from './cmyk.class';\nimport { Hsla } from './hsla.class';\nimport { Hsva } from './hsva.class';\nimport { Rgba } from './rgba.class';\nimport { ColorsTable } from './colors-table.class';\n\nexport type ColorString = string;\n\nexport class Color {\n\n    /**\n     * base color used to calculate other\n     * default color\n     * rgb(255, 0, 0)\n     * hsl(0, 100%, 50%)\n     * #ff0000\n     */\n    private hsva: Hsva = new Hsva(0, 1, 1, 1);\n    private rgba: Rgba = new Rgba(255, 0, 0, 1);\n\n    constructor(colorString?: ColorString){\n        if (colorString) {\n            this.stringToColor(colorString);\n        }\n    }\n\n    public static from(color: ColorString | Color | Hsva | Rgba | Hsla): Color {\n        if (typeof color === 'string') {\n            return new Color(color);\n        } else if(color instanceof Color) {\n            return color.clone();\n        } else if(color instanceof Rgba) {\n            return new Color().setRgba(color.red, color.green, color.blue, color.alpha);\n        } else if(color instanceof Hsva) {\n            return new Color().setHsva(color.hue, color.saturation, color.value, color.alpha);\n        } else if(color instanceof Hsla) {\n            return new Color().setHsla(color.hue, color.saturation, color.lightness, color.alpha);\n        }\n\n        return null;\n    }\n\n    /**\n     * make from existing color new color object\n     */\n    public clone(): Color {\n        return Color.from(this.getRgba());\n    }\n\n    /**\n     * define Color from hex, rgb, rgba, hsl, hsla or cmyk string\n     */\n    public setFromString(color: ColorString): this {\n        return this.stringToColor(color);\n    }\n\n    /**\n     * define Color from HSV values\n     */\n    public setHsva(hue: number = null, saturation: number = 100, brightness: number = 100, alpha: number = 1): this {\n        if (hue != null) {\n            this.hsva.hue = hue;\n        }\n\n        if (saturation != null) {\n            this.hsva.saturation = saturation;\n        }\n\n        if (brightness != null) {\n            this.hsva.value = brightness;\n        }\n\n        if (alpha != null) {\n            alpha = alpha > 1 ? 1 : alpha < 0 ? 0 : alpha;\n            this.hsva.alpha = alpha;\n        }\n\n        this.rgba = this.hsvaToRgba(this.hsva);\n        return this;\n    }\n\n    /**\n     * define Color from RGBa\n     */\n    public setRgba(red: number = null, green: number = null, blue: number = null, alpha: number = 1): this {\n        if (red != null) {\n            this.rgba.red = red;\n        }\n\n        if (green != null) {\n            this.rgba.green = green;\n        }\n\n        if (blue != null) {\n            this.rgba.blue = blue;\n        }\n\n        if (alpha != null) {\n            alpha = alpha > 1 ? 1 : alpha < 0 ? 0 : alpha;\n            this.rgba.alpha = alpha;\n        }\n\n        this.hsva = this.rgbaToHsva(this.rgba);\n        return this;\n    }\n\n    /**\n     * define Color from HSLa\n     */\n    public setHsla(hue: number, saturation: number, lightness: number, alpha: number = 1): this {\n        if (alpha != null) {\n            alpha = alpha > 1 ? 1 : alpha < 0 ? 0 : alpha;\n            this.rgba.alpha = alpha;\n        }\n\n        const hsla = new Hsla(hue, saturation, lightness, alpha);\n        this.rgba = this.hslaToRgba(hsla);\n        this.hsva = this.rgbaToHsva(this.rgba);\n        return this;\n    }\n\n    /**\n     * return hexadecimal value formatted as '#341d2a' or '#341d2aFF' if alhpa channel is enabled\n     */\n    public toHexString(alpha: boolean = false): ColorString {\n        /* tslint:disable:no-bitwise */\n        let hex = '#' + ((1 << 24) | (this.rgba.getRed() << 16) | (this.rgba.getGreen() << 8) | this.rgba.getBlue()).toString(16).substr(1);\n        if (alpha) {\n            hex += ((1 << 8) | Math.round(this.rgba.alpha * 255)).toString(16).substr(1);\n        }\n        /* tslint:enable:no-bitwise */\n        return hex.toUpperCase();\n    }\n\n    /**\n     * return rgba string formatted as rgba(52, 29, 42, 1)\n     */\n    public toRgbaString(): ColorString {\n        return this.rgba.toString();\n    }\n\n    /**\n     * return rgb string formatted as rgb(52, 29, 42)\n     */\n    public toRgbString(): ColorString {\n        return this.rgba.toString(false);\n    }\n\n    /**\n     * return hsla string formatted as hsla(327, 29%, 16%, 1)\n     */\n    public toHslaString(): ColorString {\n        return this.getHsla().toString();\n    }\n\n    /**\n     * return hsl string formatted as hsl(327, 29%, 16%)\n     */\n    public toHslString(): ColorString {\n        return this.getHsla().toString(false);\n    }\n\n    /**\n     * return hsva string formatted as hsva(327, 29%, 16%, 100%)\n     */\n    public toHsvaString(): ColorString {\n        return this.hsva.toString();\n    }\n\n    /**\n     * return hsv string formatted as hsv(327, 29%, 16%)\n     */\n    public toHsvString(): ColorString {\n        return this.hsva.toString(false);\n    }\n\n    /**\n     * return Cmyk string formatted as cmyk(100%, 100%, 100%, 100%)\n     */\n    public toCmykString(): ColorString {\n        return this.getCmyk().toString();\n    }\n\n    public getHsva(): Hsva {\n        return new Hsva(this.hsva.hue, this.hsva.saturation, this.hsva.value, this.hsva.alpha);\n    }\n\n    public getRgba(): Rgba {\n        return new Rgba(this.rgba.red, this.rgba.green, this.rgba.blue, this.rgba.alpha);\n    }\n\n    public getHsla(): Hsla {\n        return this.rgbaToHsla(this.rgba);\n    }\n\n    public getCmyk(): Cmyk {\n        return this.rgbaToCmyk(this.rgba);\n    }\n\n    private hsvaToHsla(color: Hsva): Hsla {\n        const hue = color.hue;\n        const s = color.saturation / 100;\n        const v = color.value / 100;\n        const lightness = ((2 - s) * color.value) / 2;\n        const saturation = (s * v) / ((lightness <= 1) ? lightness : 2 - lightness) || 0;\n\n        return new Hsla(hue, lightness * 100, saturation * 100, color.alpha);\n    }\n\n    private hslaToHsva(color: Hsla): Hsva {\n        const hue = color.hue;\n        const l = (color.lightness / 100) * 2;\n        const s = (color.saturation / 100) * (l <= 1 ? l : 2 - l);\n        const value = (l + s) / 2;\n        const saturation = (2 * s) / (l + s) || 0;\n\n        return new Hsva(hue, saturation, value, color.alpha);\n    }\n\n    private rgbaToHsva(color: Rgba): Hsva {\n        const red = color.red / 255;\n        const green = color.green / 255;\n        const blue = color.blue / 255;\n        const alpha = color.alpha;\n\n        const Cmax = Math.max(red, green, blue);\n        const Cmin = Math.min(red, green, blue);\n        const delta = Cmax - Cmin;\n\n        let hue = 0;\n        let saturation: number = Cmax === 0 ? 0 : delta / Cmax;\n        let brightness: number = Cmax;\n\n        if (Cmax !== Cmin) {\n            switch (Cmax) {\n                case red:\n                    hue = (green - blue) / delta + (green < blue ? 6 : 0);\n                    break;\n                case green:\n                    hue = 2 + (blue - red) / delta;\n                    break;\n                case blue:\n                    hue = 4 + (red - green) / delta;\n                    break;\n            }\n            hue /= 6;\n        }\n\n        hue = hue * 360;\n        saturation = saturation * 100;\n        brightness = brightness * 100;\n\n        return new Hsva(hue, saturation, brightness, alpha);\n    }\n\n    private hsvaToRgba(color: Hsva): Rgba {\n        let red = 1;\n        let green = 0;\n        let blue = 0;\n        const saturation = color.saturation / 100;\n        const brightness = color.value / 100;\n        const alpha = color.alpha;\n        const hex = color.hue / 60;\n\n        const primary = Math.floor(hex);\n        const secoundary = hex - primary;\n        const a = (1 - saturation) * brightness;\n        const b = (1 - (saturation * secoundary)) * brightness;\n        const c = (1 - (saturation * (1 - secoundary))) * brightness;\n\n        switch (primary) {\n            case 6:\n            case 0: red = brightness; green = c; blue = a; break;\n            case 1: red = b; green = brightness; blue = a; break;\n            case 2: red = a; green = brightness; blue = c; break;\n            case 3: red = a; green = b; blue = brightness; break;\n            case 4: red = c; green = a; blue = brightness; break;\n            case 5: red = brightness; green = a; blue = b; break;\n        }\n\n        red = red * 255;\n        green = green * 255;\n        blue = blue * 255;\n\n        return new Rgba(red, green, blue, alpha)\n    }\n\n    private rgbaToHsla(color: Rgba): Hsla {\n        // based on CamanJS\n        const red = color.red / 255;\n        const green = color.green / 255;\n        const blue = color.blue / 255;\n        const alpha = color.alpha;\n\n        const max = Math.max(red, green, blue);\n        const min = Math.min(red, green, blue);\n\n        let hue = 0;\n        let saturation = 0;\n        let luminance = (max + min) / 2;\n        const delta = max - min;\n\n        if (max !== min) {\n            saturation = luminance > 0.5 ? delta / (2.0 - max - min) : delta / (max + min);\n            switch (max) {\n                case red:\n                    hue = (green - blue) / delta + (green < blue ? 6 : 0);\n                    break;\n                case green:\n                    hue = (blue - red) / delta + 2;\n                    break;\n                case blue:\n                    hue = (red - green) / delta + 4;\n                    break;\n            }\n\n            hue /= 6;\n        }\n\n        hue = hue * 360;\n        saturation = saturation * 100;\n        luminance = luminance * 100;\n\n        return new Hsla(hue, saturation, luminance, alpha);\n    }\n\n    /**\n     * convert rgb color from HSLa\n     *\n     * hue = 0 => 360\n     * saturation = 0 => 1\n     * lightness = 0 => 1\n     */\n    private hslaToRgba(color: Hsla): Rgba {\n        const hue = color.hue / 360;\n        const saturation = color.saturation / 100;\n        const lightness = color.lightness / 100;\n        const alpha = color.alpha;\n\n        let red = lightness;\n        let green = lightness;\n        let blue = lightness;\n\n        if(saturation !== 0) {\n            const q = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - (lightness * saturation);\n            const p = 2 * lightness - q;\n\n            red = this.hueToRgb(p, q, hue + (1 / 3));\n            green = this.hueToRgb(p, q, hue);\n            blue = this.hueToRgb(p, q, hue - (1 / 3));\n        }\n\n        red = red * 255;\n        green = green * 255;\n        blue = blue * 255;\n\n        return new Rgba(red, green, blue, alpha);\n    }\n\n    private hueToRgb(p, q, t): number {\n        // based on CamanJS\n        if (t < 0) { t += 1; }\n        if (t > 1) { t -= 1; }\n        if (t < 1 / 6) { return p + (q - p) * 6 * t; }\n        if (t < 1 / 2) { return q; }\n        if (t < 2 / 3) { return p + (q - p) * (2 / 3 - t) * 6; }\n        return p;\n    }\n\n    /**\n     * The Red, Green, Blue values are given in the range of 0..255,\n     *\n     * the red color(R) is calculated from the cyan(C) and black(K) colors,\n     * the green color(G) is calculated from the magenta(M) and black(K) colors,\n     * The blue color(B) is calculated from the yellow(Y) and black(K) colors.\n     *\n     * Below is the formula of CMYK to RGB convertion\n     *\n     * Red = 255 Ã 1 - min( (1 - Cyan Ã· 100) Ã (1 - Black) )\n     * Green = 255 Ã 1 - min(1 - Magenta Ã· 100) Ã (1 - Black)\n     * Blue = 255 Ã 1 - min(1 - Yellow Ã· 100) Ã (1 - Black)\n     */\n    private cmykToRgba(color: Cmyk): Rgba {\n        const black = color.black / 100;\n        const cyan = color.cyan / 100;\n        const magenta = color.magenta / 100;\n        const yellow = color.yellow / 100;\n\n        let red = Math.min(1, (1 - cyan) * (1 - black));\n        let green = Math.min(1, (1 - magenta) * (1 - black));\n        let blue = Math.min(1, (1 - yellow) * (1 - black));\n\n        red = red * 255;\n        green = green * 255;\n        blue = blue * 255;\n\n        return new Rgba(red, green, blue, 1);\n    }\n\n    /**\n     * The max number of R, G, B values are 255, first of all, we divided them by 255 to become the number\n     * of 0~1, this ratio will be used in the calculation.\n     * Rc = R Ã· 255\n     * Gc = G Ã· 255\n     * Bc = B Ã· 255\n     * The black key(K) color could be many result, when we assume a black key value,\n     * the other three colors(cyan, magenta, yellow) can be calculated.\n     * we can calculate it from the red, green and blue colors, the max number of black key should be :\n     * K = 1 - min(Rc, Gc, Bc);\n     *\n     * or we can assume we run out of the black ink, need use the remaining other three color inks to finish the printing job.\n     * K = 0;\n     *\n     * The cyan color(C) is calculated from the red and black colors:\n     * C = (1 - Rc - K) Ã· (1 - K)\n     *\n     * The magenta color (M) is calculated from the green and black colors:\n     * M = (1 - Gr - K) Ã· (1 - K)\n     *\n     * The yellow color(Y) is calculated from the blue and black colors:\n     * Y = (1 - Bc - K) Ã· ( 1 - K)\n     */\n    private rgbaToCmyk(color: Rgba): Cmyk {\n        const red = color.red / 255;\n        const green = color.green / 255;\n        const blue = color.blue / 255;\n\n        let cyan = 1 - red;\n        let magenta = 1 - green;\n        let yellow = 1 - blue;\n        let black = Math.min(cyan, magenta, yellow);\n\n        if (black == 1) {\n            return new Cmyk(0, 0, 0, 1);\n        }\n\n        cyan = (cyan - black) / (1 - black);\n        magenta = (magenta - black) / (1 - black);\n        yellow = (yellow - black) / (1 - black);\n\n        black =  black * 100;\n        cyan =  cyan * 100;\n        magenta =  magenta * 100;\n        yellow =  yellow * 100;\n\n        return new Cmyk(cyan, magenta, yellow, black);\n    }\n\n    private roundNumber(number: number): number {\n        return Math.round(number * 100) / 100;\n    }\n\n    private stringToColor(colorString: ColorString): this {\n        const str = colorString.replace(/ /g, '').toLowerCase();\n        /**\n         * try to find color by name in table\n         */\n        let rgba: Rgba = ColorsTable[str] || null;\n\n        /**\n         * hex find\n         */\n        if (str[0] === '#') {\n            let hex = str.substr(1);\n            const length = hex.length;\n            let a = 1;\n            let hexArray;\n\n            if (length === 3) {\n                hexArray = hex.split('').map((value) => value + value);\n            } else if (length === 6) {\n                hexArray = hex.match(/.{2}/g);\n            } else if (length === 8) {\n                const alpha = hex.substr(-2);\n                hex = hex.substr(0, length - 2);\n                a = this.roundNumber(parseInt(alpha || 'FF', 16) / 255);\n                hexArray = hex.match(/.{2}/g);\n            }\n\n            if (hexArray.length === 3) {\n                rgba = new Rgba(parseInt(hexArray[0], 16), parseInt(hexArray[1], 16), parseInt(hexArray[2], 16), a);\n            }\n        }\n\n        const OpenParenthesis = str.indexOf('(');\n        const CloseParenthesis = str.indexOf(')');\n\n        if (OpenParenthesis !== -1 && CloseParenthesis + 1 === str.length) {\n            const colorTypeName = str.substr(0, OpenParenthesis);\n            const params = str.substr(OpenParenthesis + 1, CloseParenthesis - (OpenParenthesis + 1)).split(',');\n            let alpha = 1;\n\n            switch (colorTypeName) {\n                case 'rgba':\n                    alpha = parseFloat(params.pop());\n                    // Fall through.\n                case 'rgb':\n                    rgba = new Rgba(parseInt(params[0], 10), parseInt(params[1], 10), parseInt(params[2], 10), alpha);\n                    break;\n                case 'hsla':\n                    alpha = parseFloat(params.pop());\n                case 'hsl':\n                    const hsla = new Hsla(parseInt(params[0], 10), parseInt(params[1], 10), parseInt(params[2], 10), alpha);\n                    rgba = this.hslaToRgba(hsla);\n                    break;\n                case 'cmyk':\n                    const cmyk = new Cmyk(\n                                    parseInt(params[0], 10),\n                                    parseInt(params[1], 10),\n                                    parseInt(params[2], 10),\n                                    parseInt(params[3], 10));\n                    rgba = this.cmykToRgba(cmyk);\n                    break;\n            }\n        }\n\n        if (rgba) {\n            this.rgba = rgba;\n            this.hsva = this.rgbaToHsva(rgba);\n        }\n\n        return this;\n    }\n\n}\n","import { ElementRef, Renderer2, OnDestroy } from '@angular/core';\n\n/**\n * because a dynamic directive yet is not implemented,\n * we have a base class which will\n * help us to implement position calculation in our\n * components\n */\nexport abstract class BaseComponent implements OnDestroy {\n\n    private eventHooks: Array<Function> = [];\n    private window: any = {pageXOffset: 0, pageYOffset: 0};\n    private readonly requestAnimationFrame;\n\n    constructor(private readonly document, protected readonly elementRef: ElementRef, protected readonly renderer: Renderer2) {\n        this.window = document.defaultView;\n        this.requestAnimationFrame = this.getRequestAnimationFrame();\n    }\n\n    public abstract movePointer(coordinates: {x: number; y: number; height: number; width: number;}): void;\n\n    protected onEventChange(event: MouseEvent|TouchEvent): void {\n        this.calculate(event);\n\n        this.eventHooks.push(\n            this.renderer.listen(this.document, 'mouseup', () => this.removeListeners())\n        );\n        this.eventHooks.push(\n            this.renderer.listen(this.document, 'touchend', () => this.removeListeners())\n        );\n        this.eventHooks.push(\n            this.renderer.listen(this.document, 'mousemove', (e) => this.calculate(e))\n        );\n        this.eventHooks.push(\n            this.renderer.listen(this.document, 'touchmove', (e) => this.calculate(e))\n        );\n    }\n\n    private calculateCoordinates(event: MouseEvent|TouchEvent): void {\n        const { width: elWidth, height: elHeight, top: elTop, left: elLeft } = this.elementRef.nativeElement.getBoundingClientRect();\n\n        const pageX = typeof event['pageX'] === 'number' ? event['pageX'] : event['touches'][0].pageX;\n        const pageY = typeof event['pageY'] === 'number' ? event['pageY'] : event['touches'][0].pageY;\n\n        const x = Math.max(0, Math.min(pageX - (elLeft + this.window.pageXOffset), elWidth));\n        const y = Math.max(0, Math.min(pageY - (elTop + this.window.pageYOffset), elHeight));\n\n        this.movePointer({x, y, height: elHeight, width: elWidth });\n    }\n\n    private calculate(event: MouseEvent|TouchEvent): void {\n        event.preventDefault();\n        if (!this.requestAnimationFrame) {\n            return this.calculateCoordinates(event);\n        }\n\n        this.requestAnimationFrame(() => this.calculateCoordinates(event));\n    }\n\n    private getRequestAnimationFrame(): Function {\n        return this.window.requestAnimationFrame ||\n                this.window.webkitRequestAnimationFrame ||\n                this.window.mozRequestAnimationFrame ||\n                this.window.oRequestAnimationFrame ||\n                this.window.msRequestAnimationFrame;\n    }\n\n    private removeListeners(): void {\n        this.eventHooks.forEach((cb) => cb());\n        this.eventHooks.length = 0;\n    }\n\n    public ngOnDestroy(): void {\n        this.removeListeners();\n    }\n}","import {\n    Component,\n    HostBinding,\n    Input,\n    EventEmitter,\n    Output,\n    ChangeDetectionStrategy,\n    HostListener,\n    Renderer2,\n    Inject,\n    ElementRef,\n    ViewChild,\n    OnInit,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Color } from './../../../helpers/color.class';\nimport { BaseComponent } from './../base.component';\n\n\n@Component({\n    selector: `saturation-component`,\n    templateUrl: `./saturation.component.html`,\n    styleUrls: [\n        `./../base.style.scss`,\n        './saturation.component.scss'\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SaturationComponent extends BaseComponent implements OnInit, OnChanges {\n\n    @Input()\n    public hue: Color;\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    @ViewChild('pointer', { static: true })\n    public pointer: ElementRef;\n\n    constructor(renderer: Renderer2, @Inject(DOCUMENT) document, elementRef: ElementRef) {\n        super(document, elementRef, renderer);\n    }\n\n    @HostBinding('style.backgroundColor')\n    public get backgroundColor(): string {\n        return this.hue ? this.hue.toRgbaString() : '';\n    }\n\n    @HostListener('mousedown', ['$event'])\n    @HostListener('touchstart', ['$event'])\n    public onClick(event: any): void {\n        this.onEventChange(event);\n    }\n\n    public ngOnInit(): void {\n        if (!this.hue) {\n            this.hue = Color.from(this.color.getHsva());\n        }\n        this.renderer.setStyle(this.elementRef.nativeElement, 'backgroundColor', this.backgroundColor);\n    }\n\n    /**\n     * color can be changed through inputs\n     * and then we need to move pointer\n     */\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.color && changes.color.previousValue !== changes.color.currentValue) {\n            const hsva = this.color.getHsva();\n            this.changePointerPosition(hsva.saturation, hsva.value);\n        }\n    }\n\n    public movePointer({x, y, height, width}): void {\n        const saturation = (x * 100) / width;\n        const bright = -((y * 100) / height) + 100;\n\n        this.changePointerPosition(saturation, bright);\n        const hsva = this.hue.getHsva();\n        const color = this.color.getHsva();\n        const newColor = new Color().setHsva(hsva.hue, saturation, bright, color.alpha);\n        this.colorChange.emit(newColor);\n    }\n\n    private changePointerPosition(x: number, y: number): void {\n        this.renderer.setStyle(this.pointer.nativeElement, 'top', `${100 - y}%`);\n        this.renderer.setStyle(this.pointer.nativeElement, 'left', `${x}%`);\n    }\n}\n","\nexport interface IColorPickerConfig {\n    indicatorTitle: string;\n    presetsTitle: string;\n}\n\nexport class ColorPickerConfig implements IColorPickerConfig {\n    public indicatorTitle: string = 'Copy color to clipboard';\n    public presetsTitle: string = '{0}. Long-click to show alternate shades.';\n}\n","import { Component, Input, HostBinding, HostListener, Renderer2, ElementRef, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Color } from './../../../helpers/color.class';\nimport { ColorPickerConfig } from './../../../services/color-picker.service';\n\n\n@Component({\n    selector: `indicator-component`,\n    templateUrl: `./indicator.component.html`,\n    styleUrls: [\n        `./../base.style.scss`,\n        `./indicator.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IndicatorComponent {\n    @Input()\n    public color: Color;\n\n    @Input()\n    public colorType: 'rgba' | 'hex' | 'hsla' = 'rgba';\n\n    @HostBinding('attr.title')\n    public get title() {\n        return this.pickerConfig ? this.pickerConfig.indicatorTitle : '';\n    }\n\n    constructor(\n        private readonly pickerConfig: ColorPickerConfig,\n        private readonly renderer: Renderer2, \n        private readonly elementRef: ElementRef,\n        @Inject(DOCUMENT) private readonly document){\n    }\n\n    public get backgroundColor(): string {\n        return this.color.toRgbaString();\n    }\n\n    @HostListener('click', ['$event'])\n    public onClick(event: MouseEvent | TouchEvent) {\n        const input = this.renderer.createElement('input');\n        this.renderer.setStyle(input, 'position', 'absolute');\n        this.renderer.setStyle(input, 'top', '-100%');\n        this.renderer.setStyle(input, 'left', '-100%');\n\n        switch(this.colorType) {\n            case 'hsla':\n                input.value = this.color.toHslaString();\n                break;\n            case 'hex':\n                input.value = this.color.toHexString();\n                break;\n            default:\n                input.value = this.backgroundColor;\n        }\n\n        this.renderer.appendChild(this.elementRef.nativeElement, input);\n        input.select();\n        this.document.execCommand('copy');\n        this.renderer.removeChild(this.elementRef.nativeElement, input);\n    }\n}\n","import {\n    Component,\n    ChangeDetectionStrategy,\n    Input,\n    Renderer2,\n    Inject,\n    ElementRef,\n    Output,\n    EventEmitter,\n    ViewChild,\n    HostListener,\n    SimpleChanges,\n    OnChanges\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Color } from './../../../helpers/color.class';\nimport { BaseComponent } from './../base.component';\n\n@Component({\n    selector: `hue-component`,\n    templateUrl: `./hue.component.html`,\n    styleUrls: [\n        `./../base.style.scss`,\n        `./hue.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HueComponent extends BaseComponent implements OnChanges {\n\n    @Input()\n    public hue: Color;\n\n    @Output()\n    public hueChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    @ViewChild('pointer', { static: true })\n    public pointer: ElementRef;\n\n    private isVertical: boolean = false;\n\n    constructor(renderer: Renderer2, @Inject(DOCUMENT) document, elementRef: ElementRef) {\n        super(document, elementRef, renderer);\n    }\n\n    @HostListener('mousedown', ['$event'])\n    @HostListener('touchstart', ['$event'])\n    public onClick(event: any): void {\n        this.onEventChange(event);\n    }\n\n    @Input()\n    public set vertical(value: string) {\n        this.isVertical = true;\n    }\n\n    /**\n     * color can be changed through inputs\n     * and then we need to move pointer\n     */\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.hue && changes.hue.previousValue !== changes.hue.currentValue) {\n            const hsva = this.hue.getHsva();\n            this.changePointerPosition(hsva.hue);\n        }\n    }\n\n    public movePointer({x, y, height, width}): void {\n        const hue = this.isVertical ? (y / height) * 360 : (x / width) * 360;\n        this.changePointerPosition(hue);\n\n        const color = this.color.getHsva();\n        const newColor = new Color().setHsva(hue, color.saturation, color.value, color.alpha);\n        const newHueColor = new Color().setHsva(hue, 100, 100, color.alpha);\n\n        this.hueChange.emit(newHueColor);\n        this.colorChange.emit(newColor);\n    }\n\n    /**\n     * hue value is in range from 0 to 360Â°\n     */\n    private changePointerPosition(hue: number): void {\n        const x = hue / 360 * 100;\n        const orientation = this.isVertical ? 'top' : 'left';\n        this.renderer.setStyle(this.pointer.nativeElement, orientation, `${x}%`);\n    }\n}","import {\n    Component,\n    Input,\n    EventEmitter,\n    Output,\n    ChangeDetectionStrategy,\n    OnChanges,\n    Inject,\n    ElementRef,\n    ViewChild,\n    HostListener,\n    Renderer2,\n    SimpleChanges\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Color } from './../../../helpers/color.class';\nimport { BaseComponent } from './../base.component';\n\n@Component({\n    selector: `alpha-component`,\n    templateUrl: `./alpha.component.html`,\n    styleUrls: [\n        `./../base.style.scss`,\n        `./alpha.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AlphaComponent extends BaseComponent implements OnChanges {\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    @ViewChild('pointer', { static: true })\n    public pointer: ElementRef;\n\n    private isVertical: boolean = false;\n\n    constructor(renderer: Renderer2, @Inject(DOCUMENT) document, elementRef: ElementRef) {\n        super(document, elementRef, renderer);\n    }\n\n    @HostListener('mousedown', ['$event'])\n    @HostListener('touchstart', ['$event'])\n    public onClick(event: any): void {\n        this.onEventChange(event);\n    }\n\n    @Input()\n    public set vertical(value: string) {\n        this.isVertical = true;\n    }\n\n    /**\n     * color can be changed through inputs\n     * and then we need to move pointer\n     */\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.color && changes.color.previousValue !== changes.color.currentValue) {\n            const hsva = this.color.getHsva();\n            this.changePointerPosition(hsva.alpha);\n        }\n    }\n\n    public movePointer({x, y, height, width}): void {\n        const alpha = this.isVertical ? y / height : x / width;\n        this.changePointerPosition(alpha);\n\n        const hsva = this.color.getHsva();\n        const newColor = new Color().setHsva(hsva.hue, hsva.saturation, hsva.value, alpha);\n        this.colorChange.emit(newColor);\n    }\n\n    /**\n     * hue value is in range from 0 to 360Â°\n     */\n    private changePointerPosition(alpha: number): void {\n        const x = alpha * 100;\n        const orientation = this.isVertical ? 'top' : 'left';\n        this.renderer.setStyle(this.pointer.nativeElement, orientation, `${x}%`);\n    }\n\n    public get gradient(): string {\n        const rgba = this.color.getRgba();\n        const orientation = this.isVertical ? 'bottom' : 'right';\n        return `linear-gradient(to ${orientation}, rgba(${rgba.red}, ${rgba.green}, ${rgba.blue}, 0) 0%, rgb(${rgba.red}, ${rgba.green}, ${rgba.blue}) 100%)`;\n    }\n\n}","import { Component, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { Color } from './../../../../helpers/color.class';\n\n\n@Component({\n    selector: `rgba-input-component`,\n    templateUrl: `./rgba-input.component.html`,\n    styleUrls: [\n        `./../../base.style.scss`,\n        `./../input.component.scss`,\n        `./rgba-input.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RgbaComponent {\n\n    @Input()\n    public hue: Color;\n\n    @Output()\n    public hueChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    public labelVisible: boolean;\n\n    @Input()\n    public set label(value) {\n        this.labelVisible = true;\n    }\n\n    public isAlphaVisible: boolean = true;\n\n    @Input()\n    public set alpha(isVisible: boolean) {\n        this.isAlphaVisible = isVisible;\n    }\n\n    public get value() {\n        return this.color ? this.color.getRgba() : null;\n    }\n\n    public onInputChange(newValue: number, color: 'R' | 'G' | 'B' | 'A') {\n        const value = this.value;\n        const red = color === 'R' ? newValue : value.red;\n        const green = color === 'G' ? newValue : value.green;\n        const blue = color === 'B' ? newValue : value.blue;\n        const alpha = color === 'A' ? newValue : value.alpha;\n\n        const newColor = new Color().setRgba(red, green, blue, alpha);\n        const hue = new Color().setHsva(newColor.getHsva().hue);\n\n        this.hueChange.emit(hue);\n        this.colorChange.emit(newColor);\n    }\n}\n","import { Component, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { Color } from './../../../../helpers/color.class';\n\n\n@Component({\n    selector: `hsla-input-component`,\n    templateUrl: `./hsla-input.component.html`,\n    styleUrls: [\n        `./../../base.style.scss`,\n        `./../input.component.scss`,\n        `./hsla-input.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HslaComponent {\n\n    @Input()\n    public hue: Color;\n\n    @Output()\n    public hueChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    public labelVisible: boolean;\n\n    @Input()\n    public set label(value) {\n        this.labelVisible = true;\n    }\n\n    public isAlphaVisible: boolean = true;\n\n    @Input()\n    public set alpha(isVisible: boolean) {\n        this.isAlphaVisible = isVisible;\n    }\n\n    public get value() {\n        return this.color ? this.color.getHsla() : null;\n    }\n\n    public onInputChange(newValue: number, color: 'H' | 'S' | 'L' | 'A') {\n        const value = this.value;\n        const hue = color === 'H' ? newValue : value.hue;\n        const saturation = color === 'S' ? newValue : value.saturation;\n        const lightness = color === 'L' ? newValue : value.lightness;\n        const alpha = color === 'A' ? newValue : value.alpha;\n\n\n        const newColor = new Color().setHsla(hue, saturation, lightness, alpha);\n        const hueColor = new Color().setHsva(newColor.getHsva().hue);\n\n        this.hueChange.emit(hueColor);\n        this.colorChange.emit(newColor);\n    }\n}\n","import { Component, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { Color } from '../../../../helpers/color.class';\n\n\n@Component({\n    selector: `hex-input-component`,\n    templateUrl: `./hex-input.component.html`,\n    styleUrls: [\n        `./../../base.style.scss`,\n        `./../input.component.scss`,\n        `./hex-input.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HexComponent {\n\n    @Input()\n    public hue: Color;\n\n    @Output()\n    public hueChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    public labelVisible: boolean;\n    private prefixValue: string = '';\n\n    @Input()\n    public set label(value) {\n        this.labelVisible = true;\n    }\n\n    @Input()\n    public set prefix(value){\n        this.prefixValue = value;\n    }\n\n    public get value() {\n        return this.prefixValue + (this.color ? this.color.toHexString().replace('#', '') : '');\n    }\n\n    public onInputChange(inputValue: string): void {\n        const value = inputValue.toLowerCase().replace('#', '');\n        if (value.length === 3 || value.length === 6 || value.length === 8) {\n            const hex = parseInt(value, 16);\n\n            /**\n             * if value is valid\n             * change color else do nothing\n             */\n            if (hex.toString(16) === value && this.value !== value) {\n                const newColor = new Color(`#${value}`);\n                const hue = new Color().setHsva(newColor.getHsva().hue);\n                this.hueChange.emit(hue);\n                this.colorChange.emit(newColor);\n            }\n        }\n    }\n}\n","import { Component, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { Color } from './../../../helpers/color.class';\n\n@Component({\n    selector: `color-presets-component`,\n    templateUrl: `./color-presets.component.html`,\n    styleUrls: [\n        `./../base.style.scss`,\n        `./color-presets.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ColorPresetsComponent {\n\n    @Input()\n    public columns: number = 8;\n\n    @Input()\n    public colorPresets: Array<Array<Color> | Color>;\n\n    @Input()\n    public hue: Color;\n\n    @Output()\n    public hueChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public direction: 'down' | 'up' | 'left' | 'right' = 'up';\n\n    public onSelectionChange(color: Color): void {\n        const selectedRgbaColor = color.getRgba();\n        const selectedHsvaColor = color.getHsva();\n\n        const newColor = new Color().setRgba(selectedRgbaColor.red, selectedRgbaColor.green, selectedRgbaColor.blue, selectedRgbaColor.alpha);\n        const hueColor = new Color().setHsva(selectedHsvaColor.hue);\n\n        this.hueChange.emit(hueColor);\n        this.colorChange.emit(newColor);\n    }\n\n    public isList(colorPreset: Array<Array<Color> | Color>): boolean {\n        return Array.isArray(colorPreset);\n    }\n}","import {\n    Component,\n    HostBinding,\n    Input,\n    EventEmitter,\n    Output,\n    ChangeDetectionStrategy,\n    HostListener,\n    OnDestroy\n} from '@angular/core';\nimport { Color, ColorString } from './../../../helpers/color.class';\nimport { Subject, of } from 'rxjs';\nimport { takeUntil, delay, map } from 'rxjs/operators';\nimport { ColorPickerConfig } from './../../../services/color-picker.service';\n\n@Component({\n    selector: `color-preset`,\n    template: ``,\n    styleUrls: [\n        `./../base.style.scss`,\n        `./color-preset.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ColorPresetComponent implements OnDestroy {\n\n    @Input()\n    public activeColor: Color;\n\n    @Input()\n    public color: Color;\n\n    @Input('show-depth-title')\n    public set depth(showDepthText: boolean) {\n        this.showDepthText = !!showDepthText;\n    }\n\n    @Output()\n    public selectionChange = new EventEmitter<Color>(false);\n\n    @Output()\n    public longPress = new EventEmitter<boolean>(false);\n\n    private mouseup = new Subject<MouseEvent | TouchEvent>();\n\n    private showDepthText: boolean = false;\n\n    constructor(private readonly pickerConfig: ColorPickerConfig){}\n\n    public ngOnDestroy(): void {\n        this.mouseup.next();\n        this.mouseup.complete();\n    }\n\n    @HostBinding('style.backgroundColor')\n    public get bgColor(): ColorString {\n        return this.color.toRgbaString();\n    }\n\n    @HostBinding('attr.title')\n    public get title() {\n        const color = this.color ? this.color.toHexString() : '';\n\n        if (this.showDepthText) {\n            return this.pickerConfig.presetsTitle.replace(/\\{\\s*(.+?)\\s*\\}/g, (match, firstMatch) => color);\n        }\n        return color;\n    }\n\n    @HostBinding('class.selected')\n    public get className(): boolean {\n        return this.activeColor ? this.color.toRgbaString() === this.activeColor.toRgbaString() : false;\n    }\n\n    @HostListener('mousedown', ['$event'])\n    @HostListener('touchstart', ['$event'])\n    public onTouch(event: MouseEvent | TouchEvent): void {\n        of(event)\n            .pipe(\n                map((e: MouseEvent | TouchEvent) => e.timeStamp || new Date().getTime()),\n                delay(350),\n                takeUntil(this.mouseup)\n            )\n            .subscribe(() => this.longPress.next(true));\n\n        this.selectionChange.emit(this.color);\n    }\n\n    @HostListener('mouseup', ['$event'])\n    @HostListener('touchend', ['$event'])\n    public onTouchEnd(event: MouseEvent | TouchEvent): void {\n        this.mouseup.next(event);\n    }\n\n}\n","import {\n    trigger, stagger, query,\n  transition, animate, style, state\n  } from '@angular/animations';\n\n\nexport const OpacityAnimation = trigger('opacityAnimation', [\n    state('true', style({ opacity: 1 })),\n    transition('void => *', [\n        style({ opacity: 0 }),\n        animate('.08s ease-in')\n    ])\n])\n\n\nexport const ListAnimation = trigger('listAnimation', [\n    transition('* => up', [\n        query(':enter', [\n            style({ opacity: 0, height: 0 }),\n            stagger(-10, [\n                animate('.08s', style({ opacity: 1, height: '*' }))\n            ])\n        ], {optional: true})\n    ]),\n    transition('* => right', [\n        query(':enter', [\n            style({ opacity: 0, height: 0 }),\n            stagger(-10, [\n                animate('.08s', style({ opacity: 1, height: '*' }))\n            ])\n        ], {optional: true})\n    ]),\n    transition('* => down', [\n        query(':enter', [\n            style({ opacity: 0, height: 0 }),\n            stagger(10, [\n                animate('.08s', style({ opacity: 1, height: '*' }))\n            ])\n        ], {optional: true})\n    ]),\n    transition('* => left', [\n        query(':enter', [\n            style({ opacity: 0, height: 0 }),\n            stagger(10, [\n                animate('.08s', style({ opacity: 1, height: '*' }))\n            ])\n        ], {optional: true})\n    ])\n])","import {\n    Component,\n    Input,\n    ChangeDetectionStrategy,\n    Renderer2,\n    Inject,\n    OnDestroy,\n    ChangeDetectorRef,\n    Output,\n    EventEmitter,\n    HostBinding\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Color } from './../../../helpers/color.class';\nimport { OpacityAnimation, ListAnimation } from './color-preset-sublist.animation';\n\n@Component({\n    selector: `color-preset-sublist`,\n    templateUrl: `./color-preset-sublist.component.html`,\n    styleUrls: [\n        `./../base.style.scss`,\n        `./color-preset-sublist.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [OpacityAnimation, ListAnimation]\n})\nexport class ColorPresetSublist implements OnDestroy {\n\n    @Input()\n    public list: Array<Color>;\n\n    @Output()\n    public selectionChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public direction: 'down' | 'up' | 'left' | 'right' = 'up';\n\n    @Input()\n    public activeColor: Color;\n\n    public showChildren: boolean = false;\n\n    private hooks: Array<Function> = [];\n\n    constructor(\n        private readonly renderer: Renderer2, \n        @Inject(DOCUMENT) private readonly document, \n        private readonly cdr: ChangeDetectorRef){\n    }\n\n    public ngOnDestroy(): void {\n        this.removeListeners();\n        this.cdr.detach();\n    }\n\n    private removeListeners(): void {\n        this.hooks.forEach((callback) => callback());\n        this.hooks.length = 0;\n    }\n\n    /**\n     * emit color change\n     */\n    public onSelectionChange(color: Color): void {\n        this.selectionChange.next(color);\n    }\n\n    public onLongPress(): void {\n        this.showChildren = true;\n        this.listenDocumentClick();\n    }\n\n    private listenDocumentClick(): void {\n        this.hooks.push(this.renderer.listen(this.document, 'mousedown', () => this.closeList()));\n        this.hooks.push(this.renderer.listen(this.document, 'touchstart', () => this.closeList()));\n    }\n\n    private closeList(): void {\n        if (this.showChildren) {\n            this.showChildren = false;\n            this.cdr.markForCheck();\n            this.removeListeners();\n        }\n    }\n\n    @HostBinding('className')\n    public get className(): string {\n        return `direction-${this.direction}`;\n    }\n}","import { Directive, Input, Output, EventEmitter, HostListener } from '@angular/core';\n\n\n@Directive({\n    selector: '[inputChange]'\n})\nexport class ColorPickerInputDirective {\n    @Input()\n    public min: string;\n\n    @Input()\n    public max: string;\n\n    @Output()\n    public inputChange = new EventEmitter<number>();\n\n    @HostListener('input', ['$event'])\n    public inputChanges(event: any): void {\n        const element = event.target as HTMLInputElement || event.srcElement as HTMLInputElement;\n        const value = element.value;\n\n        const numeric = parseFloat(value);\n        if (!isNaN(numeric) && numeric >= parseInt(this.min, 10) &&\n            numeric <= parseInt(this.max, 10)) {\n            this.inputChange.emit(numeric);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({ name: 'chunks' })\nexport class ChunksPipe implements PipeTransform {\n    transform(arr: any, chunkSize: number) {\n        return arr.reduce((prev, cur, i) => (i % chunkSize) ? prev : prev.concat([arr.slice(i, i + chunkSize)]), []);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({ name: 'reverse' })\nexport class ReversePipe implements PipeTransform {\n    transform(arr: Array<any>, isReversed: boolean = true) {\n        if (isReversed) {\n            return arr.slice().reverse();\n        }\n\n        return arr;\n    }\n}\n","import { Color } from './color.class';\nimport { ColorType } from './control.class';\n\n\nexport function getValueByType(color: Color, type: ColorType): string {\n    switch(type) {\n        case ColorType.hex:\n            return color.toHexString();\n        case ColorType.hexa:\n            return color.toHexString(true);\n        case ColorType.rgb:\n            return color.toRgbString();\n        case ColorType.rgba:\n            return color.toRgbaString();\n        case ColorType.hsl:\n            return color.toHslString();\n        case ColorType.hsla:\n            return color.toHslaString();\n        default:\n            return color.toRgbaString();\n    }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ChangeDetectionStrategy, OnDestroy, OnChanges, ChangeDetectorRef } from '@angular/core';\nimport { ColorString } from './../../helpers/color.class';\nimport { ColorPickerControl } from './../../helpers/control.class';\nimport { getValueByType } from './../../helpers/helper.functions';\n\n@Component({\n    selector: `chrome-picker`,\n    templateUrl: `./chrome-picker.component.html`,\n    styleUrls: [\n        `./../parts/base.style.scss`,\n        `./chrome-picker.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ChromePickerComponent implements OnInit, OnChanges, OnDestroy {\n\n    public selectedPresentation: number = 0;\n    public presentations = ['rgba', 'hsla', 'hex'];\n\n    @Input()\n    public color: string;\n\n    @Input()\n    public control: ColorPickerControl;\n\n    @Output()\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\n\n    constructor(private readonly cdr: ChangeDetectorRef) {\n    }\n\n    public ngOnInit(): void {\n        if (!this.control) {\n            this.control = new ColorPickerControl();\n        }\n\n        if (this.color) {\n            this.control.setValueFrom(this.color);\n        }\n\n        /**\n         * set color presets\n         * defined by this chrome color picker component\n         */\n        if(!this.control.hasPresets()) {\n            this.control\n            .setColorPresets([\n                ['#f44336', '#ffebee', '#ffcdd2', '#EF9A9A', '#E57373', '#EF5350', '#F44336', '#E53935', '#D32F2F', '#C62828', '#B71C1C'],\n                ['#E91E63', '#fce4ec', '#f8bbd0', '#f48fb1', '#f06292', '#ec407a', '#e91e63', '#d81b60', '#c2185b', '#ad1457', '#880e4f'],\n                ['#9C27B0', '#F3e5f5', '#e1bee7', '#ce93d8', '#ba68c8', '#ab47bc', '#9c27b0', '#8e24aa', '#7b1fa2', '#6a1b9a', '#4a148c'],\n                ['#673AB7', '#ede7f6', '#d1c4e9', '#b39ddb', '#9575cd', '#7e57c2', '#673ab7', '#5e35b1', '#512da8', '#4527a0', '#311b92'],\n                ['#3F51B5', '#e8eaf6', '#c5cae9', '#9fa8da', '#7986cb', '#5c6bc0', '#3f51b5', '#3949ab', '#303f9f', '#283593', '#1a237e'],\n                ['#2196F3', '#e3f2fd', '#bbdefb', '#90caf9', '#64b5f6', '#42a5f5', '#2196f3', '#1e88e5', '#1976d2', '#1565c0', '#0D47a1'],\n                ['#03A9F4', '#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b'],\n                ['#00BCD4', '#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064'],\n                ['#009688', '#E0F2f1', '#b2dfdb', '#80cbc4', '#4db6ac', '#26a69a', '#009688', '#00897b', '#00796b', '#00695c', '#004d40'],\n                ['#4CAF50', '#e8f5e9', '#c8e6c9', '#a5d6a7', '#81c784', '#66bb6a', '#4caf50', '#43a047', '#388e3c', '#2e7d32', '#1b5e20'],\n                ['#8BC34A', '#f1f8e9', '#dcedc8', '#c5e1a5', '#aed581', '#9ccc65', '#8bc34a', '#7cb342', '#689f38', '#558b2f', '#33691e'],\n                ['#cddc39', '#f9fbe7', '#f0f4c3', '#e6ee9c', '#dce775', '#d4e157', '#c0dc39', '#c0ca33', '#afb42b', '#9e9d24', '#827717'],\n                ['#ffeb3b', '#fffde7', '#fff9c4', '#fff59d', '#fff176', '#ffee58', '#ffeb3b', '#fdd835', '#fbc02d', '#f9a825', '#f57f17'],\n                ['#ffc107', '#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00'],\n                ['#ff9800', '#fff3e0', '#ffe0b2', '#ffcc80', '#ffb74d', '#ffa726', '#ff9800', '#fb8c00', '#f57c00', '#ef6c00', '#e65100'],\n                ['#ff5722', '#fbe9e7', '#ffccbc', '#ffab91', '#ff8a65', '#ff7043', '#ff5722', '#f4511e', '#e64a19', '#d84315', '#bf360c'],\n                ['#795548', '#efebe9', '#d7ccc8', '#bcaaa4', '#a1887f', '#8d6e63', '#795548', '#6d4c41', '#5d4037', '#4e342e', '#3e2723'],\n                ['#9e9e9e', '#fafafa', '#f5f5f5', '#eee', '#e0e0e0', '#bdbdbd', '#9e9e9e', '#757575', '#616161', '#424242', '#212121'],\n                ['#607d8b', '#eceff1', '#cfd8dc', '#b0bec5', '#90a4ae', '#78909c', '#60708b', '#546e7a', '#455a64', '#37474f', '#263238']\n            ]);\n        }\n\n        this.control.valueChanges.subscribe((value) => {\n            this.cdr.markForCheck();\n            this.colorChange.emit(getValueByType(value, this.control.initType));\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.control.unsubscribe();\n        this.cdr.detach();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\n            this.control.setValueFrom(this.color);\n        }\n    }\n\n    public changePresentation(): void {\n        this.selectedPresentation =\n            this.selectedPresentation === this.presentations.length - 1 ? 0 : this.selectedPresentation + 1;\n    }\n\n}","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    SimpleChanges,\n    ChangeDetectionStrategy,\n    OnChanges,\n    OnDestroy,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { ColorString } from './../../helpers/color.class';\nimport { ColorPickerControl } from './../../helpers/control.class';\nimport { getValueByType } from './../../helpers/helper.functions';\n\n@Component({\n    selector: `sketch-picker`,\n    templateUrl: `./sketch-picker.component.html`,\n    styleUrls: [\n        `./../parts/base.style.scss`,\n        `./sketch-picker.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SketchPickerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    public color: string;\n\n    @Input()\n    public control: ColorPickerControl;\n\n    @Output()\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\n\n    constructor(private readonly cdr: ChangeDetectorRef) {\n    }\n\n    public ngOnInit(): void {\n        if (!this.control) {\n            this.control = new ColorPickerControl();\n        }\n\n        if (this.color) {\n            this.control.setValueFrom(this.color);\n        }\n\n        if (!this.control.hasPresets()) {\n            /**\n             * set color presets\n             * defined by sketch color picker component\n             */\n            this.control\n            .setColorPresets([\n                '#d0041b', '#8b572a', '#f5a623', '#f8e71c', '#7ed321', '#417506', '#bd10e0', '#9013fe',\n                '#4a90e2', '#50e3c2', '#b8e986', '#030303', '#4a4a4a', '#9b9b9b', '#fff'\n            ]);\n        }\n\n        this.control.valueChanges.subscribe((value) => {\n            this.cdr.markForCheck();\n            this.colorChange.emit(getValueByType(value, this.control.initType));\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.control.unsubscribe();\n        this.cdr.detach();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\n            this.control.setValueFrom(this.color);\n        }\n    }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ChangeDetectionStrategy, OnChanges, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { Color, ColorString } from './../../helpers/color.class';\nimport { ColorPickerControl } from './../../helpers/control.class';\nimport { getValueByType } from './../../helpers/helper.functions';\n\n@Component({\n    selector: `compact-picker`,\n    templateUrl: `./compact-picker.component.html`,\n    styleUrls: [\n        `./../parts/base.style.scss`,\n        `./compact-picker.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CompactPickerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    public color: string;\n\n    @Input()\n    public control: ColorPickerControl;\n\n    @Output()\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\n\n    constructor(private readonly cdr: ChangeDetectorRef) {\n    }\n\n    public ngOnInit(): void {\n        if (!this.control) {\n            this.control = new ColorPickerControl();\n        }\n\n        if (this.color) {\n            this.control.setValueFrom(this.color);\n        }\n\n        /**\n         * set color presets\n         * defined by compact color picker component\n         */\n        if(!this.control.hasPresets()) {\n            this.control\n            .setColorPresets([\n                '#6da6e8', '#74c283', '#f9d948', '#f5943f', '#f66c6c', '#ef8ab8', '#696cd4', '#6c6c6c', '#f6f5f5'\n            ]);\n        }\n\n        this.control.valueChanges.subscribe((value) => {\n            this.cdr.markForCheck();\n            this.colorChange.emit(getValueByType(value, this.control.initType));\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.control.unsubscribe();\n        this.cdr.detach();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\n            this.control.setValueFrom(this.color);\n        }\n    }\n}","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, ChangeDetectionStrategy, OnDestroy, ChangeDetectorRef, HostBinding } from '@angular/core';\nimport { ColorString } from './../../helpers/color.class';\nimport { ColorPickerControl } from './../../helpers/control.class';\nimport { getValueByType } from './../../helpers/helper.functions';\n\n@Component({\n    selector: `github-picker`,\n    templateUrl: `./github-picker.component.html`,\n    styleUrls: [\n        `./../parts/base.style.scss`,\n        `./github-picker.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GithubPickerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    public color: string;\n\n    @Input()\n    public control: ColorPickerControl;\n\n    @Input()\n    public columns: number | 'auto' = 8;\n\n    @Output()\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\n\n    @HostBinding('style.width') get widht() {\n        return this.columns === 'auto' ? `auto` : `${25 * this.columns + 12}px`;\n    }\n\n    public get columnsCount() {\n        return this.columns === 'auto' ? this.control.presets.length : this.columns;\n    }\n\n    constructor(private readonly cdr: ChangeDetectorRef) {\n    }\n\n    public ngOnInit(): void {\n        if (!this.control) {\n            this.control = new ColorPickerControl();\n        }\n\n        if (this.color) {\n            this.control.setValueFrom(this.color);\n        }\n\n        if(!this.control.hasPresets()) {\n            /**\n             * set color presets\n             * defined by github color picker component\n             */\n            this.control\n            .setColorPresets([\n                '#b80000', '#db3e00', '#fccb00', '#008b02', '#006b76', '#1273de', '#004dcf', '#5300eb',\n                '#eb9694', '#fad0c3', '#fef3bd', '#c1e1c5', '#bedadc', '#c4def6', '#bed3f3', '#d4c4fb'\n            ]);\n        }\n\n        this.control.valueChanges.subscribe((value) => {\n            this.cdr.markForCheck();\n            this.colorChange.emit(getValueByType(value, this.control.initType));\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.control.unsubscribe();\n        this.cdr.detach();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\n            this.control.setValueFrom(this.color);\n        }\n    }\n}","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    SimpleChanges,\n    ChangeDetectionStrategy,\n    OnDestroy,\n    ChangeDetectorRef,\n    OnChanges\n} from '@angular/core';\nimport { ColorString } from './../../helpers/color.class';\nimport { ColorPickerControl } from './../../helpers/control.class';\nimport { getValueByType } from './../../helpers/helper.functions';\n\n@Component({\n    selector: `swatches-picker`,\n    templateUrl: `./swatches-picker.component.html`,\n    styleUrls: [\n        `./../parts/base.style.scss`,\n        `./swatches-picker.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SwatchesPickerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    public color: string;\n\n    @Output()\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\n\n    public control: ColorPickerControl = new ColorPickerControl();\n    public childControl: ColorPickerControl = new ColorPickerControl();\n\n    private mapColors = {\n        '#E6315B': [\n            '#fc8da7', '#fa7d9a', '#f56484', '#f04a71', '#e82c58', '#e31746', '#de0235',\n            '#d60234', '#d10232', '#c70230', '#b8022c', '#ab0229', '#9c0225', '#8f0122',\n            '#8c0122', '#82011f', '#78011b', '#690117', '#5c0012', '#4f0010', '#42000c'\n        ],\n        '#793183': [\n            '#ef8dfc', '#eb7dfa', '#e664f5', '#dc4af0', '#d22ce8', '#cb17e3', '#c402de',\n            '#c002d9', '#bb02d4', '#b002c7', '#a202b8', '#9702ab', '#8a029c', '#7e018f',\n            '#7a018a', '#730182', '#6c0178', '#5e0169', '#54015c', '#49014f', '#3d0142'\n        ],\n        '#009DE7': [\n            '#8dd9fc', '#7dd2fa', '#64c7f5', '#4abbf0', '#2cade8', '#17a2e3', '#0298de',\n            '#0295d9', '#0291d4', '#0289c7', '#027eb8', '#0275ab', '#026b9c', '#01628f',\n            '#015f8a', '#015982', '#015278', '#014869', '#013f5c', '#01364f', '#012e42'\n        ],\n        '#00B59C': [\n            '#8dfeea', '#7dfbe4', '#63f4db', '#4befd2', '#2de7c6', '#16e2be', '#03deb7', \n            '#01ddb6', '#01d4ae', '#01c7a4', '#01b897', '#01aa8b', '#019b80', '#019076', \n            '#018c73', '#01836c', '#017763', '#016857', '#005c4e', '#005044', '#004239'\n        ],\n        '#FFCE00': [\n            '#fce68d', '#fae17d', '#f5da64', '#f0cf4a', '#e8c22c', '#e5bc17', '#deb202',\n            '#deb100', '#d4aa02', '#c7a002', '#b89302', '#ab8902', '#9c7d02', '#8f7301',\n            '#8c7001', '#826801', '#786201', '#695601', '#5c4b00', '#4f4100', '#423700'\n        ],\n        '#FF4A21': [\n            '#fca28d', '#fa947d', '#f57f64', '#f0694a', '#e84f2c', '#e33c17', '#de2a02',\n            '#d92a02', '#d42902', '#c72602', '#b82302', '#ab2102', '#9c1e02', '#8f1b01',\n            '#8a1a01', '#821901', '#781701', '#691300', '#5c1100', '#4f0e00', '#420c00'\n        ],\n        '#D6D5D6': [\n            '#fff', '#f2f2f2', '#e5e5e5', '#d9d9d9', '#cccccc', '#bfbfbf', '#b3b3b3', \n            '#a6a6a6', '#999999', '#8c8c8c', '#808080', '#737373', '#666666', '#595959', \n            '#4d4d4d', '#424242', '#363636', '#262626', '#1a1a1a', '#0f0f0f', '#000'\n        ]\n    };\n\n    constructor(private readonly cdr: ChangeDetectorRef) {\n    }\n\n    public ngOnInit(): void {\n        if (this.color) {\n            this.childControl.setValueFrom(this.color);\n        } else {\n            this.control.setValueFrom('#E6315B');\n        }\n\n        /**\n         * set color presets\n         * defined by swatches color picker component\n         */\n        this.control.setColorPresets([\n            '#e6315b', '#793183', '#009de7', '#00b59c', '#ffce00', '#ff4a21', '#d6d5d6'\n        ]);\n\n        /**\n         * initially open first group\n         */\n        this.childControl.setColorPresets(this.mapColors['#E6315B']);\n\n        this.childControl.valueChanges.subscribe((value) => {\n            this.colorChange.emit(getValueByType(value, this.childControl.initType));\n        });\n\n        this.control.valueChanges.subscribe((value) => {\n            this.cdr.markForCheck();\n            const presets = this.mapColors[value.toHexString()];\n            if (presets) {\n                this.childControl.setColorPresets(presets);\n            }\n            this.colorChange.emit(getValueByType(this.childControl.value, this.childControl.initType));\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.control.unsubscribe();\n        this.childControl.unsubscribe();\n        this.cdr.detach();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\n            this.childControl.setValueFrom(this.color);\n        }\n    }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ChangeDetectionStrategy, OnDestroy, OnChanges } from '@angular/core';\nimport { Color, ColorString } from './../../helpers/color.class';\nimport { ColorPickerControl } from './../../helpers/control.class';\nimport { getValueByType } from './../../helpers/helper.functions';\n\n@Component({\n    selector: `ip-picker`,\n    templateUrl: `./ip-picker.component.html`,\n    styleUrls: [\n        `./../parts/base.style.scss`,\n        `./ip-picker.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IpPickerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    public color: string;\n\n    @Input()\n    public control: ColorPickerControl;\n\n    @Output()\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\n\n    constructor() {\n    }\n\n    public ngOnInit(): void {\n        if (!this.control) {\n            this.control = new ColorPickerControl();\n        }\n\n        /**\n         * set color presets\n         * defined by this chrome color picker component\n         */\n        if(!this.control.hasPresets()) {\n            this.control.setColorPresets([\n                ['#f44336', '#ffebee', '#ffcdd2', '#EF9A9A', '#E57373', '#EF5350', '#F44336', '#E53935', '#D32F2F', '#C62828', '#B71C1C'],\n                ['#E91E63', '#fce4ec', '#f8bbd0', '#f48fb1', '#f06292', '#ec407a', '#e91e63', '#d81b60', '#c2185b', '#ad1457', '#880e4f'],\n                ['#9C27B0', '#F3e5f5', '#e1bee7', '#ce93d8', '#ba68c8', '#ab47bc', '#9c27b0', '#8e24aa', '#7b1fa2', '#6a1b9a', '#4a148c'],\n                ['#673AB7', '#ede7f6', '#d1c4e9', '#b39ddb', '#9575cd', '#7e57c2', '#673ab7', '#5e35b1', '#512da8', '#4527a0', '#311b92'],\n                ['#3F51B5', '#e8eaf6', '#c5cae9', '#9fa8da', '#7986cb', '#5c6bc0', '#3f51b5', '#3949ab', '#303f9f', '#283593', '#1a237e'],\n                ['#2196F3', '#e3f2fd', '#bbdefb', '#90caf9', '#64b5f6', '#42a5f5', '#2196f3', '#1e88e5', '#1976d2', '#1565c0', '#0D47a1'],\n                ['#03A9F4', '#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b'],\n                ['#00BCD4', '#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064'], \n                ['#009688', '#E0F2f1', '#b2dfdb', '#80cbc4', '#4db6ac', '#26a69a', '#009688', '#00897b', '#00796b', '#00695c', '#004d40'],\n                ['#4CAF50', '#e8f5e9', '#c8e6c9', '#a5d6a7', '#81c784', '#66bb6a', '#4caf50', '#43a047', '#388e3c', '#2e7d32', '#1b5e20'],\n                ['#8BC34A', '#f1f8e9', '#dcedc8', '#c5e1a5', '#aed581', '#9ccc65', '#8bc34a', '#7cb342', '#689f38', '#558b2f', '#33691e'],\n                ['#cddc39', '#f9fbe7', '#f0f4c3', '#e6ee9c', '#dce775', '#d4e157', '#c0dc39', '#c0ca33', '#afb42b', '#9e9d24', '#827717'],\n                ['#ffeb3b', '#fffde7', '#fff9c4', '#fff59d', '#fff176', '#ffee58', '#ffeb3b', '#fdd835', '#fbc02d', '#f9a825', '#f57f17'],\n                ['#ffc107', '#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00'],\n                ['#ff9800', '#fff3e0', '#ffe0b2', '#ffcc80', '#ffb74d', '#ffa726', '#ff9800', '#fb8c00', '#f57c00', '#ef6c00', '#e65100'],\n                ['#ff5722', '#fbe9e7', '#ffccbc', '#ffab91', '#ff8a65', '#ff7043', '#ff5722', '#f4511e', '#e64a19', '#d84315', '#bf360c'],\n                ['#795548', '#efebe9', '#d7ccc8', '#bcaaa4', '#a1887f', '#8d6e63', '#795548', '#6d4c41', '#5d4037', '#4e342e', '#3e2723'],\n                ['#9e9e9e', '#fafafa', '#f5f5f5', '#eee', '#e0e0e0', '#bdbdbd', '#9e9e9e', '#757575', '#616161', '#424242', '#212121'],\n                ['#607d8b', '#eceff1', '#cfd8dc', '#b0bec5', '#90a4ae', '#78909c', '#60708b', '#546e7a', '#455a64', '#37474f', '#263238']\n            ]);\n        }\n\n        if (this.color) {\n            this.control.setValueFrom(this.color);\n        }\n\n        this.control.valueChanges.subscribe((value) => {\n            this.colorChange.emit(getValueByType(value, this.control.initType));\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.control.unsubscribe();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\n            this.control.setValueFrom(this.color);\n        }\n    }\n\n}","/*\n * ngx-color-picker\n * \n * By Ivan Pintar, http://www.pintar-ivan.com\n * Licensed under the MIT License\n * See https://github.com/pIvan/ngx-color-picker/blob/master/README.md\n */\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * parts\n */\nimport { SaturationComponent } from './components/parts/saturation/saturation.component';\nimport { IndicatorComponent } from './components/parts/indicator/indicator.component';\nimport { HueComponent } from './components/parts/hue/hue.component';\nimport { AlphaComponent } from './components/parts/alpha/alpha.component';\nimport { RgbaComponent } from './components/parts/inputs/rgba-input/rgba-input.component';\nimport { HslaComponent } from './components/parts/inputs/hsla-input/hsla-input.component';\nimport { HexComponent } from './components/parts/inputs/hex-input/hex-input.component';\nimport { ColorPresetsComponent } from './components/parts/color-presets/color-presets.component';\nimport { ColorPresetComponent } from './components/parts/color-preset/color-preset.component';\nimport { ColorPresetSublist } from './components/parts/color-preset-sublist/color-preset-sublist.component';\n\n/**\n * directives\n */\nimport { ColorPickerInputDirective } from './directives/color-picker-input.directive';\n\n/**\n * pipes\n */\nimport { ChunksPipe } from './pipes/chunks.pipe';\nimport { ReversePipe } from './pipes/reverse.pipe';\n\n/**\n * pickers\n */\nimport { ChromePickerComponent } from './components/chrome-picker/chrome-picker.component';\nimport { SketchPickerComponent } from './components/sketch-picker/sketch-picker.component';\nimport { CompactPickerComponent } from './components/compact-picker/compact-picker.component';\nimport { GithubPickerComponent } from './components/github-picker/github-picker.component';\nimport { SwatchesPickerComponent } from './components/swatches-picker/swatches-picker.component';\nimport { IpPickerComponent } from './components/ip-picker/ip-picker.component';\n\n/**\n * services\n */\nimport { ColorPickerConfig, IColorPickerConfig } from './services/color-picker.service';\n\n/**\n * exports\n */\nexport { Color } from './helpers/color.class';\nexport { ColorPickerControl } from './helpers/control.class';\nexport { ColorsTable } from './helpers/colors-table.class';\nexport { IColorPickerConfig } from './services/color-picker.service';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    providers: [\n        ColorPickerConfig\n    ],\n    declarations: [\n        SaturationComponent,\n        IndicatorComponent,\n        HueComponent,\n        AlphaComponent,\n\n        RgbaComponent,\n        HslaComponent,\n        HexComponent,\n\n        ColorPresetsComponent,\n        ColorPresetComponent,\n        ColorPresetSublist,\n\n        ColorPickerInputDirective,\n        ChunksPipe,\n        ReversePipe,\n\n        /**\n         * prepared components\n         */\n        ChromePickerComponent,\n        SketchPickerComponent,\n        SwatchesPickerComponent,\n        GithubPickerComponent,\n        CompactPickerComponent,\n        IpPickerComponent\n    ],\n    exports: [\n        SaturationComponent,\n        IndicatorComponent,\n        HueComponent,\n        AlphaComponent,\n\n        RgbaComponent,\n        HslaComponent,\n        HexComponent,\n\n        ColorPresetsComponent,\n\n        ChromePickerComponent,\n        SketchPickerComponent,\n        SwatchesPickerComponent,\n        GithubPickerComponent,\n        CompactPickerComponent,\n        IpPickerComponent\n    ],\n    entryComponents: [\n    ]\n})\nexport class ColorPickerModule {\n\n    public static forRoot(configuration?: IColorPickerConfig): ModuleWithProviders {\n        return {\n            ngModule: ColorPickerModule,\n            providers: [\n                { provide: ColorPickerConfig, useClass: configuration || ColorPickerConfig }\n            ]\n        };\n    }\n}\n"]}