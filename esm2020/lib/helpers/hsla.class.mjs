import { BaseColor } from './base-color.class';
/**
 * HSL and HSI are the same
 *
 * Hue = ranges from 0 to 360Â°
 * Saturation = ranges from 0 to 100%
 * Lightness or Intensity = ranges from 0 to 100%
 * Alpha = range from 0-1
 */
export class Hsla extends BaseColor {
    constructor(hue, saturation, lightness, alpha) {
        super();
        this.hue = hue;
        this.saturation = saturation;
        this.lightness = lightness;
        this.alpha = alpha;
    }
    toString(showAlphaChannel = true) {
        return showAlphaChannel
            ? `hsla(${this.getHue()}, ${this.getSaturation()}%, ${this.getLightness()}%, ${this.getAlpha()})`
            : `hsl(${this.getHue()}, ${this.getSaturation()}%, ${this.getLightness()}%)`;
    }
    getHue() {
        return Math.round(this.hue);
    }
    getSaturation() {
        return Math.round(this.saturation);
    }
    getLightness() {
        return Math.round(this.lightness);
    }
    getAlpha() {
        return Math.round(this.alpha * 100) / 100;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHNsYS5jbGFzcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lwbGFiL25neC1jb2xvci1waWNrZXIvc3JjL2xpYi9oZWxwZXJzL2hzbGEuY2xhc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRS9DOzs7Ozs7O0dBT0c7QUFDSCxNQUFNLE9BQU8sSUFBSyxTQUFRLFNBQVM7SUFFL0IsWUFBbUIsR0FBVyxFQUFTLFVBQWtCLEVBQVMsU0FBaUIsRUFBUyxLQUFhO1FBQ3JHLEtBQUssRUFBRSxDQUFDO1FBRE8sUUFBRyxHQUFILEdBQUcsQ0FBUTtRQUFTLGVBQVUsR0FBVixVQUFVLENBQVE7UUFBUyxjQUFTLEdBQVQsU0FBUyxDQUFRO1FBQVMsVUFBSyxHQUFMLEtBQUssQ0FBUTtJQUV6RyxDQUFDO0lBRU0sUUFBUSxDQUFDLG1CQUE0QixJQUFJO1FBQzVDLE9BQU8sZ0JBQWdCO1lBQ25CLENBQUMsQ0FBQyxRQUFRLElBQUksQ0FBQyxNQUFNLEVBQUUsS0FBSyxJQUFJLENBQUMsYUFBYSxFQUFFLE1BQU0sSUFBSSxDQUFDLFlBQVksRUFBRSxNQUFNLElBQUksQ0FBQyxRQUFRLEVBQUUsR0FBRztZQUNqRyxDQUFDLENBQUMsT0FBTyxJQUFJLENBQUMsTUFBTSxFQUFFLEtBQUssSUFBSSxDQUFDLGFBQWEsRUFBRSxNQUFNLElBQUksQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDO0lBQ3JGLENBQUM7SUFFTSxNQUFNO1FBQ1QsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRU0sYUFBYTtRQUNoQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFFTSxZQUFZO1FBQ2YsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRU0sUUFBUTtRQUNYLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQztJQUM5QyxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlQ29sb3IgfSBmcm9tICcuL2Jhc2UtY29sb3IuY2xhc3MnO1xuXG4vKipcbiAqIEhTTCBhbmQgSFNJIGFyZSB0aGUgc2FtZVxuICogXG4gKiBIdWUgPSByYW5nZXMgZnJvbSAwIHRvIDM2MMKwXG4gKiBTYXR1cmF0aW9uID0gcmFuZ2VzIGZyb20gMCB0byAxMDAlXG4gKiBMaWdodG5lc3Mgb3IgSW50ZW5zaXR5ID0gcmFuZ2VzIGZyb20gMCB0byAxMDAlXG4gKiBBbHBoYSA9IHJhbmdlIGZyb20gMC0xXG4gKi9cbmV4cG9ydCBjbGFzcyBIc2xhIGV4dGVuZHMgQmFzZUNvbG9yIHtcblxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBodWU6IG51bWJlciwgcHVibGljIHNhdHVyYXRpb246IG51bWJlciwgcHVibGljIGxpZ2h0bmVzczogbnVtYmVyLCBwdWJsaWMgYWxwaGE6IG51bWJlcikge1xuICAgICAgICBzdXBlcigpO1xuICAgIH1cblxuICAgIHB1YmxpYyB0b1N0cmluZyhzaG93QWxwaGFDaGFubmVsOiBib29sZWFuID0gdHJ1ZSk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiBzaG93QWxwaGFDaGFubmVsXG4gICAgICAgICAgICA/IGBoc2xhKCR7dGhpcy5nZXRIdWUoKX0sICR7dGhpcy5nZXRTYXR1cmF0aW9uKCl9JSwgJHt0aGlzLmdldExpZ2h0bmVzcygpfSUsICR7dGhpcy5nZXRBbHBoYSgpfSlgXG4gICAgICAgICAgICA6IGBoc2woJHt0aGlzLmdldEh1ZSgpfSwgJHt0aGlzLmdldFNhdHVyYXRpb24oKX0lLCAke3RoaXMuZ2V0TGlnaHRuZXNzKCl9JSlgO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRIdWUoKSB7XG4gICAgICAgIHJldHVybiBNYXRoLnJvdW5kKHRoaXMuaHVlKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0U2F0dXJhdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodGhpcy5zYXR1cmF0aW9uKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0TGlnaHRuZXNzKCkge1xuICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCh0aGlzLmxpZ2h0bmVzcyk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldEFscGhhKCk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiBNYXRoLnJvdW5kKHRoaXMuYWxwaGEgKiAxMDApIC8gMTAwO1xuICAgIH1cbn1cbiJdfQ==