{"version":3,"file":"iplab-ngx-color-picker.js","sources":["ng://@iplab/ngx-color-picker/helpers/base-color.class.ts","ng://@iplab/ngx-color-picker/helpers/cmyk.class.ts","ng://@iplab/ngx-color-picker/helpers/hsla.class.ts","ng://@iplab/ngx-color-picker/helpers/hsva.class.ts","ng://@iplab/ngx-color-picker/helpers/rgba.class.ts","ng://@iplab/ngx-color-picker/helpers/colors-table.class.ts","ng://@iplab/ngx-color-picker/helpers/color.class.ts","ng://@iplab/ngx-color-picker/components/parts/base.component.ts","ng://@iplab/ngx-color-picker/components/parts/saturation/saturation.component.ts","ng://@iplab/ngx-color-picker/services/color-picker.service.ts","ng://@iplab/ngx-color-picker/components/parts/indicator/indicator.component.ts","ng://@iplab/ngx-color-picker/components/parts/hue/hue.component.ts","ng://@iplab/ngx-color-picker/components/parts/alpha/alpha.component.ts","ng://@iplab/ngx-color-picker/components/parts/inputs/rgba-input/rgba-input.component.ts","ng://@iplab/ngx-color-picker/components/parts/inputs/hsla-input/hsla-input.component.ts","ng://@iplab/ngx-color-picker/components/parts/inputs/hex-input/hex-input.component.ts","ng://@iplab/ngx-color-picker/components/parts/color-presets/color-presets.component.ts","ng://@iplab/ngx-color-picker/components/parts/color-preset/color-preset.component.ts","ng://@iplab/ngx-color-picker/components/parts/color-preset-sublist/color-preset-sublist.animation.ts","ng://@iplab/ngx-color-picker/components/parts/color-preset-sublist/color-preset-sublist.component.ts","ng://@iplab/ngx-color-picker/directives/color-picker-input.directive.ts","ng://@iplab/ngx-color-picker/pipes/chunks.pipe.ts","ng://@iplab/ngx-color-picker/pipes/reverse.pipe.ts","ng://@iplab/ngx-color-picker/helpers/control.class.ts","ng://@iplab/ngx-color-picker/helpers/helper.functions.ts","ng://@iplab/ngx-color-picker/components/chrome-picker/chrome-picker.component.ts","ng://@iplab/ngx-color-picker/components/sketch-picker/sketch-picker.component.ts","ng://@iplab/ngx-color-picker/components/compact-picker/compact-picker.component.ts","ng://@iplab/ngx-color-picker/components/github-picker/github-picker.component.ts","ng://@iplab/ngx-color-picker/components/swatches-picker/swatches-picker.component.ts","ng://@iplab/ngx-color-picker/components/ip-picker/ip-picker.component.ts","ng://@iplab/ngx-color-picker/color-picker.module.ts","ng://@iplab/ngx-color-picker/iplab-ngx-color-picker.ts"],"sourcesContent":["\n\n\n\nexport abstract class BaseColor {\n    public abstract toString(showAlpha?: boolean): string;\n}","import { BaseColor } from './base-color.class';\n\n/**\n * CMYK color space\n * \n * Cyan = ranges from 0 to 100%\n * Magenta = ranges from 0 to 100%\n * Yellow = ranges from 0 to 100%\n * blacK = ranges from 0 to 100%\n */\nexport class Cmyk extends BaseColor {\n\n    constructor(public cyan: number, public magenta: number, public yellow: number, public black: number) {\n        super();\n    }\n\n    public toString(): string {\n        return `cmyk(${this.getCyan()}%, ${this.getMagenta()}%, ${this.getYellow()}%, ${this.getBlack()}%)`;\n    }\n\n    public getCyan() {\n        return Math.round(this.cyan);\n    }\n\n    public getMagenta() {\n        return Math.round(this.magenta);\n    }\n\n    public getYellow() {\n        return Math.round(this.yellow);\n    }\n\n    public getBlack() {\n        return Math.round(this.black);\n    }\n}","import { BaseColor } from './base-color.class';\n\n/**\n * HSL and HSI are the same\n * \n * Hue = ranges from 0 to 360Â°\n * Saturation = ranges from 0 to 100%\n * Lightness or Intensity = ranges from 0 to 100%\n * Alpha = range from 0-1\n */\nexport class Hsla extends BaseColor {\n\n    constructor(public hue: number, public saturation: number, public lightness: number, public alpha: number) {\n        super();\n    }\n\n    public toString(showAlphaChannel: boolean = true): string {\n        return showAlphaChannel \n            ? `hsla(${this.getHue()}, ${this.getSaturation()}%, ${this.getLightness()}%, ${this.getAlpha()})`\n            : `hsl(${this.getHue()}, ${this.getSaturation()}%, ${this.getLightness()}%)`;\n    }\n\n    public getHue() {\n        return Math.round(this.hue);\n    }\n\n    public getSaturation() {\n        return Math.round(this.saturation);\n    }\n\n    public getLightness() {\n        return Math.round(this.lightness);\n    }\n\n    public getAlpha(): number {\n        return Math.round(this.alpha * 100) / 100;\n    }\n}\n","import { BaseColor } from './base-color.class';\n\n/**\n * HSB and HSV are the same\n * \n * Hue = ranges from 0 to 360Â°\n * Saturation = ranges from 0 to 100%\n * Brightness or Value = ranges from 0 to 100%\n * Alpha = range from 0-1\n */\nexport class Hsva extends BaseColor {\n\n    constructor(public hue: number, public saturation: number, public value: number, public alpha: number) {\n        super();\n    }\n\n    public toString(showAlphaChannel: boolean = true): string {\n        return showAlphaChannel ? `hsva(${this.getHue()}, ${this.getSaturation()}%, ${this.getValue()}%, ${this.getAlpha()})` \n                                : `hsv(${this.getHue()}, ${this.getSaturation()}%, ${this.getValue()}%)`;\n    }\n\n    public getHue() {\n        return Math.round(this.hue);\n    }\n\n    public getSaturation() {\n        return Math.round(this.saturation);\n    }\n\n    public getValue() {\n        return Math.round(this.value);\n    }\n\n    public getAlpha(): number {\n        return Math.round(this.alpha * 100) / 100;\n    }\n}\n","import { BaseColor } from './base-color.class';\n\n/**\n * RGB (Red Green Blue)\n * \n * Red = ranges from 0-255\n * Green = ranges from 0-255\n * Blue = ranges from 0-255\n * Alpha = range from 0-1\n */\nexport class Rgba extends BaseColor {\n\n    constructor(public red: number, public green: number, public blue: number, public alpha: number) {\n        super();\n    }\n\n    public toString(showAlphaChannel: boolean = true): string {\n        return showAlphaChannel \n            ? `rgba(${this.getRed()}, ${this.getGreen()}, ${this.getBlue()}, ${this.getAlpha()})`\n            : `rgb(${this.getRed()}, ${this.getGreen()}, ${this.getBlue()})`;\n    }\n\n    public getRed(): number {\n        return Math.round(this.red);\n    }\n\n    public getGreen(): number {\n        return Math.round(this.green);\n    }\n\n    public getBlue(): number {\n        return Math.round(this.blue);\n    }\n\n    public getAlpha(): number {\n        return Math.round(this.alpha * 100) / 100;\n    }\n}\n","import { Rgba } from './rgba.class';\n\n/**\n * http://www.w3.org/TR/css3-color/\n */\nexport class ColorsTable {\n    public static transparent = new Rgba(0, 0, 0, 0);\n    public static aliceblue = new Rgba(240, 248, 255, 1);\n    public static antiquewhite = new Rgba(250, 235, 215, 1);\n    public static aqua = new Rgba(0, 255, 255, 1);\n    public static aquamarine = new Rgba(127, 255, 212, 1);\n    public static azure = new Rgba(240, 255, 255, 1);\n    public static beige = new Rgba(245, 245, 220, 1);\n    public static bisque = new Rgba(255, 228, 196, 1);\n    public static black = new Rgba(0, 0, 0, 1);\n    public static blanchedalmond = new Rgba(255, 235, 205, 1);\n    public static blue = new Rgba(0, 0, 255, 1);\n    public static blueviolet = new Rgba(138, 43, 226, 1);\n    public static brown = new Rgba(165, 42, 42, 1);\n    public static burlywood = new Rgba(222, 184, 135, 1);\n    public static cadetblue = new Rgba(95, 158, 160, 1);\n    public static chartreuse = new Rgba(127, 255, 0, 1);\n    public static chocolate = new Rgba(210, 105, 30, 1);\n    public static coral = new Rgba(255, 127, 80, 1);\n    public static cornflowerblue = new Rgba(100, 149, 237, 1);\n    public static cornsilk = new Rgba(255, 248, 220, 1);\n    public static crimson = new Rgba(220, 20, 60, 1);\n    public static cyan = new Rgba(0, 255, 255, 1);\n    public static darkblue = new Rgba(0, 0, 139, 1);\n    public static darkcyan = new Rgba(0, 139, 139, 1);\n    public static darkgoldenrod = new Rgba(184, 134, 11, 1);\n    public static darkgray = new Rgba(169, 169, 169, 1);\n    public static darkgreen = new Rgba(0, 100, 0, 1);\n    public static darkgrey = ColorsTable.darkgray;\n    public static darkkhaki = new Rgba(189, 183, 107, 1);\n    public static darkmagenta = new Rgba(139, 0, 139, 1);\n    public static darkolivegreen = new Rgba(85, 107, 47, 1);\n    public static darkorange = new Rgba(255, 140, 0, 1);\n    public static darkorchid = new Rgba(153, 50, 204, 1);\n    public static darkred = new Rgba(139, 0, 0, 1);\n    public static darksalmon = new Rgba(233, 150, 122, 1);\n    public static darkseagreen = new Rgba(143, 188, 143, 1);\n    public static darkslateblue = new Rgba(72, 61, 139, 1);\n    public static darkslategray = new Rgba(47, 79, 79, 1);\n    public static darkslategrey = ColorsTable.darkslategray;\n    public static darkturquoise = new Rgba(0, 206, 209, 1);\n    public static darkviolet = new Rgba(148, 0, 211, 1);\n    public static deeppink = new Rgba(255, 20, 147, 1);\n    public static deepskyblue = new Rgba(0, 191, 255, 1);\n    public static dimgray = new Rgba(105, 105, 105, 1);\n    public static dimgrey = ColorsTable.dimgray;\n    public static dodgerblue = new Rgba(30, 144, 255, 1);\n    public static firebrick = new Rgba(178, 34, 34, 1);\n    public static floralwhite = new Rgba(255, 250, 240, 1);\n    public static forestgreen = new Rgba(34, 139, 34, 1);\n    public static fuchsia = new Rgba(255, 0, 255, 1);\n    public static gainsboro = new Rgba(220, 220, 220, 1);\n    public static ghostwhite = new Rgba(248, 248, 255, 1);\n    public static gold = new Rgba(255, 215, 0, 1);\n    public static goldenrod = new Rgba(218, 165, 32, 1);\n    public static gray = new Rgba(128, 128, 128, 1);\n    public static grey = ColorsTable.gray;\n    public static green = new Rgba(0, 128, 0, 1);\n    public static greenyellow = new Rgba(173, 255, 47, 1);\n    public static honeydew = new Rgba(240, 255, 240, 1);\n    public static hotpink = new Rgba(255, 105, 180, 1);\n    public static indianred = new Rgba(205, 92, 92, 1);\n    public static indigo = new Rgba(75, 0, 130, 1);\n    public static ivory = new Rgba(255, 255, 240, 1);\n    public static khaki = new Rgba(240, 230, 140, 1);\n    public static lavender = new Rgba(230, 230, 250, 1);\n    public static lavenderblush = new Rgba(255, 240, 245, 1);\n    public static lawngreen = new Rgba(124, 252, 0, 1);\n    public static lemonchiffon = new Rgba(255, 250, 205, 1);\n    public static lightblue = new Rgba(173, 216, 230, 1);\n    public static lightcoral = new Rgba(240, 128, 128, 1);\n    public static lightcyan = new Rgba(224, 255, 255, 1);\n    public static lightgoldenrodyellow = new Rgba(250, 250, 210, 1);\n    public static lightgray = new Rgba(211, 211, 211, 1);\n    public static lightgreen = new Rgba(144, 238, 144, 1);\n    public static lightgrey = ColorsTable.lightgray;\n    public static lightpink = new Rgba(255, 182, 193, 1);\n    public static lightsalmon = new Rgba(255, 160, 122, 1);\n    public static lightseagreen = new Rgba(32, 178, 170, 1);\n    public static lightskyblue = new Rgba(135, 206, 250, 1);\n    public static lightslategray = new Rgba(119, 136, 153, 1);\n    public static lightslategrey = ColorsTable.lightslategray;\n    public static lightsteelblue = new Rgba(176, 196, 222, 1);\n    public static lightyellow = new Rgba(255, 255, 224, 1);\n    public static lime = new Rgba(0, 255, 0, 1);\n    public static limegreen = new Rgba(50, 205, 50, 1);\n    public static linen = new Rgba(250, 240, 230, 1);\n    public static magenta = new Rgba(255, 0, 255, 1);\n    public static maroon = new Rgba(128, 0, 0, 1);\n    public static mediumaquamarine = new Rgba(102, 205, 170, 1);\n    public static mediumblue = new Rgba(0, 0, 205, 1);\n    public static mediumorchid = new Rgba(186, 85, 211, 1);\n    public static mediumpurple = new Rgba(147, 112, 219, 1);\n    public static mediumseagreen = new Rgba(60, 179, 113, 1);\n    public static mediumslateblue = new Rgba(123, 104, 238, 1);\n    public static mediumspringgreen = new Rgba(0, 250, 154, 1);\n    public static mediumturquoise = new Rgba(72, 209, 204, 1);\n    public static mediumvioletred = new Rgba(199, 21, 133, 1);\n    public static midnightblue = new Rgba(25, 25, 112, 1);\n    public static mintcream = new Rgba(245, 255, 250, 1);\n    public static mistyrose = new Rgba(255, 228, 225, 1);\n    public static moccasin = new Rgba(255, 228, 181, 1);\n    public static navajowhite = new Rgba(255, 222, 173, 1);\n    public static navy = new Rgba(0, 0, 128, 1);\n    public static oldlace = new Rgba(253, 245, 230, 1);\n    public static olive = new Rgba(128, 128, 0, 1);\n    public static olivedrab = new Rgba(107, 142, 35, 1);\n    public static orange = new Rgba(255, 165, 0, 1);\n    public static orangered = new Rgba(255, 69, 0, 1);\n    public static orchid = new Rgba(218, 112, 214, 1);\n    public static palegoldenrod = new Rgba(238, 232, 170, 1);\n    public static palegreen = new Rgba(152, 251, 152, 1);\n    public static paleturquoise = new Rgba(175, 238, 238, 1);\n    public static palevioletred = new Rgba(219, 112, 147, 1);\n    public static papayawhip = new Rgba(255, 239, 213, 1);\n    public static peachpuff = new Rgba(255, 218, 185, 1);\n    public static peru = new Rgba(205, 133, 63, 1);\n    public static pink = new Rgba(255, 192, 203, 1);\n    public static plum = new Rgba(221, 160, 221, 1);\n    public static powderblue = new Rgba(176, 224, 230, 1);\n    public static purple = new Rgba(128, 0, 128, 1);\n    public static red = new Rgba(255, 0, 0, 1);\n    public static rosybrown = new Rgba(188, 143, 143, 1);\n    public static royalblue = new Rgba(65, 105, 225, 1);\n    public static saddlebrown = new Rgba(139, 69, 19, 1);\n    public static salmon = new Rgba(250, 128, 114, 1);\n    public static sandybrown = new Rgba(244, 164, 96, 1);\n    public static seagreen = new Rgba(46, 139, 87, 1);\n    public static seashell = new Rgba(255, 245, 238, 1);\n    public static sienna = new Rgba(160, 82, 45, 1);\n    public static silver = new Rgba(192, 192, 192, 1);\n    public static skyblue = new Rgba(135, 206, 235, 1);\n    public static slateblue = new Rgba(106, 90, 205, 1);\n    public static slategray = new Rgba(112, 128, 144, 1);\n    public static slategrey = ColorsTable.slategray;\n    public static snow = new Rgba(255, 250, 250, 1);\n    public static springgreen = new Rgba(0, 255, 127, 1);\n    public static steelblue = new Rgba(70, 130, 180, 1);\n    public static tan = new Rgba(210, 180, 140, 1);\n    public static teal = new Rgba(0, 128, 128, 1);\n    public static thistle = new Rgba(216, 191, 216, 1);\n    public static tomato = new Rgba(255, 99, 71, 1);\n    public static turquoise = new Rgba(64, 224, 208, 1);\n    public static violet = new Rgba(238, 130, 238, 1);\n    public static wheat = new Rgba(245, 222, 179, 1);\n    public static white = new Rgba(255, 255, 255, 1);\n    public static whitesmoke = new Rgba(245, 245, 245, 1);\n    public static yellow = new Rgba(255, 255, 0, 1);\n    public static yellowgreen = new Rgba(154, 205, 50, 1);\n}","import { Cmyk } from './cmyk.class';\nimport { Hsla } from './hsla.class';\nimport { Hsva } from './hsva.class';\nimport { Rgba } from './rgba.class';\nimport { ColorsTable } from './colors-table.class';\n\nexport type ColorString = string;\n\nexport class Color {\n\n    /**\n     * base color used to calculate other\n     * default color\n     * rgb(255, 0, 0)\n     * hsl(0, 100%, 50%)\n     * #ff0000\n     */\n    private hsva: Hsva = new Hsva(0, 1, 1, 1);\n    private rgba: Rgba = new Rgba(255, 0, 0, 1);\n\n    constructor(colorString?: ColorString){\n        if (colorString) {\n            this.stringToColor(colorString);\n        }\n    }\n\n    public static from(color: ColorString | Color | Hsva | Rgba | Hsla): Color {\n        if (typeof color === 'string') {\n            return new Color(color);\n        } else if(color instanceof Color) {\n            return color.clone();\n        } else if(color instanceof Rgba) {\n            return new Color().setRgba(color.red, color.green, color.blue, color.alpha);\n        } else if(color instanceof Hsva) {\n            return new Color().setHsva(color.hue, color.saturation, color.value, color.alpha);\n        } else if(color instanceof Hsla) {\n            return new Color().setHsla(color.hue, color.saturation, color.lightness, color.alpha);\n        }\n\n        return null;\n    }\n\n    /**\n     * make from existing color new color object\n     */\n    public clone(): Color {\n        return Color.from(this.getRgba());\n    }\n\n    /**\n     * define Color from hex, rgb, rgba, hsl, hsla or cmyk string\n     */\n    public setFromString(color: ColorString): this {\n        return this.stringToColor(color);\n    }\n\n    /**\n     * define Color from HSV values\n     */\n    public setHsva(hue: number = null, saturation: number = 100, brightness: number = 100, alpha: number = 1): this {\n        if (hue != null) {\n            this.hsva.hue = hue;\n        }\n\n        if (saturation != null) {\n            this.hsva.saturation = saturation;\n        }\n\n        if (brightness != null) {\n            this.hsva.value = brightness;\n        }\n\n        if (alpha != null) {\n            alpha = alpha > 1 ? 1 : alpha < 0 ? 0 : alpha;\n            this.hsva.alpha = alpha;\n        }\n\n        this.rgba = this.hsvaToRgba(this.hsva);\n        return this;\n    }\n\n    /**\n     * define Color from RGBa\n     */\n    public setRgba(red: number = null, green: number = null, blue: number = null, alpha: number = 1): this {\n        if (red != null) {\n            this.rgba.red = red;\n        }\n\n        if (green != null) {\n            this.rgba.green = green;\n        }\n\n        if (blue != null) {\n            this.rgba.blue = blue;\n        }\n\n        if (alpha != null) {\n            alpha = alpha > 1 ? 1 : alpha < 0 ? 0 : alpha;\n            this.rgba.alpha = alpha;\n        }\n\n        this.hsva = this.rgbaToHsva(this.rgba);\n        return this;\n    }\n\n    /**\n     * define Color from HSLa\n     */\n    public setHsla(hue: number, saturation: number, lightness: number, alpha: number = 1): this {\n        if (alpha != null) {\n            alpha = alpha > 1 ? 1 : alpha < 0 ? 0 : alpha;\n            this.rgba.alpha = alpha;\n        }\n\n        const hsla = new Hsla(hue, saturation, lightness, alpha);\n        this.rgba = this.hslaToRgba(hsla);\n        this.hsva = this.rgbaToHsva(this.rgba);\n        return this;\n    }\n\n    /**\n     * return hexadecimal value formatted as '#341d2a' or '#341d2aFF' if alhpa channel is enabled\n     */\n    public toHexString(alpha: boolean = false): ColorString {\n        /* tslint:disable:no-bitwise */\n        let hex = '#' + ((1 << 24) | (this.rgba.getRed() << 16) | (this.rgba.getGreen() << 8) | this.rgba.getBlue()).toString(16).substr(1);\n        if (alpha) {\n            hex += ((1 << 8) | Math.round(this.rgba.alpha * 255)).toString(16).substr(1);\n        }\n        /* tslint:enable:no-bitwise */\n        return hex.toUpperCase();\n    }\n\n    /**\n     * return rgba string formatted as rgba(52, 29, 42, 1)\n     */\n    public toRgbaString(): ColorString {\n        return this.rgba.toString();\n    }\n\n    /**\n     * return rgb string formatted as rgb(52, 29, 42)\n     */\n    public toRgbString(): ColorString {\n        return this.rgba.toString(false);\n    }\n\n    /**\n     * return hsla string formatted as hsla(327, 29%, 16%, 1)\n     */\n    public toHslaString(): ColorString {\n        return this.getHsla().toString();\n    }\n\n    /**\n     * return hsl string formatted as hsl(327, 29%, 16%)\n     */\n    public toHslString(): ColorString {\n        return this.getHsla().toString(false);\n    }\n\n    /**\n     * return hsva string formatted as hsva(327, 29%, 16%, 100%)\n     */\n    public toHsvaString(): ColorString {\n        return this.hsva.toString();\n    }\n\n    /**\n     * return hsv string formatted as hsv(327, 29%, 16%)\n     */\n    public toHsvString(): ColorString {\n        return this.hsva.toString(false);\n    }\n\n    /**\n     * return Cmyk string formatted as cmyk(100%, 100%, 100%, 100%)\n     */\n    public toCmykString(): ColorString {\n        return this.getCmyk().toString();\n    }\n\n    public getHsva(): Hsva {\n        return new Hsva(this.hsva.hue, this.hsva.saturation, this.hsva.value, this.hsva.alpha);\n    }\n\n    public getRgba(): Rgba {\n        return new Rgba(this.rgba.red, this.rgba.green, this.rgba.blue, this.rgba.alpha);\n    }\n\n    public getHsla(): Hsla {\n        return this.rgbaToHsla(this.rgba);\n    }\n\n    public getCmyk(): Cmyk {\n        return this.rgbaToCmyk(this.rgba);\n    }\n\n    private hsvaToHsla(color: Hsva): Hsla {\n        const hue = color.hue;\n        const s = color.saturation / 100;\n        const v = color.value / 100;\n        const lightness = ((2 - s) * color.value) / 2;\n        const saturation = (s * v) / ((lightness <= 1) ? lightness : 2 - lightness) || 0;\n\n        return new Hsla(hue, lightness * 100, saturation * 100, color.alpha);\n    }\n\n    private hslaToHsva(color: Hsla): Hsva {\n        const hue = color.hue;\n        const l = (color.lightness / 100) * 2;\n        const s = (color.saturation / 100) * (l <= 1 ? l : 2 - l);\n        const value = (l + s) / 2;\n        const saturation = (2 * s) / (l + s) || 0;\n\n        return new Hsva(hue, saturation, value, color.alpha);\n    }\n\n    private rgbaToHsva(color: Rgba): Hsva {\n        const red = color.red / 255;\n        const green = color.green / 255;\n        const blue = color.blue / 255;\n        const alpha = color.alpha;\n\n        const Cmax = Math.max(red, green, blue);\n        const Cmin = Math.min(red, green, blue);\n        const delta = Cmax - Cmin;\n\n        let hue = 0;\n        let saturation: number = Cmax === 0 ? 0 : delta / Cmax;\n        let brightness: number = Cmax;\n\n        if (Cmax !== Cmin) {\n            switch (Cmax) {\n                case red:\n                    hue = (green - blue) / delta + (green < blue ? 6 : 0);\n                    break;\n                case green:\n                    hue = 2 + (blue - red) / delta;\n                    break;\n                case blue:\n                    hue = 4 + (red - green) / delta;\n                    break;\n            }\n            hue /= 6;\n        }\n\n        hue = hue * 360;\n        saturation = saturation * 100;\n        brightness = brightness * 100;\n\n        return new Hsva(hue, saturation, brightness, alpha);\n    }\n\n    private hsvaToRgba(color: Hsva): Rgba {\n        let red = 1;\n        let green = 0;\n        let blue = 0;\n        const saturation = color.saturation / 100;\n        const brightness = color.value / 100;\n        const alpha = color.alpha;\n        const hex = color.hue / 60;\n\n        const primary = Math.floor(hex);\n        const secoundary = hex - primary;\n        const a = (1 - saturation) * brightness;\n        const b = (1 - (saturation * secoundary)) * brightness;\n        const c = (1 - (saturation * (1 - secoundary))) * brightness;\n\n        switch (primary) {\n            case 6:\n            case 0: red = brightness; green = c; blue = a; break;\n            case 1: red = b; green = brightness; blue = a; break;\n            case 2: red = a; green = brightness; blue = c; break;\n            case 3: red = a; green = b; blue = brightness; break;\n            case 4: red = c; green = a; blue = brightness; break;\n            case 5: red = brightness; green = a; blue = b; break;\n        }\n\n        red = red * 255;\n        green = green * 255;\n        blue = blue * 255;\n\n        return new Rgba(red, green, blue, alpha)\n    }\n\n    private rgbaToHsla(color: Rgba): Hsla {\n        // based on CamanJS\n        const red = color.red / 255;\n        const green = color.green / 255;\n        const blue = color.blue / 255;\n        const alpha = color.alpha;\n\n        const max = Math.max(red, green, blue);\n        const min = Math.min(red, green, blue);\n\n        let hue = 0;\n        let saturation = 0;\n        let luminance = (max + min) / 2;\n        const delta = max - min;\n\n        if (max !== min) {\n            saturation = luminance > 0.5 ? delta / (2.0 - max - min) : delta / (max + min);\n            switch (max) {\n                case red:\n                    hue = (green - blue) / delta + (green < blue ? 6 : 0);\n                    break;\n                case green:\n                    hue = (blue - red) / delta + 2;\n                    break;\n                case blue:\n                    hue = (red - green) / delta + 4;\n                    break;\n            }\n\n            hue /= 6;\n        }\n\n        hue = hue * 360;\n        saturation = saturation * 100;\n        luminance = luminance * 100;\n\n        return new Hsla(hue, saturation, luminance, alpha);\n    }\n\n    /**\n     * convert rgb color from HSLa\n     *\n     * hue = 0 => 360\n     * saturation = 0 => 1\n     * lightness = 0 => 1\n     */\n    private hslaToRgba(color: Hsla): Rgba {\n        const hue = color.hue / 360;\n        const saturation = color.saturation / 100;\n        const lightness = color.lightness / 100;\n        const alpha = color.alpha;\n\n        let red = lightness;\n        let green = lightness;\n        let blue = lightness;\n\n        if(saturation !== 0) {\n            const q = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - (lightness * saturation);\n            const p = 2 * lightness - q;\n\n            red = this.hueToRgb(p, q, hue + (1 / 3));\n            green = this.hueToRgb(p, q, hue);\n            blue = this.hueToRgb(p, q, hue - (1 / 3));\n        }\n\n        red = red * 255;\n        green = green * 255;\n        blue = blue * 255;\n\n        return new Rgba(red, green, blue, alpha);\n    }\n\n    private hueToRgb(p, q, t): number {\n        // based on CamanJS\n        if (t < 0) { t += 1; }\n        if (t > 1) { t -= 1; }\n        if (t < 1 / 6) { return p + (q - p) * 6 * t; }\n        if (t < 1 / 2) { return q; }\n        if (t < 2 / 3) { return p + (q - p) * (2 / 3 - t) * 6; }\n        return p;\n    }\n\n    /**\n     * The Red, Green, Blue values are given in the range of 0..255,\n     *\n     * the red color(R) is calculated from the cyan(C) and black(K) colors,\n     * the green color(G) is calculated from the magenta(M) and black(K) colors,\n     * The blue color(B) is calculated from the yellow(Y) and black(K) colors.\n     *\n     * Below is the formula of CMYK to RGB convertion\n     *\n     * Red = 255 Ã 1 - min( (1 - Cyan Ã· 100) Ã (1 - Black) )\n     * Green = 255 Ã 1 - min(1 - Magenta Ã· 100) Ã (1 - Black)\n     * Blue = 255 Ã 1 - min(1 - Yellow Ã· 100) Ã (1 - Black)\n     */\n    private cmykToRgba(color: Cmyk): Rgba {\n        const black = color.black / 100;\n        const cyan = color.cyan / 100;\n        const magenta = color.magenta / 100;\n        const yellow = color.yellow / 100;\n\n        let red = Math.min(1, (1 - cyan) * (1 - black));\n        let green = Math.min(1, (1 - magenta) * (1 - black));\n        let blue = Math.min(1, (1 - yellow) * (1 - black));\n\n        red = red * 255;\n        green = green * 255;\n        blue = blue * 255;\n\n        return new Rgba(red, green, blue, 1);\n    }\n\n    /**\n     * The max number of R, G, B values are 255, first of all, we divided them by 255 to become the number\n     * of 0~1, this ratio will be used in the calculation.\n     * Rc = R Ã· 255\n     * Gc = G Ã· 255\n     * Bc = B Ã· 255\n     * The black key(K) color could be many result, when we assume a black key value,\n     * the other three colors(cyan, magenta, yellow) can be calculated.\n     * we can calculate it from the red, green and blue colors, the max number of black key should be :\n     * K = 1 - min(Rc, Gc, Bc);\n     *\n     * or we can assume we run out of the black ink, need use the remaining other three color inks to finish the printing job.\n     * K = 0;\n     *\n     * The cyan color(C) is calculated from the red and black colors:\n     * C = (1 - Rc - K) Ã· (1 - K)\n     *\n     * The magenta color (M) is calculated from the green and black colors:\n     * M = (1 - Gr - K) Ã· (1 - K)\n     *\n     * The yellow color(Y) is calculated from the blue and black colors:\n     * Y = (1 - Bc - K) Ã· ( 1 - K)\n     */\n    private rgbaToCmyk(color: Rgba): Cmyk {\n        const red = color.red / 255;\n        const green = color.green / 255;\n        const blue = color.blue / 255;\n\n        let cyan = 1 - red;\n        let magenta = 1 - green;\n        let yellow = 1 - blue;\n        let black = Math.min(cyan, magenta, yellow);\n\n        if (black == 1) {\n            return new Cmyk(0, 0, 0, 1);\n        }\n\n        cyan = (cyan - black) / (1 - black);\n        magenta = (magenta - black) / (1 - black);\n        yellow = (yellow - black) / (1 - black);\n\n        black =  black * 100;\n        cyan =  cyan * 100;\n        magenta =  magenta * 100;\n        yellow =  yellow * 100;\n\n        return new Cmyk(cyan, magenta, yellow, black);\n    }\n\n    private roundNumber(number: number): number {\n        return Math.round(number * 100) / 100;\n    }\n\n    private stringToColor(colorString: ColorString): this {\n        const str = colorString.replace(/ /g, '').toLowerCase();\n        /**\n         * try to find color by name in table\n         */\n        let rgba: Rgba = ColorsTable[colorString] || null;\n\n        /**\n         * hex find\n         */\n        if (str[0] === '#') {\n            let hex = str.substr(1);\n            const length = hex.length;\n            let a = 1;\n            let hexArray;\n\n            if (length === 3) {\n                hexArray = hex.split('').map((value) => value + value);\n            } else if (length === 6) {\n                hexArray = hex.match(/.{2}/g);\n            } else if (length === 8) {\n                const alpha = hex.substr(-2);\n                hex = hex.substr(0, length - 2);\n                a = this.roundNumber(parseInt(alpha || 'FF', 16) / 255);\n                hexArray = hex.match(/.{2}/g);\n            }\n\n            if (hexArray.length === 3) {\n                rgba = new Rgba(parseInt(hexArray[0], 16), parseInt(hexArray[1], 16), parseInt(hexArray[2], 16), a);\n            }\n        }\n\n        const OpenParenthesis = str.indexOf('(');\n        const CloseParenthesis = str.indexOf(')');\n\n        if (OpenParenthesis !== -1 && CloseParenthesis + 1 === str.length) {\n            const colorTypeName = str.substr(0, OpenParenthesis);\n            const params = str.substr(OpenParenthesis + 1, CloseParenthesis - (OpenParenthesis + 1)).split(',');\n            let alpha = 1;\n\n            switch (colorTypeName) {\n                case 'rgba':\n                    alpha = parseFloat(params.pop());\n                    // Fall through.\n                case 'rgb':\n                    rgba = new Rgba(parseInt(params[0], 10), parseInt(params[1], 10), parseInt(params[2], 10), alpha);\n                    break;\n                case 'hsla':\n                    alpha = parseFloat(params.pop());\n                case 'hsl':\n                    const hsla = new Hsla(parseInt(params[0], 10), parseInt(params[1], 10), parseInt(params[2], 10), alpha);\n                    rgba = this.hslaToRgba(hsla);\n                    break;\n                case 'cmyk':\n                    const cmyk = new Cmyk(\n                                    parseInt(params[0], 10),\n                                    parseInt(params[1], 10),\n                                    parseInt(params[2], 10),\n                                    parseInt(params[3], 10));\n                    rgba = this.cmykToRgba(cmyk);\n                    break;\n            }\n        }\n\n        if (rgba) {\n            this.rgba = rgba;\n            this.hsva = this.rgbaToHsva(rgba);\n        }\n\n        return this;\n    }\n\n}\n","import { ElementRef, Renderer2, OnDestroy } from '@angular/core';\n\n/**\n * because a dynamic directive yet is not implemented,\n * we have a base class which will\n * help us to implement position calculation in our\n * components\n */\nexport abstract class BaseComponent implements OnDestroy {\n\n    private eventHooks: Array<Function> = [];\n    private window: any = {pageXOffset: 0, pageYOffset: 0};\n    private readonly requestAnimationFrame;\n\n    constructor(private readonly document, protected readonly elementRef: ElementRef, protected readonly renderer: Renderer2) {\n        this.window = document.defaultView;\n        this.requestAnimationFrame = this.getRequestAnimationFrame();\n    }\n\n    public abstract movePointer(coordinates: {x: number; y: number; height: number; width: number;}): void;\n\n    protected onEventChange(event: MouseEvent|TouchEvent): void {\n        this.calculate(event);\n\n        this.eventHooks.push(\n            this.renderer.listen(this.document, 'mouseup', () => this.removeListeners())\n        );\n        this.eventHooks.push(\n            this.renderer.listen(this.document, 'touchend', () => this.removeListeners())\n        );\n        this.eventHooks.push(\n            this.renderer.listen(this.document, 'mousemove', (e) => this.calculate(e))\n        );\n        this.eventHooks.push(\n            this.renderer.listen(this.document, 'touchmove', (e) => this.calculate(e))\n        );\n    }\n\n    private calculateCoordinates(event: MouseEvent|TouchEvent): void {\n        const { width: elWidth, height: elHeight, top: elTop, left: elLeft } = this.elementRef.nativeElement.getBoundingClientRect();\n\n        const pageX = typeof event['pageX'] === 'number' ? event['pageX'] : event['touches'][0].pageX;\n        const pageY = typeof event['pageY'] === 'number' ? event['pageY'] : event['touches'][0].pageY;\n\n        const x = Math.max(0, Math.min(pageX - (elLeft + this.window.pageXOffset), elWidth));\n        const y = Math.max(0, Math.min(pageY - (elTop + this.window.pageYOffset), elHeight));\n\n        this.movePointer({x, y, height: elHeight, width: elWidth });\n    }\n\n    private calculate(event: MouseEvent|TouchEvent): void {\n        event.preventDefault();\n        if (!this.requestAnimationFrame) {\n            return this.calculateCoordinates(event);\n        }\n\n        this.requestAnimationFrame(() => this.calculateCoordinates(event));\n    }\n\n    private getRequestAnimationFrame(): Function {\n        return this.window.requestAnimationFrame ||\n                this.window.webkitRequestAnimationFrame ||\n                this.window.mozRequestAnimationFrame ||\n                this.window.oRequestAnimationFrame ||\n                this.window.msRequestAnimationFrame;\n    }\n\n    private removeListeners(): void {\n        this.eventHooks.forEach((cb) => cb());\n        this.eventHooks.length = 0;\n    }\n\n    public ngOnDestroy(): void {\n        this.removeListeners();\n    }\n}","import {\n    Component,\n    HostBinding,\n    Input,\n    EventEmitter,\n    Output,\n    ChangeDetectionStrategy,\n    HostListener,\n    Renderer2,\n    Inject,\n    ElementRef,\n    ViewChild,\n    OnInit,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Color } from './../../../helpers/color.class';\nimport { BaseComponent } from './../base.component';\n\n\n@Component({\n    selector: `saturation-component`,\n    templateUrl: `./saturation.component.html`,\n    styleUrls: [\n        `./../base.style.scss`,\n        './saturation.component.scss'\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SaturationComponent extends BaseComponent implements OnInit, OnChanges {\n\n    @Input()\n    public hue: Color;\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    @ViewChild('pointer', { static: true })\n    public pointer: ElementRef;\n\n    constructor(renderer: Renderer2, @Inject(DOCUMENT) document, elementRef: ElementRef) {\n        super(document, elementRef, renderer);\n    }\n\n    @HostBinding('style.backgroundColor')\n    public get backgroundColor(): string {\n        return this.hue ? this.hue.toRgbaString() : '';\n    }\n\n    @HostListener('mousedown', ['$event'])\n    @HostListener('touchstart', ['$event'])\n    public onClick(event: any): void {\n        this.onEventChange(event);\n    }\n\n    public ngOnInit(): void {\n        if (!this.hue) {\n            this.hue = Color.from(this.color.getHsva());\n        }\n        this.renderer.setStyle(this.elementRef.nativeElement, 'backgroundColor', this.backgroundColor);\n    }\n\n    /**\n     * color can be changed through inputs\n     * and then we need to move pointer\n     */\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.color && changes.color.previousValue !== changes.color.currentValue) {\n            const hsva = this.color.getHsva();\n            this.changePointerPosition(hsva.saturation, hsva.value);\n        }\n    }\n\n    public movePointer({x, y, height, width}): void {\n        const saturation = (x * 100) / width;\n        const bright = -((y * 100) / height) + 100;\n\n        this.changePointerPosition(saturation, bright);\n        const hsva = this.hue.getHsva();\n        const color = this.color.getHsva();\n        const newColor = new Color().setHsva(hsva.hue, saturation, bright, color.alpha);\n        this.colorChange.emit(newColor);\n    }\n\n    private changePointerPosition(x: number, y: number): void {\n        this.renderer.setStyle(this.pointer.nativeElement, 'top', `${100 - y}%`);\n        this.renderer.setStyle(this.pointer.nativeElement, 'left', `${x}%`);\n    }\n}\n","\nexport interface IColorPickerConfig {\n    indicatorTitle: string;\n    presetsTitle: string;\n}\n\nexport class ColorPickerConfig implements IColorPickerConfig {\n    public indicatorTitle: string = 'Copy color to clipboard';\n    public presetsTitle: string = '{0}. Long-click to show alternate shades.';\n}\n","import { Component, Input, HostBinding, HostListener, Renderer2, ElementRef, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Color } from './../../../helpers/color.class';\nimport { ColorPickerConfig } from './../../../services/color-picker.service';\n\n\n@Component({\n    selector: `indicator-component`,\n    templateUrl: `./indicator.component.html`,\n    styleUrls: [\n        `./../base.style.scss`,\n        `./indicator.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IndicatorComponent {\n    @Input()\n    public color: Color;\n\n    @Input()\n    public colorType: 'rgba' | 'hex' | 'hsla' = 'rgba';\n\n    @HostBinding('attr.title')\n    public get title() {\n        return this.pickerConfig ? this.pickerConfig.indicatorTitle : '';\n    }\n\n    constructor(\n        private readonly pickerConfig: ColorPickerConfig,\n        private readonly renderer: Renderer2, \n        private readonly elementRef: ElementRef,\n        @Inject(DOCUMENT) private readonly document){\n    }\n\n    public get backgroundColor(): string {\n        return this.color.toRgbaString();\n    }\n\n    @HostListener('click', ['$event'])\n    public onClick(event: MouseEvent | TouchEvent) {\n        const input = this.renderer.createElement('input');\n        this.renderer.setStyle(input, 'position', 'absolute');\n        this.renderer.setStyle(input, 'top', '-100%');\n        this.renderer.setStyle(input, 'left', '-100%');\n\n        switch(this.colorType) {\n            case 'hsla':\n                input.value = this.color.toHslaString();\n                break;\n            case 'hex':\n                input.value = this.color.toHexString();\n                break;\n            default:\n                input.value = this.backgroundColor;\n        }\n\n        this.renderer.appendChild(this.elementRef.nativeElement, input);\n        input.select();\n        this.document.execCommand('copy');\n        this.renderer.removeChild(this.elementRef.nativeElement, input);\n    }\n}\n","import {\n    Component,\n    ChangeDetectionStrategy,\n    Input,\n    Renderer2,\n    Inject,\n    ElementRef,\n    Output,\n    EventEmitter,\n    ViewChild,\n    HostListener,\n    SimpleChanges,\n    OnChanges\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Color } from './../../../helpers/color.class';\nimport { BaseComponent } from './../base.component';\n\n@Component({\n    selector: `hue-component`,\n    templateUrl: `./hue.component.html`,\n    styleUrls: [\n        `./../base.style.scss`,\n        `./hue.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HueComponent extends BaseComponent implements OnChanges {\n\n    @Input()\n    public hue: Color;\n\n    @Output()\n    public hueChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    @ViewChild('pointer', { static: true })\n    public pointer: ElementRef;\n\n    private isVertical: boolean = false;\n\n    constructor(renderer: Renderer2, @Inject(DOCUMENT) document, elementRef: ElementRef) {\n        super(document, elementRef, renderer);\n    }\n\n    @HostListener('mousedown', ['$event'])\n    @HostListener('touchstart', ['$event'])\n    public onClick(event: any): void {\n        this.onEventChange(event);\n    }\n\n    @Input()\n    public set vertical(value: string) {\n        this.isVertical = true;\n    }\n\n    /**\n     * color can be changed through inputs\n     * and then we need to move pointer\n     */\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.hue && changes.hue.previousValue !== changes.hue.currentValue) {\n            const hsva = this.hue.getHsva();\n            this.changePointerPosition(hsva.hue);\n        }\n    }\n\n    public movePointer({x, y, height, width}): void {\n        const hue = this.isVertical ? (y / height) * 360 : (x / width) * 360;\n        this.changePointerPosition(hue);\n\n        const color = this.color.getHsva();\n        const newColor = new Color().setHsva(hue, color.saturation, color.value, color.alpha);\n        const newHueColor = new Color().setHsva(hue, 100, 100, color.alpha);\n\n        this.hueChange.emit(newHueColor);\n        this.colorChange.emit(newColor);\n    }\n\n    /**\n     * hue value is in range from 0 to 360Â°\n     */\n    private changePointerPosition(hue: number): void {\n        const x = hue / 360 * 100;\n        const orientation = this.isVertical ? 'top' : 'left';\n        this.renderer.setStyle(this.pointer.nativeElement, orientation, `${x}%`);\n    }\n}","import {\n    Component,\n    Input,\n    EventEmitter,\n    Output,\n    ChangeDetectionStrategy,\n    OnChanges,\n    Inject,\n    ElementRef,\n    ViewChild,\n    HostListener,\n    Renderer2,\n    SimpleChanges\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Color } from './../../../helpers/color.class';\nimport { BaseComponent } from './../base.component';\n\n@Component({\n    selector: `alpha-component`,\n    templateUrl: `./alpha.component.html`,\n    styleUrls: [\n        `./../base.style.scss`,\n        `./alpha.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AlphaComponent extends BaseComponent implements OnChanges {\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    @ViewChild('pointer', { static: true })\n    public pointer: ElementRef;\n\n    private isVertical: boolean = false;\n\n    constructor(renderer: Renderer2, @Inject(DOCUMENT) document, elementRef: ElementRef) {\n        super(document, elementRef, renderer);\n    }\n\n    @HostListener('mousedown', ['$event'])\n    @HostListener('touchstart', ['$event'])\n    public onClick(event: any): void {\n        this.onEventChange(event);\n    }\n\n    @Input()\n    public set vertical(value: string) {\n        this.isVertical = true;\n    }\n\n    /**\n     * color can be changed through inputs\n     * and then we need to move pointer\n     */\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.color && changes.color.previousValue !== changes.color.currentValue) {\n            const hsva = this.color.getHsva();\n            this.changePointerPosition(hsva.alpha);\n        }\n    }\n\n    public movePointer({x, y, height, width}): void {\n        const alpha = this.isVertical ? y / height : x / width;\n        this.changePointerPosition(alpha);\n\n        const hsva = this.color.getHsva();\n        const newColor = new Color().setHsva(hsva.hue, hsva.saturation, hsva.value, alpha);\n        this.colorChange.emit(newColor);\n    }\n\n    /**\n     * hue value is in range from 0 to 360Â°\n     */\n    private changePointerPosition(alpha: number): void {\n        const x = alpha * 100;\n        const orientation = this.isVertical ? 'top' : 'left';\n        this.renderer.setStyle(this.pointer.nativeElement, orientation, `${x}%`);\n    }\n\n    public get gradient(): string {\n        const rgba = this.color.getRgba();\n        const orientation = this.isVertical ? 'bottom' : 'right';\n        return `linear-gradient(to ${orientation}, rgba(${rgba.red}, ${rgba.green}, ${rgba.blue}, 0) 0%, rgb(${rgba.red}, ${rgba.green}, ${rgba.blue}) 100%)`;\n    }\n\n}","import { Component, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { Color } from './../../../../helpers/color.class';\n\n\n@Component({\n    selector: `rgba-input-component`,\n    templateUrl: `./rgba-input.component.html`,\n    styleUrls: [\n        `./../../base.style.scss`,\n        `./../input.component.scss`,\n        `./rgba-input.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RgbaComponent {\n\n    @Input()\n    public hue: Color;\n\n    @Output()\n    public hueChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    public labelVisible: boolean;\n\n    @Input()\n    public set label(value) {\n        this.labelVisible = true;\n    }\n\n    public isAlphaVisible: boolean = true;\n\n    @Input()\n    public set alpha(isVisible: boolean) {\n        this.isAlphaVisible = isVisible;\n    }\n\n    public get value() {\n        return this.color ? this.color.getRgba() : null;\n    }\n\n    public onInputChange(newValue: number, color: 'R' | 'G' | 'B' | 'A') {\n        const value = this.value;\n        const red = color === 'R' ? newValue : value.red;\n        const green = color === 'G' ? newValue : value.green;\n        const blue = color === 'B' ? newValue : value.blue;\n        const alpha = color === 'A' ? newValue : value.alpha;\n\n        const newColor = new Color().setRgba(red, green, blue, alpha);\n        const hue = new Color().setHsva(newColor.getHsva().hue);\n\n        this.hueChange.emit(hue);\n        this.colorChange.emit(newColor);\n    }\n}\n","import { Component, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { Color } from './../../../../helpers/color.class';\n\n\n@Component({\n    selector: `hsla-input-component`,\n    templateUrl: `./hsla-input.component.html`,\n    styleUrls: [\n        `./../../base.style.scss`,\n        `./../input.component.scss`,\n        `./hsla-input.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HslaComponent {\n\n    @Input()\n    public hue: Color;\n\n    @Output()\n    public hueChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    public labelVisible: boolean;\n\n    @Input()\n    public set label(value) {\n        this.labelVisible = true;\n    }\n\n    public isAlphaVisible: boolean = true;\n\n    @Input()\n    public set alpha(isVisible: boolean) {\n        this.isAlphaVisible = isVisible;\n    }\n\n    public get value() {\n        return this.color ? this.color.getHsla() : null;\n    }\n\n    public onInputChange(newValue: number, color: 'H' | 'S' | 'L' | 'A') {\n        const value = this.value;\n        const hue = color === 'H' ? newValue : value.hue;\n        const saturation = color === 'S' ? newValue : value.saturation;\n        const lightness = color === 'L' ? newValue : value.lightness;\n        const alpha = color === 'A' ? newValue : value.alpha;\n\n\n        const newColor = new Color().setHsla(hue, saturation, lightness, alpha);\n        const hueColor = new Color().setHsva(newColor.getHsva().hue);\n\n        this.hueChange.emit(hueColor);\n        this.colorChange.emit(newColor);\n    }\n}\n","import { Component, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { Color } from '../../../../helpers/color.class';\n\n\n@Component({\n    selector: `hex-input-component`,\n    templateUrl: `./hex-input.component.html`,\n    styleUrls: [\n        `./../../base.style.scss`,\n        `./../input.component.scss`,\n        `./hex-input.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HexComponent {\n\n    @Input()\n    public hue: Color;\n\n    @Output()\n    public hueChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    public labelVisible: boolean;\n    private prefixValue: string = '';\n\n    @Input()\n    public set label(value) {\n        this.labelVisible = true;\n    }\n\n    @Input()\n    public set prefix(value){\n        this.prefixValue = value;\n    }\n\n    public get value() {\n        return this.prefixValue + (this.color ? this.color.toHexString().replace('#', '') : '');\n    }\n\n    public onInputChange(inputValue: string): void {\n        const value = inputValue.toLowerCase().replace('#', '');\n        if (value.length === 3 || value.length === 6 || value.length === 8) {\n            const hex = parseInt(value, 16);\n\n            /**\n             * if value is valid\n             * change color else do nothing\n             */\n            if (hex.toString(16) === value && this.value !== value) {\n                const newColor = new Color(`#${value}`);\n                const hue = new Color().setHsva(newColor.getHsva().hue);\n                this.hueChange.emit(hue);\n                this.colorChange.emit(newColor);\n            }\n        }\n    }\n}\n","import { Component, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { Color } from './../../../helpers/color.class';\n\n@Component({\n    selector: `color-presets-component`,\n    templateUrl: `./color-presets.component.html`,\n    styleUrls: [\n        `./../base.style.scss`,\n        `./color-presets.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ColorPresetsComponent {\n\n    @Input()\n    public columns: number = 8;\n\n    @Input()\n    public colorPresets: Array<Array<Color> | Color>;\n\n    @Input()\n    public hue: Color;\n\n    @Output()\n    public hueChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public color: Color;\n\n    @Output()\n    public colorChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public direction: 'down' | 'up' | 'left' | 'right' = 'up';\n\n    public onSelectionChange(color: Color): void {\n        const selectedRgbaColor = color.getRgba();\n        const selectedHsvaColor = color.getHsva();\n\n        const newColor = new Color().setRgba(selectedRgbaColor.red, selectedRgbaColor.green, selectedRgbaColor.blue, selectedRgbaColor.alpha);\n        const hueColor = new Color().setHsva(selectedHsvaColor.hue);\n\n        this.hueChange.emit(hueColor);\n        this.colorChange.emit(newColor);\n    }\n\n    public isList(colorPreset: Array<Array<Color> | Color>): boolean {\n        return Array.isArray(colorPreset);\n    }\n}","import {\n    Component,\n    HostBinding,\n    Input,\n    EventEmitter,\n    Output,\n    ChangeDetectionStrategy,\n    HostListener,\n    OnDestroy\n} from '@angular/core';\nimport { Color, ColorString } from './../../../helpers/color.class';\nimport { Subject, of } from 'rxjs';\nimport { takeUntil, delay, map } from 'rxjs/operators';\nimport { ColorPickerConfig } from './../../../services/color-picker.service';\n\n@Component({\n    selector: `color-preset`,\n    template: ``,\n    styleUrls: [\n        `./../base.style.scss`,\n        `./color-preset.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ColorPresetComponent implements OnDestroy {\n\n    @Input()\n    public activeColor: Color;\n\n    @Input()\n    public color: Color;\n\n    @Input('show-depth-title')\n    public set depth(showDepthText: boolean) {\n        this.showDepthText = !!showDepthText;\n    }\n\n    @Output()\n    public selectionChange = new EventEmitter<Color>(false);\n\n    @Output()\n    public longPress = new EventEmitter<boolean>(false);\n\n    private mouseup = new Subject<MouseEvent | TouchEvent>();\n\n    private showDepthText: boolean = false;\n\n    constructor(private readonly pickerConfig: ColorPickerConfig){}\n\n    public ngOnDestroy(): void {\n        this.mouseup.next();\n        this.mouseup.complete();\n    }\n\n    @HostBinding('style.backgroundColor')\n    public get bgColor(): ColorString {\n        return this.color.toRgbaString();\n    }\n\n    @HostBinding('attr.title')\n    public get title() {\n        const color = this.color ? this.color.toHexString() : '';\n\n        if (this.showDepthText) {\n            return this.pickerConfig.presetsTitle.replace(/\\{\\s*(.+?)\\s*\\}/g, (match, firstMatch) => color);\n        }\n        return color;\n    }\n\n    @HostBinding('class.selected')\n    public get className(): boolean {\n        return this.activeColor ? this.color.toRgbaString() === this.activeColor.toRgbaString() : false;\n    }\n\n    @HostListener('mousedown', ['$event'])\n    @HostListener('touchstart', ['$event'])\n    public onTouch(event: MouseEvent | TouchEvent): void {\n        of(event)\n            .pipe(\n                map((e: MouseEvent | TouchEvent) => e.timeStamp || new Date().getTime()),\n                delay(350),\n                takeUntil(this.mouseup)\n            )\n            .subscribe(() => this.longPress.next(true));\n\n        this.selectionChange.emit(this.color);\n    }\n\n    @HostListener('mouseup', ['$event'])\n    @HostListener('touchend', ['$event'])\n    public onTouchEnd(event: MouseEvent | TouchEvent): void {\n        this.mouseup.next(event);\n    }\n\n}\n","import {\n    trigger, stagger, query,\n  transition, animate, style, state\n  } from '@angular/animations';\n\n\nexport const OpacityAnimation = trigger('opacityAnimation', [\n    state('true', style({ opacity: 1 })),\n    transition('void => *', [\n        style({ opacity: 0 }),\n        animate('.08s ease-in')\n    ])\n])\n\n\nexport const ListAnimation = trigger('listAnimation', [\n    transition('* => up', [\n        query(':enter', [\n            style({ opacity: 0, height: 0 }),\n            stagger(-10, [\n                animate('.08s', style({ opacity: 1, height: '*' }))\n            ])\n        ], {optional: true})\n    ]),\n    transition('* => right', [\n        query(':enter', [\n            style({ opacity: 0, height: 0 }),\n            stagger(-10, [\n                animate('.08s', style({ opacity: 1, height: '*' }))\n            ])\n        ], {optional: true})\n    ]),\n    transition('* => down', [\n        query(':enter', [\n            style({ opacity: 0, height: 0 }),\n            stagger(10, [\n                animate('.08s', style({ opacity: 1, height: '*' }))\n            ])\n        ], {optional: true})\n    ]),\n    transition('* => left', [\n        query(':enter', [\n            style({ opacity: 0, height: 0 }),\n            stagger(10, [\n                animate('.08s', style({ opacity: 1, height: '*' }))\n            ])\n        ], {optional: true})\n    ])\n])","import {\n    Component,\n    Input,\n    ChangeDetectionStrategy,\n    Renderer2,\n    Inject,\n    OnDestroy,\n    ChangeDetectorRef,\n    Output,\n    EventEmitter,\n    HostBinding\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Color } from './../../../helpers/color.class';\nimport { OpacityAnimation, ListAnimation } from './color-preset-sublist.animation';\n\n@Component({\n    selector: `color-preset-sublist`,\n    templateUrl: `./color-preset-sublist.component.html`,\n    styleUrls: [\n        `./../base.style.scss`,\n        `./color-preset-sublist.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [OpacityAnimation, ListAnimation]\n})\nexport class ColorPresetSublist implements OnDestroy {\n\n    @Input()\n    public list: Array<Color>;\n\n    @Output()\n    public selectionChange = new EventEmitter<Color>(false);\n\n    @Input()\n    public direction: 'down' | 'up' | 'left' | 'right' = 'up';\n\n    @Input()\n    public activeColor: Color;\n\n    public showChildren: boolean = false;\n\n    private hooks: Array<Function> = [];\n\n    constructor(\n        private readonly renderer: Renderer2, \n        @Inject(DOCUMENT) private readonly document, \n        private readonly cdr: ChangeDetectorRef){\n    }\n\n    public ngOnDestroy(): void {\n        this.removeListeners();\n        this.cdr.detach();\n    }\n\n    private removeListeners(): void {\n        this.hooks.forEach((callback) => callback());\n        this.hooks.length = 0;\n    }\n\n    /**\n     * emit color change\n     */\n    public onSelectionChange(color: Color): void {\n        this.selectionChange.next(color);\n    }\n\n    public onLongPress(): void {\n        this.showChildren = true;\n        this.listenDocumentClick();\n    }\n\n    private listenDocumentClick(): void {\n        this.hooks.push(this.renderer.listen(this.document, 'mousedown', () => this.closeList()));\n        this.hooks.push(this.renderer.listen(this.document, 'touchstart', () => this.closeList()));\n    }\n\n    private closeList(): void {\n        if (this.showChildren) {\n            this.showChildren = false;\n            this.cdr.markForCheck();\n            this.removeListeners();\n        }\n    }\n\n    @HostBinding('className')\n    public get className(): string {\n        return `direction-${this.direction}`;\n    }\n}","import { Directive, Input, Output, EventEmitter, HostListener } from '@angular/core';\n\n\n@Directive({\n    selector: '[inputChange]'\n})\nexport class ColorPickerInputDirective {\n    @Input()\n    public min: string;\n\n    @Input()\n    public max: string;\n\n    @Output()\n    public inputChange = new EventEmitter<number>();\n\n    @HostListener('input', ['$event'])\n    public inputChanges(event: any): void {\n        const element = event.target as HTMLInputElement || event.srcElement as HTMLInputElement;\n        const value = element.value;\n\n        const numeric = parseFloat(value);\n        if (!isNaN(numeric) && numeric >= parseInt(this.min, 10) &&\n            numeric <= parseInt(this.max, 10)) {\n            this.inputChange.emit(numeric);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({ name: 'chunks' })\nexport class ChunksPipe implements PipeTransform {\n    transform(arr: any, chunkSize: number) {\n        return arr.reduce((prev, cur, i) => (i % chunkSize) ? prev : prev.concat([arr.slice(i, i + chunkSize)]), []);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({ name: 'reverse' })\nexport class ReversePipe implements PipeTransform {\n    transform(arr: Array<any>, isReversed: boolean = true) {\n        if (isReversed) {\n            return arr.slice().reverse();\n        }\n\n        return arr;\n    }\n}\n","import { Color, ColorString } from './color.class';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { Rgba } from './rgba.class';\nimport { Hsla } from './hsla.class';\nimport { Hsva } from './hsva.class';\n\nexport enum ColorType {\n    hex = 'hex',\n    hexa = 'hexa',\n    rgba = 'rgba',\n    rgb = 'rgb',\n    hsla = 'hsla',\n    hsl = 'hsl',\n    cmyk = 'cmyk'\n}\n\nexport class ColorPickerControl {\n\n    private modelValue: Color = null;\n    private hueValue: Color = null;\n    private initValue: Color = null;\n    private readonly valueChanged: Subject<Color> = new Subject();\n\n    public readonly presetsVisibilityChanges: BehaviorSubject<boolean> = new BehaviorSubject(true);\n    public initType: ColorType = null;\n    public readonly alphaChannelVisibilityChanges: BehaviorSubject<boolean> = new BehaviorSubject(true);\n    public readonly valueChanges = this.valueChanged.asObservable().pipe(distinctUntilChanged((x, y) => x.toRgbaString() == y.toRgbaString()));\n\n    private colorPresets: Array<Array<Color> | Color> = [];\n\n    constructor() {\n        const color = Color.from(new Rgba(255, 0, 0, 1));\n        this.setValue(color);\n        this.setHueColor(color);\n    }\n\n    public setValueFrom(color: ColorString | Color | Rgba | Hsla | Hsva): this {\n        const newColor = Color.from(color);\n        if (!this.initValue) {\n            this.initValue = Color.from(color);\n        }\n\n        if (typeof color === 'string') {\n            this.finOutInputType(color);\n        }\n        this.setHueColor(newColor);\n        this.setValue(newColor);\n        return this;\n    }\n\n    private setHueColor(color: Color) {\n        if (this.hueValue && color.getHsva().hue > 0 || !this.hueValue) {\n            this.hueValue = new Color().setHsva(color.getHsva().hue);\n        }\n    }\n\n    public get hue() {\n        return this.hueValue;\n    }\n\n    /**\n     * @internal\n     * used for two-way data binding\n     */\n    public set hue(hueColor: Color) {\n        this.hueValue = hueColor;\n    }\n\n    private setValue(value: Color): this {\n        this.modelValue = value;\n        this.valueChanged.next(value);\n        return this;\n    }\n\n    public get value(): Color {\n        return this.modelValue;\n    }\n\n    /**\n     * @internal\n     * used for two-way data binding\n     */\n    public set value(value: Color) {\n        this.setValue(value);\n    }\n\n    /**\n     * reset color to initial\n     */\n    public reset(): this {\n        let color;\n        if (!this.initValue) {\n            color = Color.from(new Rgba(255, 0, 0, 1));\n            this.hueValue = new Color().setHsva(color.getHsva().hue);\n        } else {\n            color = this.initValue.clone();\n            this.setHueColor(color);\n        }\n\n        this.setValue(color);\n        return this;\n    }\n\n    public isAlphaChannelEnabled(): boolean {\n        return this.alphaChannelVisibilityChanges.value;\n    }\n\n    public showAlphaChannel(): this {\n        this.alphaChannelVisibilityChanges.next(true);\n        return this;\n    }\n\n    public hideAlphaChannel(): this {\n        this.alphaChannelVisibilityChanges.next(false);\n        return this;\n    }\n\n    private finOutInputType(colorString: ColorString) {\n        const str = colorString.replace(/ /g, '').toLowerCase();\n        if (str[0] === '#') {\n            this.initType = ColorType.hex;\n            if (str.length > 7) {\n                this.initType = ColorType.hexa;\n            }\n        }\n\n        const OpenParenthesis = str.indexOf('(');\n        const colorTypeName = str.substr(0, OpenParenthesis);\n        switch (colorTypeName) {\n            case ColorType.rgba:\n                this.initType = ColorType.rgba;\n                break;\n            case ColorType.rgb:\n                this.initType = ColorType.rgb;\n                break;\n            case ColorType.hsla:\n                this.initType = ColorType.hsla;\n                break;\n            case ColorType.hsl:\n                this.initType = ColorType.hsl;\n                break;\n            case ColorType.cmyk:\n                this.initType = ColorType.cmyk;\n                break;\n        }\n    }\n\n    public setColorPresets(colorPresets: Array<Array<ColorString> | ColorString>): this {\n        this.colorPresets = this.setPresets(colorPresets);\n        return this;\n    }\n\n    private setPresets(colorPresets: Array<Array<ColorString> | ColorString>): Array<Color> {\n        const presets = [];\n\n        for (const color of colorPresets) {\n            if (Array.isArray(color)) {\n                presets.push(this.setPresets(color));\n            } else {\n                presets.push(new Color(color));\n            }\n        }\n        return presets;\n    }\n\n    public get presets() {\n        return this.colorPresets;\n    }\n\n    public hasPresets(): boolean {\n        return this.colorPresets.length > 0;\n    }\n\n    public isPresetVisible(): boolean {\n        return this.presetsVisibilityChanges.value;\n    }\n\n    public showPresets(): this {\n        this.presetsVisibilityChanges.next(true);\n        return this;\n    }\n\n    public hidePresets(): this {\n        this.presetsVisibilityChanges.next(false);\n        return this;\n    }\n\n    /**\n     * complete emit on all observers\n     */\n    public unsubscribe(): void {\n        this.valueChanged.complete();\n        this.presetsVisibilityChanges.complete();\n    }\n}\n","import { Color } from './color.class';\nimport { ColorType } from './control.class';\n\n\nexport function getValueByType(color: Color, type: ColorType): string {\n    switch(type) {\n        case ColorType.hex:\n            return color.toHexString();\n        case ColorType.hexa:\n            return color.toHexString(true);\n        case ColorType.rgb:\n            return color.toRgbString();\n        case ColorType.rgba:\n            return color.toRgbaString();\n        case ColorType.hsl:\n            return color.toHslString();\n        case ColorType.hsla:\n            return color.toHslaString();\n        default:\n            return color.toRgbaString();\n    }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ChangeDetectionStrategy, OnDestroy, OnChanges, ChangeDetectorRef } from '@angular/core';\nimport { ColorString } from './../../helpers/color.class';\nimport { ColorPickerControl } from './../../helpers/control.class';\nimport { getValueByType } from './../../helpers/helper.functions';\n\n@Component({\n    selector: `chrome-picker`,\n    templateUrl: `./chrome-picker.component.html`,\n    styleUrls: [\n        `./../parts/base.style.scss`,\n        `./chrome-picker.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ChromePickerComponent implements OnInit, OnChanges, OnDestroy {\n\n    public selectedPresentation: number = 0;\n    public presentations = ['rgba', 'hsla', 'hex'];\n\n    @Input()\n    public color: string;\n\n    @Input()\n    public control: ColorPickerControl;\n\n    @Output()\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\n\n    constructor(private readonly cdr: ChangeDetectorRef) {\n    }\n\n    public ngOnInit(): void {\n        if (!this.control) {\n            this.control = new ColorPickerControl();\n        }\n\n        if (this.color) {\n            this.control.setValueFrom(this.color);\n        }\n\n        /**\n         * set color presets\n         * defined by this chrome color picker component\n         */\n        if(!this.control.hasPresets()) {\n            this.control\n            .setColorPresets([\n                ['#f44336', '#ffebee', '#ffcdd2', '#EF9A9A', '#E57373', '#EF5350', '#F44336', '#E53935', '#D32F2F', '#C62828', '#B71C1C'],\n                ['#E91E63', '#fce4ec', '#f8bbd0', '#f48fb1', '#f06292', '#ec407a', '#e91e63', '#d81b60', '#c2185b', '#ad1457', '#880e4f'],\n                ['#9C27B0', '#F3e5f5', '#e1bee7', '#ce93d8', '#ba68c8', '#ab47bc', '#9c27b0', '#8e24aa', '#7b1fa2', '#6a1b9a', '#4a148c'],\n                ['#673AB7', '#ede7f6', '#d1c4e9', '#b39ddb', '#9575cd', '#7e57c2', '#673ab7', '#5e35b1', '#512da8', '#4527a0', '#311b92'],\n                ['#3F51B5', '#e8eaf6', '#c5cae9', '#9fa8da', '#7986cb', '#5c6bc0', '#3f51b5', '#3949ab', '#303f9f', '#283593', '#1a237e'],\n                ['#2196F3', '#e3f2fd', '#bbdefb', '#90caf9', '#64b5f6', '#42a5f5', '#2196f3', '#1e88e5', '#1976d2', '#1565c0', '#0D47a1'],\n                ['#03A9F4', '#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b'],\n                ['#00BCD4', '#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064'],\n                ['#009688', '#E0F2f1', '#b2dfdb', '#80cbc4', '#4db6ac', '#26a69a', '#009688', '#00897b', '#00796b', '#00695c', '#004d40'],\n                ['#4CAF50', '#e8f5e9', '#c8e6c9', '#a5d6a7', '#81c784', '#66bb6a', '#4caf50', '#43a047', '#388e3c', '#2e7d32', '#1b5e20'],\n                ['#8BC34A', '#f1f8e9', '#dcedc8', '#c5e1a5', '#aed581', '#9ccc65', '#8bc34a', '#7cb342', '#689f38', '#558b2f', '#33691e'],\n                ['#cddc39', '#f9fbe7', '#f0f4c3', '#e6ee9c', '#dce775', '#d4e157', '#c0dc39', '#c0ca33', '#afb42b', '#9e9d24', '#827717'],\n                ['#ffeb3b', '#fffde7', '#fff9c4', '#fff59d', '#fff176', '#ffee58', '#ffeb3b', '#fdd835', '#fbc02d', '#f9a825', '#f57f17'],\n                ['#ffc107', '#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00'],\n                ['#ff9800', '#fff3e0', '#ffe0b2', '#ffcc80', '#ffb74d', '#ffa726', '#ff9800', '#fb8c00', '#f57c00', '#ef6c00', '#e65100'],\n                ['#ff5722', '#fbe9e7', '#ffccbc', '#ffab91', '#ff8a65', '#ff7043', '#ff5722', '#f4511e', '#e64a19', '#d84315', '#bf360c'],\n                ['#795548', '#efebe9', '#d7ccc8', '#bcaaa4', '#a1887f', '#8d6e63', '#795548', '#6d4c41', '#5d4037', '#4e342e', '#3e2723'],\n                ['#9e9e9e', '#fafafa', '#f5f5f5', '#eee', '#e0e0e0', '#bdbdbd', '#9e9e9e', '#757575', '#616161', '#424242', '#212121'],\n                ['#607d8b', '#eceff1', '#cfd8dc', '#b0bec5', '#90a4ae', '#78909c', '#60708b', '#546e7a', '#455a64', '#37474f', '#263238']\n            ]);\n        }\n\n        this.control.valueChanges.subscribe((value) => {\n            this.cdr.markForCheck();\n            this.colorChange.emit(getValueByType(value, this.control.initType));\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.control.unsubscribe();\n        this.cdr.detach();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\n            this.control.setValueFrom(this.color);\n        }\n    }\n\n    public changePresentation(): void {\n        this.selectedPresentation =\n            this.selectedPresentation === this.presentations.length - 1 ? 0 : this.selectedPresentation + 1;\n    }\n\n}","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    SimpleChanges,\n    ChangeDetectionStrategy,\n    OnChanges,\n    OnDestroy,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { ColorString } from './../../helpers/color.class';\nimport { ColorPickerControl } from './../../helpers/control.class';\nimport { getValueByType } from './../../helpers/helper.functions';\n\n@Component({\n    selector: `sketch-picker`,\n    templateUrl: `./sketch-picker.component.html`,\n    styleUrls: [\n        `./../parts/base.style.scss`,\n        `./sketch-picker.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SketchPickerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    public color: string;\n\n    @Input()\n    public control: ColorPickerControl;\n\n    @Output()\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\n\n    constructor(private readonly cdr: ChangeDetectorRef) {\n    }\n\n    public ngOnInit(): void {\n        if (!this.control) {\n            this.control = new ColorPickerControl();\n        }\n\n        if (this.color) {\n            this.control.setValueFrom(this.color);\n        }\n\n        if (!this.control.hasPresets()) {\n            /**\n             * set color presets\n             * defined by sketch color picker component\n             */\n            this.control\n            .setColorPresets([\n                '#d0041b', '#8b572a', '#f5a623', '#f8e71c', '#7ed321', '#417506', '#bd10e0', '#9013fe',\n                '#4a90e2', '#50e3c2', '#b8e986', '#030303', '#4a4a4a', '#9b9b9b', '#fff'\n            ]);\n        }\n\n        this.control.valueChanges.subscribe((value) => {\n            this.cdr.markForCheck();\n            this.colorChange.emit(getValueByType(value, this.control.initType));\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.control.unsubscribe();\n        this.cdr.detach();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\n            this.control.setValueFrom(this.color);\n        }\n    }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ChangeDetectionStrategy, OnChanges, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { Color, ColorString } from './../../helpers/color.class';\nimport { ColorPickerControl } from './../../helpers/control.class';\nimport { getValueByType } from './../../helpers/helper.functions';\n\n@Component({\n    selector: `compact-picker`,\n    templateUrl: `./compact-picker.component.html`,\n    styleUrls: [\n        `./../parts/base.style.scss`,\n        `./compact-picker.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CompactPickerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    public color: string;\n\n    @Input()\n    public control: ColorPickerControl;\n\n    @Output()\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\n\n    constructor(private readonly cdr: ChangeDetectorRef) {\n    }\n\n    public ngOnInit(): void {\n        if (!this.control) {\n            this.control = new ColorPickerControl();\n        }\n\n        if (this.color) {\n            this.control.setValueFrom(this.color);\n        }\n\n        /**\n         * set color presets\n         * defined by compact color picker component\n         */\n        if(!this.control.hasPresets()) {\n            this.control\n            .setColorPresets([\n                '#6da6e8', '#74c283', '#f9d948', '#f5943f', '#f66c6c', '#ef8ab8', '#696cd4', '#6c6c6c', '#f6f5f5'\n            ]);\n        }\n\n        this.control.valueChanges.subscribe((value) => {\n            this.cdr.markForCheck();\n            this.colorChange.emit(getValueByType(value, this.control.initType));\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.control.unsubscribe();\n        this.cdr.detach();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\n            this.control.setValueFrom(this.color);\n        }\n    }\n}","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, ChangeDetectionStrategy, OnDestroy, ChangeDetectorRef, HostBinding } from '@angular/core';\nimport { ColorString } from './../../helpers/color.class';\nimport { ColorPickerControl } from './../../helpers/control.class';\nimport { getValueByType } from './../../helpers/helper.functions';\n\n@Component({\n    selector: `github-picker`,\n    templateUrl: `./github-picker.component.html`,\n    styleUrls: [\n        `./../parts/base.style.scss`,\n        `./github-picker.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GithubPickerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    public color: string;\n\n    @Input()\n    public control: ColorPickerControl;\n\n    @Input()\n    public columns: number | 'auto' = 8;\n\n    @Output()\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\n\n    @HostBinding('style.width') get widht() {\n        return this.columns === 'auto' ? `auto` : `${25 * this.columns + 12}px`;\n    }\n\n    public get columnsCount() {\n        return this.columns === 'auto' ? this.control.presets.length : this.columns;\n    }\n\n    constructor(private readonly cdr: ChangeDetectorRef) {\n    }\n\n    public ngOnInit(): void {\n        if (!this.control) {\n            this.control = new ColorPickerControl();\n        }\n\n        if (this.color) {\n            this.control.setValueFrom(this.color);\n        }\n\n        if(!this.control.hasPresets()) {\n            /**\n             * set color presets\n             * defined by github color picker component\n             */\n            this.control\n            .setColorPresets([\n                '#b80000', '#db3e00', '#fccb00', '#008b02', '#006b76', '#1273de', '#004dcf', '#5300eb',\n                '#eb9694', '#fad0c3', '#fef3bd', '#c1e1c5', '#bedadc', '#c4def6', '#bed3f3', '#d4c4fb'\n            ]);\n        }\n\n        this.control.valueChanges.subscribe((value) => {\n            this.cdr.markForCheck();\n            this.colorChange.emit(getValueByType(value, this.control.initType));\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.control.unsubscribe();\n        this.cdr.detach();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\n            this.control.setValueFrom(this.color);\n        }\n    }\n}","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    SimpleChanges,\n    ChangeDetectionStrategy,\n    OnDestroy,\n    ChangeDetectorRef,\n    OnChanges\n} from '@angular/core';\nimport { ColorString } from './../../helpers/color.class';\nimport { ColorPickerControl } from './../../helpers/control.class';\nimport { getValueByType } from './../../helpers/helper.functions';\n\n@Component({\n    selector: `swatches-picker`,\n    templateUrl: `./swatches-picker.component.html`,\n    styleUrls: [\n        `./../parts/base.style.scss`,\n        `./swatches-picker.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SwatchesPickerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    public color: string;\n\n    @Output()\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\n\n    public control: ColorPickerControl = new ColorPickerControl();\n    public childControl: ColorPickerControl = new ColorPickerControl();\n\n    private mapColors = {\n        '#E6315B': [\n            '#fc8da7', '#fa7d9a', '#f56484', '#f04a71', '#e82c58', '#e31746', '#de0235',\n            '#d60234', '#d10232', '#c70230', '#b8022c', '#ab0229', '#9c0225', '#8f0122',\n            '#8c0122', '#82011f', '#78011b', '#690117', '#5c0012', '#4f0010', '#42000c'\n        ],\n        '#793183': [\n            '#ef8dfc', '#eb7dfa', '#e664f5', '#dc4af0', '#d22ce8', '#cb17e3', '#c402de',\n            '#c002d9', '#bb02d4', '#b002c7', '#a202b8', '#9702ab', '#8a029c', '#7e018f',\n            '#7a018a', '#730182', '#6c0178', '#5e0169', '#54015c', '#49014f', '#3d0142'\n        ],\n        '#009DE7': [\n            '#8dd9fc', '#7dd2fa', '#64c7f5', '#4abbf0', '#2cade8', '#17a2e3', '#0298de',\n            '#0295d9', '#0291d4', '#0289c7', '#027eb8', '#0275ab', '#026b9c', '#01628f',\n            '#015f8a', '#015982', '#015278', '#014869', '#013f5c', '#01364f', '#012e42'\n        ],\n        '#00B59C': [\n            '#8dfeea', '#7dfbe4', '#63f4db', '#4befd2', '#2de7c6', '#16e2be', '#03deb7', \n            '#01ddb6', '#01d4ae', '#01c7a4', '#01b897', '#01aa8b', '#019b80', '#019076', \n            '#018c73', '#01836c', '#017763', '#016857', '#005c4e', '#005044', '#004239'\n        ],\n        '#FFCE00': [\n            '#fce68d', '#fae17d', '#f5da64', '#f0cf4a', '#e8c22c', '#e5bc17', '#deb202',\n            '#deb100', '#d4aa02', '#c7a002', '#b89302', '#ab8902', '#9c7d02', '#8f7301',\n            '#8c7001', '#826801', '#786201', '#695601', '#5c4b00', '#4f4100', '#423700'\n        ],\n        '#FF4A21': [\n            '#fca28d', '#fa947d', '#f57f64', '#f0694a', '#e84f2c', '#e33c17', '#de2a02',\n            '#d92a02', '#d42902', '#c72602', '#b82302', '#ab2102', '#9c1e02', '#8f1b01',\n            '#8a1a01', '#821901', '#781701', '#691300', '#5c1100', '#4f0e00', '#420c00'\n        ],\n        '#D6D5D6': [\n            '#fff', '#f2f2f2', '#e5e5e5', '#d9d9d9', '#cccccc', '#bfbfbf', '#b3b3b3', \n            '#a6a6a6', '#999999', '#8c8c8c', '#808080', '#737373', '#666666', '#595959', \n            '#4d4d4d', '#424242', '#363636', '#262626', '#1a1a1a', '#0f0f0f', '#000'\n        ]\n    };\n\n    constructor(private readonly cdr: ChangeDetectorRef) {\n    }\n\n    public ngOnInit(): void {\n        if (this.color) {\n            this.childControl.setValueFrom(this.color);\n        } else {\n            this.control.setValueFrom('#E6315B');\n        }\n\n        /**\n         * set color presets\n         * defined by swatches color picker component\n         */\n        this.control.setColorPresets([\n            '#e6315b', '#793183', '#009de7', '#00b59c', '#ffce00', '#ff4a21', '#d6d5d6'\n        ]);\n\n        /**\n         * initially open first group\n         */\n        this.childControl.setColorPresets(this.mapColors['#E6315B']);\n\n        this.childControl.valueChanges.subscribe((value) => {\n            this.colorChange.emit(getValueByType(value, this.childControl.initType));\n        });\n\n        this.control.valueChanges.subscribe((value) => {\n            this.cdr.markForCheck();\n            const presets = this.mapColors[value.toHexString()];\n            if (presets) {\n                this.childControl.setColorPresets(presets);\n            }\n            this.colorChange.emit(getValueByType(this.childControl.value, this.childControl.initType));\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.control.unsubscribe();\n        this.childControl.unsubscribe();\n        this.cdr.detach();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\n            this.childControl.setValueFrom(this.color);\n        }\n    }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ChangeDetectionStrategy, OnDestroy, OnChanges } from '@angular/core';\nimport { Color, ColorString } from './../../helpers/color.class';\nimport { ColorPickerControl } from './../../helpers/control.class';\nimport { getValueByType } from './../../helpers/helper.functions';\n\n@Component({\n    selector: `ip-picker`,\n    templateUrl: `./ip-picker.component.html`,\n    styleUrls: [\n        `./../parts/base.style.scss`,\n        `./ip-picker.component.scss`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IpPickerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    public color: string;\n\n    @Input()\n    public control: ColorPickerControl;\n\n    @Output()\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\n\n    constructor() {\n    }\n\n    public ngOnInit(): void {\n        if (!this.control) {\n            this.control = new ColorPickerControl();\n        }\n\n        /**\n         * set color presets\n         * defined by this chrome color picker component\n         */\n        if(!this.control.hasPresets()) {\n            this.control.setColorPresets([\n                ['#f44336', '#ffebee', '#ffcdd2', '#EF9A9A', '#E57373', '#EF5350', '#F44336', '#E53935', '#D32F2F', '#C62828', '#B71C1C'],\n                ['#E91E63', '#fce4ec', '#f8bbd0', '#f48fb1', '#f06292', '#ec407a', '#e91e63', '#d81b60', '#c2185b', '#ad1457', '#880e4f'],\n                ['#9C27B0', '#F3e5f5', '#e1bee7', '#ce93d8', '#ba68c8', '#ab47bc', '#9c27b0', '#8e24aa', '#7b1fa2', '#6a1b9a', '#4a148c'],\n                ['#673AB7', '#ede7f6', '#d1c4e9', '#b39ddb', '#9575cd', '#7e57c2', '#673ab7', '#5e35b1', '#512da8', '#4527a0', '#311b92'],\n                ['#3F51B5', '#e8eaf6', '#c5cae9', '#9fa8da', '#7986cb', '#5c6bc0', '#3f51b5', '#3949ab', '#303f9f', '#283593', '#1a237e'],\n                ['#2196F3', '#e3f2fd', '#bbdefb', '#90caf9', '#64b5f6', '#42a5f5', '#2196f3', '#1e88e5', '#1976d2', '#1565c0', '#0D47a1'],\n                ['#03A9F4', '#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b'],\n                ['#00BCD4', '#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064'], \n                ['#009688', '#E0F2f1', '#b2dfdb', '#80cbc4', '#4db6ac', '#26a69a', '#009688', '#00897b', '#00796b', '#00695c', '#004d40'],\n                ['#4CAF50', '#e8f5e9', '#c8e6c9', '#a5d6a7', '#81c784', '#66bb6a', '#4caf50', '#43a047', '#388e3c', '#2e7d32', '#1b5e20'],\n                ['#8BC34A', '#f1f8e9', '#dcedc8', '#c5e1a5', '#aed581', '#9ccc65', '#8bc34a', '#7cb342', '#689f38', '#558b2f', '#33691e'],\n                ['#cddc39', '#f9fbe7', '#f0f4c3', '#e6ee9c', '#dce775', '#d4e157', '#c0dc39', '#c0ca33', '#afb42b', '#9e9d24', '#827717'],\n                ['#ffeb3b', '#fffde7', '#fff9c4', '#fff59d', '#fff176', '#ffee58', '#ffeb3b', '#fdd835', '#fbc02d', '#f9a825', '#f57f17'],\n                ['#ffc107', '#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00'],\n                ['#ff9800', '#fff3e0', '#ffe0b2', '#ffcc80', '#ffb74d', '#ffa726', '#ff9800', '#fb8c00', '#f57c00', '#ef6c00', '#e65100'],\n                ['#ff5722', '#fbe9e7', '#ffccbc', '#ffab91', '#ff8a65', '#ff7043', '#ff5722', '#f4511e', '#e64a19', '#d84315', '#bf360c'],\n                ['#795548', '#efebe9', '#d7ccc8', '#bcaaa4', '#a1887f', '#8d6e63', '#795548', '#6d4c41', '#5d4037', '#4e342e', '#3e2723'],\n                ['#9e9e9e', '#fafafa', '#f5f5f5', '#eee', '#e0e0e0', '#bdbdbd', '#9e9e9e', '#757575', '#616161', '#424242', '#212121'],\n                ['#607d8b', '#eceff1', '#cfd8dc', '#b0bec5', '#90a4ae', '#78909c', '#60708b', '#546e7a', '#455a64', '#37474f', '#263238']\n            ]);\n        }\n\n        if (this.color) {\n            this.control.setValueFrom(this.color);\n        }\n\n        this.control.valueChanges.subscribe((value) => {\n            this.colorChange.emit(getValueByType(value, this.control.initType));\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.control.unsubscribe();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\n            this.control.setValueFrom(this.color);\n        }\n    }\n\n}","/*\n * ngx-color-picker\n * \n * By Ivan Pintar, http://www.pintar-ivan.com\n * Licensed under the MIT License\n * See https://github.com/pIvan/ngx-color-picker/blob/master/README.md\n */\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * parts\n */\nimport { SaturationComponent } from './components/parts/saturation/saturation.component';\nimport { IndicatorComponent } from './components/parts/indicator/indicator.component';\nimport { HueComponent } from './components/parts/hue/hue.component';\nimport { AlphaComponent } from './components/parts/alpha/alpha.component';\nimport { RgbaComponent } from './components/parts/inputs/rgba-input/rgba-input.component';\nimport { HslaComponent } from './components/parts/inputs/hsla-input/hsla-input.component';\nimport { HexComponent } from './components/parts/inputs/hex-input/hex-input.component';\nimport { ColorPresetsComponent } from './components/parts/color-presets/color-presets.component';\nimport { ColorPresetComponent } from './components/parts/color-preset/color-preset.component';\nimport { ColorPresetSublist } from './components/parts/color-preset-sublist/color-preset-sublist.component';\n\n/**\n * directives\n */\nimport { ColorPickerInputDirective } from './directives/color-picker-input.directive';\n\n/**\n * pipes\n */\nimport { ChunksPipe } from './pipes/chunks.pipe';\nimport { ReversePipe } from './pipes/reverse.pipe';\n\n/**\n * pickers\n */\nimport { ChromePickerComponent } from './components/chrome-picker/chrome-picker.component';\nimport { SketchPickerComponent } from './components/sketch-picker/sketch-picker.component';\nimport { CompactPickerComponent } from './components/compact-picker/compact-picker.component';\nimport { GithubPickerComponent } from './components/github-picker/github-picker.component';\nimport { SwatchesPickerComponent } from './components/swatches-picker/swatches-picker.component';\nimport { IpPickerComponent } from './components/ip-picker/ip-picker.component';\n\n/**\n * services\n */\nimport { ColorPickerConfig, IColorPickerConfig } from './services/color-picker.service';\n\n/**\n * exports\n */\nexport { Color } from './helpers/color.class';\nexport { ColorPickerControl } from './helpers/control.class';\nexport { ColorsTable } from './helpers/colors-table.class';\nexport { IColorPickerConfig } from './services/color-picker.service';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    providers: [\n        ColorPickerConfig\n    ],\n    declarations: [\n        SaturationComponent,\n        IndicatorComponent,\n        HueComponent,\n        AlphaComponent,\n\n        RgbaComponent,\n        HslaComponent,\n        HexComponent,\n\n        ColorPresetsComponent,\n        ColorPresetComponent,\n        ColorPresetSublist,\n\n        ColorPickerInputDirective,\n        ChunksPipe,\n        ReversePipe,\n\n        /**\n         * prepared components\n         */\n        ChromePickerComponent,\n        SketchPickerComponent,\n        SwatchesPickerComponent,\n        GithubPickerComponent,\n        CompactPickerComponent,\n        IpPickerComponent\n    ],\n    exports: [\n        SaturationComponent,\n        IndicatorComponent,\n        HueComponent,\n        AlphaComponent,\n\n        RgbaComponent,\n        HslaComponent,\n        HexComponent,\n\n        ColorPresetsComponent,\n\n        ChromePickerComponent,\n        SketchPickerComponent,\n        SwatchesPickerComponent,\n        GithubPickerComponent,\n        CompactPickerComponent,\n        IpPickerComponent\n    ],\n    entryComponents: [\n    ]\n})\nexport class ColorPickerModule {\n\n    public static forRoot(configuration?: IColorPickerConfig): ModuleWithProviders {\n        return {\n            ngModule: ColorPickerModule,\n            providers: [\n                { provide: ColorPickerConfig, useClass: configuration || ColorPickerConfig }\n            ]\n        };\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {ChromePickerComponent as Éµr} from './components/chrome-picker/chrome-picker.component';\nexport {CompactPickerComponent as Éµv} from './components/compact-picker/compact-picker.component';\nexport {GithubPickerComponent as Éµu} from './components/github-picker/github-picker.component';\nexport {IpPickerComponent as Éµw} from './components/ip-picker/ip-picker.component';\nexport {AlphaComponent as Éµf} from './components/parts/alpha/alpha.component';\nexport {BaseComponent as Éµc} from './components/parts/base.component';\nexport {ListAnimation as Éµn,OpacityAnimation as Éµm} from './components/parts/color-preset-sublist/color-preset-sublist.animation';\nexport {ColorPresetSublist as Éµl} from './components/parts/color-preset-sublist/color-preset-sublist.component';\nexport {ColorPresetComponent as Éµk} from './components/parts/color-preset/color-preset.component';\nexport {ColorPresetsComponent as Éµj} from './components/parts/color-presets/color-presets.component';\nexport {HueComponent as Éµe} from './components/parts/hue/hue.component';\nexport {IndicatorComponent as Éµd} from './components/parts/indicator/indicator.component';\nexport {HexComponent as Éµi} from './components/parts/inputs/hex-input/hex-input.component';\nexport {HslaComponent as Éµh} from './components/parts/inputs/hsla-input/hsla-input.component';\nexport {RgbaComponent as Éµg} from './components/parts/inputs/rgba-input/rgba-input.component';\nexport {SaturationComponent as Éµb} from './components/parts/saturation/saturation.component';\nexport {SketchPickerComponent as Éµs} from './components/sketch-picker/sketch-picker.component';\nexport {SwatchesPickerComponent as Éµt} from './components/swatches-picker/swatches-picker.component';\nexport {ColorPickerInputDirective as Éµo} from './directives/color-picker-input.directive';\nexport {BaseColor as Éµy} from './helpers/base-color.class';\nexport {Rgba as Éµx} from './helpers/rgba.class';\nexport {ChunksPipe as Éµp} from './pipes/chunks.pipe';\nexport {ReversePipe as Éµq} from './pipes/reverse.pipe';\nexport {ColorPickerConfig as Éµa} from './services/color-picker.service';"],"names":["tslib_1.__extends","tslib_1.__decorate","tslib_1.__param","tslib_1.__values"],"mappings":"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AAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAA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AS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;gBACzH,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SA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"}